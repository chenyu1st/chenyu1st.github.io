<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker安装一套中间件</title>
      <link href="/2020/06/07/docker/docker-install-middleware/"/>
      <url>/2020/06/07/docker/docker-install-middleware/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>领导要我部署压测环境中间件，一套中间件以往都是建3台虚拟机，但是我这次想用docker部署，合理利用docker提高资源利用率以及维护方便。</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h2><ul><li>cpu:8c </li><li>内存:32g </li><li>硬盘:100g</li></ul><h2 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><ul><li>centos:7.6 </li><li>docker:19.03 </li><li>nacos:1.1.3  只做配置中心  单机</li><li>zk:3.4 只做注册中心   集群 </li><li>rocketmq:4.3.2 只做消息队列 集群</li><li>redis 5.0 缓存  集群</li></ul><h2 id="本地端口规划"><a href="#本地端口规划" class="headerlink" title="本地端口规划"></a>本地端口规划</h2><ul><li>nacos：8848</li><li>zk：<br>zoo1:2181<br>zoo2:2182<br>zoo3:2183</li><li>dubbo-admin:8080</li><li>rocketmq：<br>rmqnamesrv-a:9876<br>rmqnamesrv-b:9877<br>rmqbroker-a:10911<br>rmqbroker-b:10909<br>rmqconsole:9001</li><li>redis:{7010,7011,7012,7013,7014,7015}</li></ul><p>部署之前先确保以上端口没有被占用</p><h2 id="文件夹目录"><a href="#文件夹目录" class="headerlink" title="文件夹目录"></a>文件夹目录</h2><p>存放配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@vm-26-21 ~]# mkdir -vp &#x2F;opt&#x2F;&#123;rocketmq4.3.2&#123;&#x2F;broker-a,&#x2F;broker-b&#125;,zookeeper&#125;</span><br><span class="line">[root@vm-26-21 ~]# cd &#x2F;opt</span><br><span class="line">[root@vm-26-21 opt]# tree</span><br><span class="line">├── rocketmq4.3.2</span><br><span class="line">│   ├── broker-a</span><br><span class="line">│   │   └── broker-a.conf</span><br><span class="line">│   ├── broker-b</span><br><span class="line">│   │   └── broker-b.conf</span><br><span class="line">│   └── mq.yml</span><br><span class="line">└── zookeeper</span><br><span class="line">    └── zk.yml</span><br></pre></td></tr></table></figure><hr><p>日志挂载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@vm-26-21 ~]# mkdir -vp &#x2F;data&#x2F;&#123;rocketmq4.3.2,zookeeper&#125;</span><br><span class="line">[root@vm-26-21 ~]# cd &#x2F;opt</span><br><span class="line">[root@vm-26-21 data]# tree</span><br><span class="line">├── rocketmq4.3.2</span><br><span class="line">└── zookeeper</span><br></pre></td></tr></table></figure><h1 id="nacos"><a href="#nacos" class="headerlink" title="nacos"></a>nacos</h1><p>我的部署方式是单机，因为只是当作配置中心而已，也是线下配置，不做持久化，只要机器足够稳定（不关机/不删除）我nacos都启动了1年，啥事没有。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull nacos&#x2F;nacos-server:1.1.3</span><br><span class="line">docker run --env MODE&#x3D;standalone --name nacos --restart always -d -p 8848:8848 nacos&#x2F;nacos-server:1.1.3</span><br><span class="line">启动成功后访问http:&#x2F;&#x2F;ip:8848&#x2F;nacos  </span><br><span class="line">账号密码为nacos&#x2F;nacos</span><br></pre></td></tr></table></figure><p>如果你的目的是做注册中心以及在生产环境等重要的环境部署，则需要用持久化部署，无论是docker或者物理部署，都需要一个数据库，具体部署过程我就不详细写了，直接看官网，足够详细。</p><p><a href="https://rugod.cn/2020/05/14/slb/slb-nacos/" target="_blank" rel="noopener">实现负载均衡器搭配Nacos集群的高可用框架</a></p><p><a href="https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html" target="_blank" rel="noopener">nacos官网</a></p><h1 id="zk"><a href="#zk" class="headerlink" title="zk"></a>zk</h1><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>vim /opt/zookeeper/zk.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;3.1&#39;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  zoo1:</span><br><span class="line">    image: zookeeper</span><br><span class="line">    restart: always</span><br><span class="line">    hostname: zoo1</span><br><span class="line">    ports:</span><br><span class="line">      - 2181:2181</span><br><span class="line">    environment:</span><br><span class="line">      ZOO_MY_ID: 1</span><br><span class="line">      ZOO_SERVERS: server.1&#x3D;0.0.0.0:2888:3888;2181 server.2&#x3D;zoo2:2888:3888;2181 server.3&#x3D;zoo3:2888:3888;2181</span><br><span class="line">    volumes:</span><br><span class="line">    - &#x2F;data&#x2F;zookeeper&#x2F;1&#x2F;:&#x2F;data    </span><br><span class="line">  zoo2:</span><br><span class="line">    image: zookeeper</span><br><span class="line">    restart: always</span><br><span class="line">    hostname: zoo2</span><br><span class="line">    ports:</span><br><span class="line">      - 2182:2181</span><br><span class="line">    environment:</span><br><span class="line">      ZOO_MY_ID: 2</span><br><span class="line">      ZOO_SERVERS: server.1&#x3D;zoo1:2888:3888;2181 server.2&#x3D;0.0.0.0:2888:3888;2181 server.3&#x3D;zoo3:2888:3888;2181</span><br><span class="line">    volumes:</span><br><span class="line">    - &#x2F;data&#x2F;zookeeper&#x2F;2&#x2F;:&#x2F;data   </span><br><span class="line">    </span><br><span class="line">  zoo3:</span><br><span class="line">    image: zookeeper</span><br><span class="line">    restart: always</span><br><span class="line">    hostname: zoo3</span><br><span class="line">    ports:</span><br><span class="line">      - 2183:2181</span><br><span class="line">    environment:</span><br><span class="line">      ZOO_MY_ID: 3</span><br><span class="line">      ZOO_SERVERS: server.1&#x3D;zoo1:2888:3888;2181 server.2&#x3D;zoo2:2888:3888;2181 server.3&#x3D;0.0.0.0:2888:3888;2181</span><br><span class="line">    volumes:</span><br><span class="line">    - &#x2F;data&#x2F;zookeeper&#x2F;3&#x2F;:&#x2F;data   </span><br><span class="line">  admin:</span><br><span class="line">    image: chenchuxin&#x2F;dubbo-admin</span><br><span class="line">    container_name: dubbo-admin</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    environment:</span><br><span class="line">      - dubbo.registry.address&#x3D;zookeeper:&#x2F;&#x2F;$&#123;ip&#125;:2181</span><br><span class="line">      - dubbo.admin.root.password&#x3D;root</span><br><span class="line">      - dubbo.admin.guest.password&#x3D;guest</span><br><span class="line"></span><br><span class="line">注意点：</span><br><span class="line">1.要把dubbo.registry.address&#x3D;zookeeper:&#x2F;&#x2F;$&#123;ip&#125;:2181中的ip填为本机ip（不是容器ip）</span><br><span class="line">2.zk挂载的目录是&#x2F;data&#x2F;zookeeper&#x2F;&#123;1,2,3&#125;&#x2F;下 可以根据需求情况进行调整</span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f zk.yml up -d</span><br></pre></td></tr></table></figure><p>查看docker进程，并且打开dubbo-admin地址：</p><p>http://${ip}:8080<br>账号密码root/root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line">ecd8e83e8386        chenchuxin&#x2F;dubbo-admin     &quot;catalina.sh run&quot;        38 seconds ago      Up 37 seconds       0.0.0.0:8080-&gt;8080&#x2F;tcp                                 dubbo-admin</span><br><span class="line">a3265cddc63a        zookeeper                  &quot;&#x2F;docker-entrypoint.…&quot;   2 minutes ago       Up 37 seconds       2888&#x2F;tcp, 3888&#x2F;tcp, 8080&#x2F;tcp, 0.0.0.0:2182-&gt;2181&#x2F;tcp   zoo2</span><br><span class="line">1bcea74a1647        zookeeper                  &quot;&#x2F;docker-entrypoint.…&quot;   2 minutes ago       Up 37 seconds       2888&#x2F;tcp, 3888&#x2F;tcp, 8080&#x2F;tcp, 0.0.0.0:2183-&gt;2181&#x2F;tcp   zoo3</span><br><span class="line">ab4f3f15ce5e        zookeeper                  &quot;&#x2F;docker-entrypoint.…&quot;   2 minutes ago       Up 37 seconds       2888&#x2F;tcp, 3888&#x2F;tcp, 0.0.0.0:2181-&gt;2181&#x2F;tcp, 8080&#x2F;tcp   zoo1</span><br></pre></td></tr></table></figure><h1 id="rocketmq"><a href="#rocketmq" class="headerlink" title="rocketmq"></a>rocketmq</h1><h2 id="集群方式对比"><a href="#集群方式对比" class="headerlink" title="集群方式对比"></a>集群方式对比</h2><ul><li>多 master 模式<br>多个 master 节点组成集群，单个 master 节点宕机或者重启对应用没有影响。</li></ul><p>优点：性能最高<br>缺点：单个 master节点宕机期间，未被消费的消息在节点恢复之前不可用，消息的实时性就受到影响。<br>注意：使用同步刷盘可以保证消息不丢失，同时 Topic 相对应的 queue 应该分布在集群中各个节点，而不是只在某各节点上，否则，该节点宕机会对订阅该 topic 的应用造成影响。</p><ul><li>多 master 多 slave 异步复制模式<br>在多 master 模式的基础上，每个 master 节点都有至少一个对应的 slave，master<br>节点可读可写，但是 slave 只能读不能写，类似于 mysql 的主备模式。</li></ul><p>优点： 在 master 宕机时，消费者可以从 slave 读取消息，消息的实时性不会受影响，性能几乎和多 master 一样。<br>缺点：使用异步复制的同步方式有可能会有消息丢失的问题。</p><ul><li>多 master 多 slave 同步双写模式<br>同多 master 多 slave 异步复制模式类似，区别在于 master 和 slave 之间的数据同步方式。</li></ul><p>优点：同步双写的同步模式能保证数据不丢失。<br>缺点：发送单个消息 RT 会略长，性能相比异步复制低10%左右。</p><p>压测环境，我希望最大的利用中间件的性能，观察项目在高并发场景下的瓶颈（其实不用观察，大部分出在项目内部，都不会把中间件压垮，懂的都懂）。生产环境建议还是 多主多从异步复制模式。</p><h2 id="创建配置文件-1"><a href="#创建配置文件-1" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>添加broker-a的配置信息</p><p>vim /opt/rocketmq4.3.2/broker-a/broker-a.conf</p><p>${ip}为你本机ip,注意更换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">brokerClusterName &#x3D; rocketmq-cluster</span><br><span class="line">brokerName &#x3D; broker-a</span><br><span class="line">brokerId &#x3D; 0</span><br><span class="line">brokerIP1 &#x3D; $&#123;ip&#125;</span><br><span class="line">deleteWhen &#x3D; 04</span><br><span class="line">fileReservedTime &#x3D; 48</span><br><span class="line">namesrvAddr&#x3D; $&#123;ip&#125;:9876; $&#123;ip&#125;:9877</span><br><span class="line">autoCreateTopicEnable&#x3D;true</span><br><span class="line">#Broker 对外服务的监听端口,</span><br><span class="line">listenPort &#x3D; 10911</span><br><span class="line">#Broker角色</span><br><span class="line">#- ASYNC_MASTER 异步复制Master</span><br><span class="line">#- SYNC_MASTER 同步双写Master</span><br><span class="line">#- SLAVE</span><br><span class="line">brokerRole&#x3D;ASYNC_MASTER</span><br><span class="line">#刷盘方式</span><br><span class="line">#- ASYNC_FLUSH 异步刷盘</span><br><span class="line">#- SYNC_FLUSH 同步刷盘</span><br><span class="line">flushDiskType&#x3D;ASYNC_FLUSH</span><br></pre></td></tr></table></figure><p>添加broker-b的配置信息</p><p>vim /opt/rocketmq4.3.2/broker-b/broker-b.conf</p><p>${ip}为你本机ip,注意更换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">brokerClusterName &#x3D; rocketmq-cluster</span><br><span class="line">brokerName &#x3D; broker-b</span><br><span class="line">brokerId &#x3D; 0</span><br><span class="line">brokerIP1 &#x3D; $&#123;ip&#125;</span><br><span class="line">deleteWhen &#x3D; 04</span><br><span class="line">fileReservedTime &#x3D; 48</span><br><span class="line">namesrvAddr&#x3D;$&#123;ip&#125;:9876;$&#123;ip&#125;:9877</span><br><span class="line">autoCreateTopicEnable&#x3D;true</span><br><span class="line">#Broker 对外服务的监听端口,</span><br><span class="line">listenPort &#x3D; 10911</span><br><span class="line">#Broker角色</span><br><span class="line">#- ASYNC_MASTER 异步复制Master</span><br><span class="line">#- SYNC_MASTER 同步双写Master</span><br><span class="line">#- SLAVE</span><br><span class="line">brokerRole&#x3D;ASYNC_MASTER</span><br><span class="line">#刷盘方式</span><br><span class="line">#- ASYNC_FLUSH 异步刷盘</span><br><span class="line">#- SYNC_FLUSH 同步刷盘</span><br><span class="line">flushDiskType&#x3D;ASYNC_FLUSH</span><br></pre></td></tr></table></figure><p>添加mq集群信息<br>vim /opt/rocketmq4.3.2/mq.yml </p><p>这一步很关键</p><ul><li>首先确保你本地已经创建/data/rocketmq4.3.2目录，并且你的配置文件信息为/opt/rocketmq4.3.2/broker-a/broker-a.conf和/opt/rocketmq4.3.2/broker-b/broker-b.conf</li><li>然后你选择image的版本均为rocketmq:4.3.2，如果想选择其他版本请将下面所有4.3.2换为你更改的</li><li>端口号确认不和其他冲突，尤其是rmqconsole的端口，我本地端口设为了9001</li><li>jvm调优，根据你机器性能的情况调整 JAVA_OPT_EXT: “-server -Xms4g -Xmx4g -Xmn2g” 参数，如果你技能内存很小，这个参数也需要对应调小，否则启动不了。</li></ul><p>如果都没问题，全部复制下面配置信息即可，不需要更任何东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;3.5&#39;</span><br><span class="line">services:</span><br><span class="line">  rmqnamesrv-a:</span><br><span class="line">    image: rocketmqinc&#x2F;rocketmq:4.3.2</span><br><span class="line">    container_name: rmqnamesrv-a</span><br><span class="line">    ports:</span><br><span class="line">      - 9876:9876</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;logs&#x2F;nameserver-a:&#x2F;opt&#x2F;logs</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;store&#x2F;nameserver-a:&#x2F;opt&#x2F;store</span><br><span class="line">    environment: </span><br><span class="line">      JAVA_OPT_EXT: &quot;-server -Xms4g -Xmx4g -Xmn2g&quot;</span><br><span class="line">    command: sh mqnamesrv</span><br><span class="line">    networks:</span><br><span class="line">        rmq:</span><br><span class="line">          aliases:</span><br><span class="line">            - rmqnamesrv-a</span><br><span class="line"></span><br><span class="line">  rmqnamesrv-b:</span><br><span class="line">    image: rocketmqinc&#x2F;rocketmq:4.3.2</span><br><span class="line">    container_name: rmqnamesrv-b</span><br><span class="line">    ports:</span><br><span class="line">      - 9877:9877</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;logs&#x2F;nameserver-b:&#x2F;opt&#x2F;logs</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;store&#x2F;nameserver-b:&#x2F;opt&#x2F;store</span><br><span class="line">    environment:</span><br><span class="line">      JAVA_OPT_EXT: &quot;-server -Xms4g -Xmx4g -Xmn2g&quot;</span><br><span class="line">    command: sh mqnamesrv</span><br><span class="line">    networks:</span><br><span class="line">        rmq:</span><br><span class="line">          aliases:</span><br><span class="line">            - rmqnamesrv-b</span><br><span class="line"></span><br><span class="line">  rmqbroker-a:</span><br><span class="line">    image: rocketmqinc&#x2F;rocketmq:4.3.2</span><br><span class="line">    container_name: rmqbroker-a</span><br><span class="line">    ports:</span><br><span class="line">      - 10911:10911</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;logs&#x2F;broker-a:&#x2F;opt&#x2F;logs</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;store&#x2F;broker-a:&#x2F;opt&#x2F;store</span><br><span class="line">      - &#x2F;opt&#x2F;rocketmq4.3.2&#x2F;broker-a&#x2F;broker-a.conf:&#x2F;opt&#x2F;rocketmq-4.3.2&#x2F;conf&#x2F;broker.conf </span><br><span class="line">    environment:</span><br><span class="line">        TZ: Asia&#x2F;Shanghai</span><br><span class="line">        NAMESRV_ADDR: &quot;rmqnamesrv-a:9876&quot;</span><br><span class="line">        JAVA_OPTS: &quot; -Duser.home&#x3D;&#x2F;opt&quot;</span><br><span class="line">        JAVA_OPT_EXT: &quot;-server -Xms8g -Xmx8g -Xmn4g&quot;</span><br><span class="line">    command: sh mqbroker -c &#x2F;opt&#x2F;rocketmq-4.3.2&#x2F;conf&#x2F;broker.conf autoCreateTopicEnable&#x3D;true &amp;</span><br><span class="line">    links:</span><br><span class="line">      - rmqnamesrv-a:rmqnamesrv-a</span><br><span class="line">      - rmqnamesrv-b:rmqnamesrv-b</span><br><span class="line">    networks:</span><br><span class="line">      rmq:</span><br><span class="line">        aliases:</span><br><span class="line">          - rmqbroker-a</span><br><span class="line"></span><br><span class="line">  rmqbroker-b:</span><br><span class="line">    image: rocketmqinc&#x2F;rocketmq:4.3.2</span><br><span class="line">    container_name: rmqbroker-b</span><br><span class="line">    ports:</span><br><span class="line">      - 10909:10909</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;logs&#x2F;broker-b:&#x2F;opt&#x2F;logs</span><br><span class="line">      - &#x2F;data&#x2F;rocketmq4.3.2&#x2F;store&#x2F;broker-b:&#x2F;opt&#x2F;store</span><br><span class="line">      - &#x2F;opt&#x2F;rocketmq4.3.2&#x2F;broker-b&#x2F;broker-b.conf:&#x2F;opt&#x2F;rocketmq-4.3.2&#x2F;conf&#x2F;broker.conf </span><br><span class="line">    environment:</span><br><span class="line">        TZ: Asia&#x2F;Shanghai</span><br><span class="line">        NAMESRV_ADDR: &quot;rmqnamesrv-b:9876&quot;</span><br><span class="line">        JAVA_OPTS: &quot; -Duser.home&#x3D;&#x2F;opt&quot;</span><br><span class="line">        JAVA_OPT_EXT: &quot;-server -Xms8g -Xmx8g -Xmn4g&quot;</span><br><span class="line">    command: sh mqbroker -c &#x2F;opt&#x2F;rocketmq-4.3.2&#x2F;conf&#x2F;broker.conf autoCreateTopicEnable&#x3D;true &amp;</span><br><span class="line">    links:</span><br><span class="line">      - rmqnamesrv-a:rmqnamesrv-a</span><br><span class="line">      - rmqnamesrv-b:rmqnamesrv-b</span><br><span class="line">    networks:</span><br><span class="line">      rmq:</span><br><span class="line">        aliases:</span><br><span class="line">          - rmqbroker-b</span><br><span class="line">  rmqconsole:</span><br><span class="line">    image: styletang&#x2F;rocketmq-console-ng</span><br><span class="line">    container_name: rmqconsole</span><br><span class="line">    ports:</span><br><span class="line">      - 9001:8080</span><br><span class="line">    environment:</span><br><span class="line">        JAVA_OPTS: -Drocketmq.namesrv.addr&#x3D;rmqnamesrv-a:9876;rmqnamesrv-b:9877 -Dcom.rocketmq.sendMessageWithVIPChannel&#x3D;false -Dserver.port&#x3D;8080</span><br><span class="line">    networks:</span><br><span class="line">      rmq:</span><br><span class="line">        aliases:</span><br><span class="line">          - rmqconsole</span><br><span class="line">networks:</span><br><span class="line">  rmq:</span><br><span class="line">    name: rmq</span><br><span class="line">    driver: bridge</span><br></pre></td></tr></table></figure><h2 id="部署-1"><a href="#部署-1" class="headerlink" title="部署"></a>部署</h2><p>检查完上述注意要点，都没问题就开始部署了。<br>命令很简单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f &#x2F;opt&#x2F;rocketmq4.3.2&#x2F;mq.yml up -d</span><br></pre></td></tr></table></figure><p>然后打开rmqconsole页面 http:${ip}:9001</p><h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><p>redis集群部署参考我之前写过的文章，这里不水文了。</p><p><a href="https://rugod.cn/2020/05/27/docker/docker-install-db/" target="_blank" rel="noopener">docker安装redis集群</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这一次部署还是参考了比较多的文章，并在他们的基础上改进（添加dubbo-admin可视化工具及rmqconsole） 总体来说收获很多。话不多说，直接上部署完成的结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@vm-26-21 rocketmq4.3.2]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                                                    NAMES</span><br><span class="line">b11b4fa79636        rocketmqinc&#x2F;rocketmq:4.3.2      &quot;sh mqbroker -c &#x2F;opt…&quot;   About an hour ago   Up About an hour    9876&#x2F;tcp, 10911&#x2F;tcp, 0.0.0.0:10909-&gt;10909&#x2F;tcp            rmqbroker-b</span><br><span class="line">639ae2109d88        rocketmqinc&#x2F;rocketmq:4.3.2      &quot;sh mqbroker -c &#x2F;opt…&quot;   About an hour ago   Up About an hour    9876&#x2F;tcp, 10909&#x2F;tcp, 0.0.0.0:10911-&gt;10911&#x2F;tcp            rmqbroker-a</span><br><span class="line">7f0ae261d8dc        rocketmqinc&#x2F;rocketmq:4.3.2      &quot;sh mqnamesrv&quot;           About an hour ago   Up About an hour    10909&#x2F;tcp, 0.0.0.0:9876-&gt;9876&#x2F;tcp, 10911&#x2F;tcp             rmqnamesrv-a</span><br><span class="line">84b47ba9e473        styletang&#x2F;rocketmq-console-ng   &quot;sh -c &#39;java $JAVA_O…&quot;   About an hour ago   Up About an hour    0.0.0.0:9001-&gt;8080&#x2F;tcp                                   rmqconsole</span><br><span class="line">dd43db2703fe        rocketmqinc&#x2F;rocketmq:4.3.2      &quot;sh mqnamesrv&quot;           About an hour ago   Up About an hour    9876&#x2F;tcp, 10909&#x2F;tcp, 10911&#x2F;tcp, 0.0.0.0:9877-&gt;9877&#x2F;tcp   rmqnamesrv-b</span><br><span class="line">ecd8e83e8386        chenchuxin&#x2F;dubbo-admin          &quot;catalina.sh run&quot;        47 hours ago        Up 47 hours         0.0.0.0:8080-&gt;8080&#x2F;tcp                                   dubbo-admin</span><br><span class="line">a3265cddc63a        zookeeper                       &quot;&#x2F;docker-entrypoint.…&quot;   47 hours ago        Up 47 hours         2888&#x2F;tcp, 3888&#x2F;tcp, 8080&#x2F;tcp, 0.0.0.0:2182-&gt;2181&#x2F;tcp     zoo2</span><br><span class="line">1bcea74a1647        zookeeper                       &quot;&#x2F;docker-entrypoint.…&quot;   47 hours ago        Up 47 hours         2888&#x2F;tcp, 3888&#x2F;tcp, 8080&#x2F;tcp, 0.0.0.0:2183-&gt;2181&#x2F;tcp     zoo3</span><br><span class="line">ab4f3f15ce5e        zookeeper                       &quot;&#x2F;docker-entrypoint.…&quot;   47 hours ago        Up 47 hours         2888&#x2F;tcp, 3888&#x2F;tcp, 0.0.0.0:2181-&gt;2181&#x2F;tcp, 8080&#x2F;tcp     zoo1</span><br><span class="line">a9c2598d6809        nacos&#x2F;nacos-server:1.1.3        &quot;bin&#x2F;docker-startup.…&quot;   2 days ago          Up 2 days           0.0.0.0:8848-&gt;8848&#x2F;tcp                                   nacos</span><br><span class="line"></span><br><span class="line">[root@vm-26-21 rocketmq4.3.2]# free -h</span><br><span class="line">              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:            31G         21G        6.1G        9.5M        3.9G        9.5G</span><br><span class="line">Swap:          8.0G          0B        8.0G</span><br><span class="line"></span><br><span class="line">[root@vm-26-21 rocketmq4.3.2]# top</span><br><span class="line">top - 14:52:55 up 2 days, 21:00,  1 user,  load average: 0.09, 0.13, 0.14</span><br><span class="line">Tasks: 247 total,   1 running, 246 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.5 us,  0.9 sy,  0.0 ni, 98.6 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem : 32780056 total,  6395496 free, 22256968 used,  4127592 buff&#x2F;cache</span><br><span class="line">KiB Swap:  8388604 total,  8388604 free,        0 used.  9945644 avail Mem </span><br><span class="line">  scroll coordinates: y &#x3D; 1&#x2F;247 (tasks), x &#x3D; 1&#x2F;12 (fields)</span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                                                       </span><br><span class="line">28370 3000      20   0   14.0g   8.4g  14632 S   7.0 27.0   4:59.92 java                                                                                          </span><br><span class="line">28405 3000      20   0   13.8g   8.4g  14488 S   7.0 27.0   4:49.68 java                                                                                          </span><br><span class="line">12884 root      20   0 6330552 613636  14000 S   1.0  1.9  33:52.27 java</span><br></pre></td></tr></table></figure><p>基本上还是mq占用资源较多，不过这还没开始压测，估计实际压测内存和cpu占用会高很多吧，用docker部署的好处就是可以提高资源利用（根据机器配置调整jvm启动参数），维护也更容易，挂了直接重启就ok，不需要去3台服务器上来回操作。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.cnblogs.com/qdhxhz/p/11096682.html" target="_blank" rel="noopener">Docker集群部署RocketMQ</a></p><p><a href="https://segmentfault.com/a/1190000006907443" target="_blank" rel="noopener">使用 Docker 一步搞定 ZooKeeper 集群的搭建</a></p><p><a href="https://nacos.io/zh-cn/" target="_blank" rel="noopener">nacos官网</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
            <tag> Nacos </tag>
            
            <tag> Zookeeper </tag>
            
            <tag> Rocketmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作CentOS7.x镜像模板</title>
      <link href="/2020/06/04/linux/centos7-install/"/>
      <url>/2020/06/04/linux/centos7-install/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>最近公司需要安装很多虚拟机，一想到普通的Centos需要安装很多额外的东西就头痛，决定还是做一个优化过的镜像，以后直接用这个镜像做虚拟机的操作系统可以节省大量时间。</p><h1 id="选择虚拟化系统"><a href="#选择虚拟化系统" class="headerlink" title="选择虚拟化系统"></a>选择虚拟化系统</h1><p>我使用的VMware Esxi或VMware Workstation Pro</p><h1 id="安装centos7-最小化系统"><a href="#安装centos7-最小化系统" class="headerlink" title="安装centos7 最小化系统"></a>安装centos7 最小化系统</h1><p>下载镜像  <a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/" target="_blank" rel="noopener">阿里云centos镜像</a></p><p>如果是安装到虚拟机里直接看<br><a href="https://blog.csdn.net/capricorn90/article/details/52556174" target="_blank" rel="noopener">CentOS 7 最小化安装</a></p><p>里面注意几点就行：</p><ul><li>时区调为中国上海</li><li>安装语言选择英语（别整中文了，多学点英语没有什么不好）</li><li>磁盘如果懒得划分就按默认标准即可</li><li>密码一定要设置</li></ul><h1 id="制作镜像模板"><a href="#制作镜像模板" class="headerlink" title="制作镜像模板"></a>制作镜像模板</h1><p>进入操作系统</p><h2 id="改主机名-重新连接生效"><a href="#改主机名-重新连接生效" class="headerlink" title="改主机名(重新连接生效)"></a>改主机名(重新连接生效)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname xxx</span><br></pre></td></tr></table></figure><h2 id="改yum源为阿里源-个人习惯，不喜勿喷"><a href="#改yum源为阿里源-个人习惯，不喜勿喷" class="headerlink" title="改yum源为阿里源(个人习惯，不喜勿喷)"></a>改yum源为阿里源(个人习惯，不喜勿喷)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h2 id="yum安装插件-根据喜好增删"><a href="#yum安装插件-根据喜好增删" class="headerlink" title="yum安装插件(根据喜好增删)"></a>yum安装插件(根据喜好增删)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y lrzsz vim wget ntpdate yum-utils zip unzip tree  gcc gcc-c++  epel-release</span><br></pre></td></tr></table></figure><h2 id="改dns-如果需要添加内网域名的话，否则可以不用这一步"><a href="#改dns-如果需要添加内网域名的话，否则可以不用这一步" class="headerlink" title="改dns(如果需要添加内网域名的话，否则可以不用这一步)"></a>改dns(如果需要添加内网域名的话，否则可以不用这一步)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;resolv.conf</span><br><span class="line">添加dns</span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver xxxx</span><br></pre></td></tr></table></figure><h2 id="改密码"><a href="#改密码" class="headerlink" title="改密码"></a>改密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo    &#39;123456&#39;    |     passwd   --stdin  root</span><br></pre></td></tr></table></figure><p>echo的值为密码</p><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &quot;s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disabled&#x2F;g&quot; &#x2F;etc&#x2F;selinux&#x2F;config</span><br></pre></td></tr></table></figure><h2 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">#一小时同步一次</span><br><span class="line">0 *&#x2F;1 * * * &#x2F;usr&#x2F;sbin&#x2F;ntpdate ntp1.aliyun.com &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1; &#x2F;sbin&#x2F;hwclock -w</span><br></pre></td></tr></table></figure><h2 id="安装docker-不会还有人不装docker吧"><a href="#安装docker-不会还有人不装docker吧" class="headerlink" title="安装docker(不会还有人不装docker吧)"></a>安装docker(不会还有人不装docker吧)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils #如果在前面已经安装了则不用执行这个命令</span><br><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line"></span><br><span class="line">yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class="line">#添加国内镜像加速</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;wghlmi3i.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="提高资源限制上限-重新连接生效"><a href="#提高资源限制上限-重新连接生效" class="headerlink" title="提高资源限制上限(重新连接生效)"></a>提高资源限制上限(重新连接生效)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;security&#x2F;limits.conf</span><br><span class="line">* soft nofile 655350  #任何用户可以打开的最大的文件描述符数量，默认1024，这里的数值会限制tcp连接</span><br><span class="line">* hard nofile 655350</span><br><span class="line">* soft nproc  655350  #任何用户可以打开的最大进程数</span><br><span class="line">* hard nproc  650000</span><br></pre></td></tr></table></figure><h1 id="保存镜像"><a href="#保存镜像" class="headerlink" title="保存镜像"></a>保存镜像</h1><p>进入虚拟化控制台，导出为 OVF 格式即可</p>]]></content>
      
      
      <categories>
          
          <category> Centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Mysql、Mongodb、Redis及数据迁移</title>
      <link href="/2020/05/27/docker/docker-install-db/"/>
      <url>/2020/05/27/docker/docker-install-db/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>公司买了新磁盘、内存条，需要重新装机，领导要求这次要用docker部署数据库到服务器上。</p><h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>宿主机需要安装docker<br>机器性能32c 128G 外挂硬盘到/data目录（数据库建议外挂磁盘）</p><h2 id="创建持久化存储文件目录"><a href="#创建持久化存储文件目录" class="headerlink" title="创建持久化存储文件目录"></a>创建持久化存储文件目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mkdir -vp &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;&#123;data,logs,tmp&#125;</span><br></pre></td></tr></table></figure><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>[root@localhost ~]#vim /etc/my.cnf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">[client]   </span><br><span class="line">user&#x3D;root</span><br><span class="line">password&#x3D;123456</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">socket &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;mysql.sock </span><br><span class="line"></span><br><span class="line">[mysql]  </span><br><span class="line">prompt&#x3D;&quot;\u@dev-data-01 \R:\m:\s [\d]&gt; &quot; </span><br><span class="line">no-auto-rehash </span><br><span class="line">default-character-set&#x3D;utf8mb4  </span><br><span class="line"></span><br><span class="line">[mysqld]  </span><br><span class="line">user    &#x3D; mysql</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">datadir &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306&#x2F;data</span><br><span class="line">socket  &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;mysql.sock</span><br><span class="line">secure_file_priv&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306</span><br><span class="line">performance_schema &#x3D; 1</span><br><span class="line">character_set_server&#x3D;utf8mb4   </span><br><span class="line">open_files_limit &#x3D; 655350  </span><br><span class="line">transaction_isolation &#x3D; READ-COMMITTED</span><br><span class="line">interactive_timeout &#x3D; 31536000</span><br><span class="line">wait_timeout &#x3D; 31536000</span><br><span class="line">skip_name_resolve &#x3D; 1  。</span><br><span class="line">lower_case_table_names&#x3D;1    </span><br><span class="line">back_log &#x3D; 1024</span><br><span class="line">max_connections &#x3D; 10240    </span><br><span class="line">max_connect_errors &#x3D; 1000000</span><br><span class="line">table_open_cache &#x3D; 20480</span><br><span class="line">table_definition_cache &#x3D; 20480</span><br><span class="line">table_open_cache_instances &#x3D; 64</span><br><span class="line">thread_stack &#x3D; 512K</span><br><span class="line">external-locking &#x3D; FALSE</span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line">sort_buffer_size &#x3D; 4M</span><br><span class="line">join_buffer_size &#x3D; 4M</span><br><span class="line">thread_cache_size &#x3D; 15360</span><br><span class="line">tmp_table_size &#x3D; 32M</span><br><span class="line">max_heap_table_size &#x3D; 32M</span><br><span class="line">lock_wait_timeout &#x3D; 3600</span><br><span class="line">explicit_defaults_for_timestamp &#x3D; 1</span><br><span class="line">sort_buffer_size &#x3D; 33554432</span><br><span class="line"></span><br><span class="line">slow_query_log_file &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306&#x2F;logs&#x2F;slow.log</span><br><span class="line">log-error &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306&#x2F;logs&#x2F;error.log</span><br><span class="line">log-bin &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306&#x2F;logs&#x2F;mybinlog</span><br><span class="line">slow_query_log &#x3D; 1</span><br><span class="line">log_timestamps &#x3D; SYSTEM</span><br><span class="line">long_query_time &#x3D; 1</span><br><span class="line">log_queries_not_using_indexes &#x3D;1</span><br><span class="line">log_throttle_queries_not_using_indexes &#x3D; 60</span><br><span class="line">min_examined_row_limit &#x3D; 100</span><br><span class="line">log_slow_admin_statements &#x3D; 1</span><br><span class="line">log_slow_slave_statements &#x3D; 1</span><br><span class="line">expire_logs_days &#x3D; 7</span><br><span class="line">log_warnings &#x3D; 1</span><br><span class="line">binlog_cache_size &#x3D; 4M</span><br><span class="line">max_binlog_cache_size &#x3D; 4G</span><br><span class="line">max_binlog_size &#x3D; 1G</span><br><span class="line">binlog_checksum &#x3D; 1</span><br><span class="line">binlog_format &#x3D; row</span><br><span class="line">sync_binlog &#x3D; 1</span><br><span class="line"></span><br><span class="line">server-id &#x3D; 213306</span><br><span class="line">master_info_repository &#x3D; TABLE</span><br><span class="line">relay_log_info_repository &#x3D; TABLE</span><br><span class="line">gtid_mode &#x3D; on</span><br><span class="line">enforce-gtid-consistency &#x3D; on</span><br><span class="line">log_slave_updates  &#x3D; on</span><br><span class="line">enforce_gtid_consistency &#x3D; 1</span><br><span class="line">relay_log &#x3D; relay.log</span><br><span class="line">relay_log_recovery &#x3D; 1</span><br><span class="line">relay-log-purge &#x3D; 1</span><br><span class="line">binlog_gtid_simple_recovery &#x3D; 1</span><br><span class="line">slave_skip_errors &#x3D; ddl_exist_errors</span><br><span class="line">slave-rows-search-algorithms &#x3D; &#39;INDEX_SCAN,HASH_SCAN&#39;</span><br><span class="line"></span><br><span class="line">innodb_undo_directory &#x3D; &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;undolog</span><br><span class="line">internal_tmp_disk_storage_engine &#x3D; InnoDB</span><br><span class="line">innodb_page_size &#x3D; 8192</span><br><span class="line">innodb_buffer_pool_size &#x3D; 40960m</span><br><span class="line">innodb_buffer_pool_instances &#x3D; 4</span><br><span class="line">innodb_buffer_pool_load_at_startup &#x3D; 1</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown &#x3D; 1</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:1G:autoextend</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line">innodb_log_buffer_size &#x3D; 32M</span><br><span class="line">innodb_log_file_size &#x3D; 1G</span><br><span class="line">innodb_log_files_in_group &#x3D; 4</span><br><span class="line">innodb_max_undo_log_size &#x3D; 4G</span><br><span class="line">innodb_undo_tablespaces &#x3D; 95</span><br><span class="line">innodb_io_capacity &#x3D; 2000</span><br><span class="line">innodb_io_capacity_max &#x3D; 4000</span><br><span class="line">innodb_flush_sync &#x3D; 0</span><br><span class="line">innodb_flush_neighbors &#x3D; 0</span><br><span class="line">innodb_lru_scan_depth &#x3D; 4000</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 5</span><br><span class="line">innodb_write_io_threads &#x3D; 8</span><br><span class="line">innodb_read_io_threads &#x3D; 8</span><br><span class="line">innodb_purge_threads &#x3D; 4</span><br><span class="line">innodb_page_cleaners &#x3D; 4</span><br><span class="line">innodb_max_dirty_pages_pct &#x3D; 50</span><br><span class="line">innodb_flush_method &#x3D; O_DIRECT</span><br><span class="line">innodb_checksum_algorithm &#x3D; crc32</span><br><span class="line">innodb_rollback_on_timeout &#x3D; 1</span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1</span><br><span class="line">innodb_file_per_table &#x3D; 1</span><br><span class="line">innodb_online_alter_log_max_size &#x3D; 4G</span><br><span class="line">innodb_stats_on_metadata &#x3D; 0</span><br><span class="line">innodb_checksums &#x3D; 1</span><br><span class="line">innodb_undo_logs &#x3D; 128</span><br><span class="line">innodb_status_file &#x3D; 1</span><br><span class="line">innodb_status_output &#x3D; 0</span><br><span class="line">innodb_status_output_locks &#x3D; 0</span><br><span class="line">innodb_large_prefix &#x3D; 1</span><br><span class="line">innodb_thread_concurrency &#x3D; 0</span><br><span class="line">innodb_sync_spin_loops &#x3D; 100</span><br><span class="line">innodb_spin_wait_delay &#x3D; 30</span><br><span class="line">innodb_open_files &#x3D; 655350  </span><br><span class="line">innodb_strict_mode &#x3D; 1</span><br><span class="line">innodb_sort_buffer_size &#x3D; 67108864</span><br><span class="line"></span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_innodb&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_server&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_dml&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ddl&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_trx&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_os&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_purge&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_log&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_lock&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_index&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ibuf_system&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer_page&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_adaptive_hash&quot;</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>#拉取镜像<br>[root@localhost ~]# docker pull mysql:5.7.28</p><p>#启动<br>[root@localhost ~]# docker run -itd –name mysql -p 3306:3306  –privileged=true –restart always -v /etc/my.cnf:/etc/mysql/my.cnf -v /data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456  mysql:5.7.28 </p><p>参数说明：<br>–privileged=true 开启超级权限<br>-v /etc/my.cnf:/etc/mysql/my.cnf  把外面调优过后的配置文件挂载进去<br>-v /data/mysql:/var/lib/mysql<br>把持久化存储文件目录挂载到容器内部<br>–restart always  Docker重启时，该容器自动启动</p><p>#添加超级管理员账号admin<br>[root@localhost data]# docker exec -it mysql bash<br>root@1ef730747ed4:/# mysql -uroot -p123456<br>mysql&gt; GRANT ALL PRIVILEGES ON <em>.</em> TO ‘admin’@’%’ IDENTIFIED BY ‘123456’ WITH GRANT OPTION;<br>mysql&gt; flush privileges;<br>mysql&gt; exit</p><h2 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h2><p>docker stop/start mysql 关闭/启动</p><h2 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h2><p>旧数据库机器执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123456 --all-databases  &gt; all.sql</span><br><span class="line">scp all.sql root@新机器ip:&#x2F;root</span><br></pre></td></tr></table></figure><p>新数据库机器执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker cp &#x2F;root&#x2F;all.sql mysql:&#x2F;all.sql </span><br><span class="line">docker exec -it mysql bash  </span><br><span class="line">mysql -uroot -p123456 mysql &lt; all.sql</span><br></pre></td></tr></table></figure><h1 id="安装mongodb"><a href="#安装mongodb" class="headerlink" title="安装mongodb"></a>安装mongodb</h1><p>要求：<br>宿主机需要安装docker<br>外挂硬盘到/data目录（数据库建议外挂磁盘）</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#创建持久化存储文件目录</span><br><span class="line">mkdir -vp &#x2F;data&#x2F;mongo</span><br><span class="line">#拉取镜像</span><br><span class="line">docker pull mongo:4.2.6</span><br><span class="line"></span><br><span class="line">#启动mongo，由于数据需要迁移（包含了用户），所以不能先开启验证模式</span><br><span class="line">docker run -itd --name mongo -p 27017:27017 -v &#x2F;data&#x2F;mongo:&#x2F;data&#x2F;db mongo:4.2.6 </span><br><span class="line"></span><br><span class="line">-v &#x2F;data&#x2F;mongo:&#x2F;data&#x2F;db 把持久化存储文件目录挂载到容器内部</span><br></pre></td></tr></table></figure><h2 id="数据迁移-1"><a href="#数据迁移-1" class="headerlink" title="数据迁移"></a>数据迁移</h2><p>旧机器执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongodump -h 127.0.0.1 --port 27017 -uroot -p123456 -o &#x2F;root&#x2F;mongodb&#x2F;</span><br><span class="line">scp -r &#x2F;root&#x2F;mongodb&#x2F; root@ip:&#x2F;root&#x2F;mongodb&#x2F;</span><br></pre></td></tr></table></figure><p>新机器执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker cp &#x2F;root&#x2F;mongodb&#x2F; mongo:&#x2F;</span><br><span class="line">docker exec -it mongo bash</span><br><span class="line">mongorestore &#x2F;mongodb&#x2F;</span><br></pre></td></tr></table></figure><h2 id="重启并开启权限验证"><a href="#重启并开启权限验证" class="headerlink" title="重启并开启权限验证"></a>重启并开启权限验证</h2><p>数据迁移完后，查看本地存储是否有数据了。如果存在继续后面的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f mongo</span><br><span class="line">docker run -itd --name mongo --restart always -p 27017:27017 -v &#x2F;data&#x2F;mongo:&#x2F;data&#x2F;db mongo:4.2.6 --auth</span><br></pre></td></tr></table></figure><p>再次启动mongo就可以用以前的数据库账号密码登陆了</p><h2 id="管理-1"><a href="#管理-1" class="headerlink" title="管理"></a>管理</h2><p>docker stop/start mongo 关闭/启动</p><h1 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h1><p>要求redis版本&gt;5.0<br>宿主机需要安装docker<br>机器性能32c 128G 外挂硬盘到/data目录（数据库建议外挂磁盘）</p><h2 id="创建虚拟网卡"><a href="#创建虚拟网卡" class="headerlink" title="创建虚拟网卡"></a>创建虚拟网卡</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-cluster]# docker network create --driver bridge --subnet 172.18.0.0&#x2F;16 redis-net  #创建网卡并且指定子网</span><br></pre></td></tr></table></figure><h2 id="准备配置文件"><a href="#准备配置文件" class="headerlink" title="准备配置文件"></a>准备配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mkdir -vp &#x2F;data&#x2F;redis-cluster</span><br><span class="line">[root@localhost ~]# cd &#x2F;data&#x2F;redis-cluster</span><br><span class="line">[root@localhost redis-cluster]# vi redis-cluster.tmpl</span><br><span class="line">添加以下内容  </span><br><span class="line">port $&#123;PORT&#125;</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">cluster-announce-ip 172.31.26.53   #本机ip</span><br><span class="line">cluster-announce-port $&#123;PORT&#125;</span><br><span class="line">cluster-announce-bus-port 1$&#123;PORT&#125;</span><br><span class="line">appendonly yes</span><br><span class="line">protected-mode no</span><br><span class="line">#密码</span><br><span class="line">masterauth 123456     </span><br><span class="line">#密码</span><br><span class="line">requirepass 123456    </span><br><span class="line">bind 0.0.0.0</span><br><span class="line">timeout 300</span><br><span class="line">tcp-keepalive 300</span><br></pre></td></tr></table></figure><p>创建集群配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-cluster]# for port in $(seq 7010 7015); do   mkdir -p .&#x2F;$&#123;port&#125;&#x2F;conf    &amp;&amp; PORT&#x3D;$&#123;port&#125; envsubst &lt; .&#x2F;redis-cluster.tmpl &gt; .&#x2F;$&#123;port&#125;&#x2F;conf&#x2F;redis.conf   &amp;&amp; mkdir -p .&#x2F;$&#123;port&#125;&#x2F;data; done</span><br></pre></td></tr></table></figure><p>创建完成后看下目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-cluster]# tree</span><br><span class="line">├── 7010</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">│       ├── appendonly.aof</span><br><span class="line">│       ├── dump.rdb</span><br><span class="line">│       └── nodes.conf</span><br><span class="line">├── 7011</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">│       ├── appendonly.aof</span><br><span class="line">│       ├── dump.rdb</span><br><span class="line">│       └── nodes.conf</span><br><span class="line">├── 7012</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">│       ├── appendonly.aof</span><br><span class="line">│       ├── dump.rdb</span><br><span class="line">│       └── nodes.conf</span><br><span class="line">├── 7013</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">│       ├── appendonly.aof</span><br><span class="line">│       ├── dump.rdb</span><br><span class="line">│       └── nodes.conf</span><br><span class="line">├── 7014</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">│       ├── appendonly.aof</span><br><span class="line">│       ├── dump.rdb</span><br><span class="line">│       └── nodes.conf</span><br><span class="line">├── 7015</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">│       ├── appendonly.aof</span><br><span class="line">│       ├── dump.rdb</span><br><span class="line">│       └── nodes.conf</span><br><span class="line">└── redis-cluster.tmpl</span><br></pre></td></tr></table></figure><h2 id="拉镜像"><a href="#拉镜像" class="headerlink" title="拉镜像"></a>拉镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure><p>本示例镜像版本为latest，如果需要按照以下步骤安装集群，则只要要求redis版本是5.0以上 否则会出现问题</p><h2 id="创建容器并指定IP"><a href="#创建容器并指定IP" class="headerlink" title="创建容器并指定IP"></a>创建容器并指定IP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-cluster]# for port in $(seq 7010 7015); do    docker run -it -d -p $&#123;port&#125;:$&#123;port&#125; -p 1$&#123;port&#125;:1$&#123;port&#125;   --privileged&#x3D;true -v &#x2F;data&#x2F;redis-cluster&#x2F;$&#123;port&#125;&#x2F;conf&#x2F;redis.conf:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf   --privileged&#x3D;true -v &#x2F;data&#x2F;redis-cluster&#x2F;$&#123;port&#125;&#x2F;data:&#x2F;data   --restart always --name redis-$&#123;port&#125; --net redis-net   --sysctl net.core.somaxconn&#x3D;1024 redis redis-server &#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf; done</span><br></pre></td></tr></table></figure><h2 id="查看容器ip时候与自己配置的ip一致"><a href="#查看容器ip时候与自己配置的ip一致" class="headerlink" title="查看容器ip时候与自己配置的ip一致"></a>查看容器ip时候与自己配置的ip一致</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-cluster]# for port in &#96;seq 7010 7015&#96;;do echo -n &quot;$(docker inspect --format &#39;&#123;&#123; (index .NetworkSettings.Networks &quot;redis-net&quot;).IPAddress &#125;&#125;&#39; &quot;redis-$&#123;port&#125;&quot;)&quot;:$&#123;port&#125; &#39; &#39;; done;</span><br><span class="line">172.18.0.2:7010  172.18.0.3:7011  172.18.0.4:7012  172.18.0.5:7013  172.18.0.6:7014  172.18.0.7:7015</span><br></pre></td></tr></table></figure><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><p>进入容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-cluster]# docker exec -it redis-7010 bash</span><br></pre></td></tr></table></figure><p>如果需要密码，需要在命令最后加上-a passwd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster create 172.18.0.2:7010 172.18.0.3:7011 172.18.0.4:7012 172.18.0.5:7013 172.18.0.6:7014 172.18.0.7:7015 --cluster-replicas 1 -a 123456</span><br></pre></td></tr></table></figure><h2 id="宿主主机对外开放ip"><a href="#宿主主机对外开放ip" class="headerlink" title="宿主主机对外开放ip"></a>宿主主机对外开放ip</h2><p>[root@localhost redis-cluster]# for port in <code>seq 7010 7015</code>; do firewall-cmd –zone=public –add-port=${port}/tcp –permanent ; done</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>至此，mysql、mongodb、redis用docker部署完成，并完成迁移数据,如有问题请留言。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://docs.docker.com/engine/reference/commandline/run/" target="_blank" rel="noopener">docker run官方文档</a></p><p><a href="https://www.jianshu.com/p/af8eb110a873" target="_blank" rel="noopener">Docker最新Redis-cluster 集群配置</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Mongodb </tag>
            
            <tag> 数据备份 </tag>
            
            <tag> Mysql </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入浅出Docker原理及实战（一)</title>
      <link href="/2020/05/24/docker/docker-idea-1/"/>
      <url>/2020/05/24/docker/docker-idea-1/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><p>深入浅出Docker原理及实战系列第一篇，我想向大家阐述在Docker的基本理念与原理。</p><h1 id="Docker概述"><a href="#Docker概述" class="headerlink" title="Docker概述"></a>Docker概述</h1><p>Docker是一个用于开发，交付和运行应用程序的开放平台。Docker使我们能够将应用程序与基础架构分开，从而可以快速交付软件。借助Docker，我们可以以与管理应用程序相同的方式来管理基础架构。通过利用Docker的方法来快速交付，测试和部署代码，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。</p><p>容器化越来越受欢迎，因为容器是：</p><ul><li>灵活：即使最复杂的应用程序也可以容器化。</li><li>轻量级：容器利用并共享主机内核，在系统资源方面比虚拟机效率更高。</li><li>可移植性：您可以在本地构建，部署到云并在任何地方运行。</li><li>松散耦合：容器是高度自给自足并封装的容器，使您可以在不破坏其他容器的情况下更换或升级它们。</li><li>可扩展：您可以在数据中心内增加并自动分布容器副本。</li><li>安全：容器将积极的约束和隔离应用于流程，而无需用户方面的任何配置。</li></ul><h1 id="Docker平台"><a href="#Docker平台" class="headerlink" title="Docker平台"></a>Docker平台</h1><p>Docker提供了在松散隔离的环境（称为容器）中打包和运行应用程序的功能。隔离和安全性使我们可以在给定主机上同时运行多个容器。容器是轻量级的，因为它们不需要虚拟机管理程序的额外负载，而是直接在主机的内核中运行。这意味着与使用虚拟机相比，可以在给定的硬件组合上运行更多的容器。我们甚至可以在实际上是虚拟机的主机中运行Docker容器！</p><p>Docker提供了工具和平台来管理容器的生命周期：</p><ul><li>使用容器开发应用程序及其支持组件。</li><li>容器成为分发和测试应用程序的单元。</li><li>准备就绪后，可以将应用程序作为容器或协调服务部署到生产环境中。</li></ul><p>Docker vs 虚拟机</p><p>容器在Linux上本地运行，并与其他容器共享主机的内核。它运行一个离散进程，不占用任何其他可执行文件更多的内存，从而使其轻巧。</p><p>相比之下，虚拟机（VM）运行成熟的“来宾”操作系统，并通过虚拟机管理程序对主机资源进行虚拟访问。通常，VM会产生大量开销，超出了应用程序逻辑所消耗的开销。</p><ul><li>容器时在linux上本机运行，并与其他容器共享主机的内核，它运行的一个独立的进程，不占用其他任何可执行文件的内存，非常轻量。</li><li>虚拟机运行的是一个完成的操作系统，通过虚拟机管理程序对主机资源进行虚拟访问，相比之下需要的资源更多</li></ul><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Docker/docker_esxi.png"  alt="Docker_esxi"></p><h1 id="Docker和Devops的关系"><a href="#Docker和Devops的关系" class="headerlink" title="Docker和Devops的关系"></a>Docker和Devops的关系</h1><p>DevOps 强调的是高效组织团队之间如何通过自动化的工具协作和沟通来完成软件的生命周期管理，从而更快、更频繁地交付更稳定的软件。有工具支持，运维关注代码，开发关注部署，效率和质量都能得到提升。</p><p>在软件日趋复杂的情况下，微服务架构是弹性扩展、快速迭代的优选，微服务有利于负责单个服务的小团队降低沟通成本、提升效率，众多的服务却也让研发需要关心环境交付，整个运维工作复杂度剧增。说到秒级启动、秒级自动修复、服务发现、弹性伸缩等等，使用虚拟机和使用容器并无质的差距，但有了Docker，最大的变化是环境交付可以提前，每个开发只需多花 5% 的时间，就能换取运维 200% 的劳动，并且提高稳定性。</p><h2 id="快速，一致地交付您的应用程序"><a href="#快速，一致地交付您的应用程序" class="headerlink" title="快速，一致地交付您的应用程序"></a>快速，一致地交付您的应用程序</h2><p>Docker允许开发人员使用提供您的应用程序和服务的本地容器在标准化环境中工作，从而简化了开发生命周期。容器非常适合持续集成和持续交付（CI / CD）工作流程。</p><p>流水线具体如下：</p><ul><li>开发人员在本地编写代码，并使用Docker容器与同事共享他们的工作。</li><li>他们使用Docker将其应用程序推送到测试环境中，并执行自动和手动测试。</li><li>当开发人员发现错误时，他们可以在开发环境中对其进行修复，然后将其重新部署到测试环境中以进行测试和验证。</li><li>测试完成后，将修补程序推送给生产环境就像将更新的映像推送到生产环境一样简单。</li></ul><h2 id="响应式部署和扩展"><a href="#响应式部署和扩展" class="headerlink" title="响应式部署和扩展"></a>响应式部署和扩展</h2><p>Docker基于容器的平台允许高度可移植的工作负载。Docker容器可以在开发人员的本地笔记本电脑上，数据中心中的物理或虚拟机上，云提供商上或混合环境中运行。</p><p>Docker的可移植性和轻量级的特性还使您可以轻松地动态管理工作负载，并根据业务需求指示实时扩展或拆除应用程序和服务。</p><h2 id="在同一硬件上运行更多工作负载"><a href="#在同一硬件上运行更多工作负载" class="headerlink" title="在同一硬件上运行更多工作负载"></a>在同一硬件上运行更多工作负载</h2><p>Docker轻巧快速。它为基于虚拟机管理程序的虚拟机提供了可行，经济高效的替代方案，因此您可以利用更多的计算能力来实现业务目标。Docker非常适合于高密度环境以及中小型部署，而您需要用更少的资源做更多的事情。</p><h1 id="Docker引擎"><a href="#Docker引擎" class="headerlink" title="Docker引擎"></a>Docker引擎</h1><p>Docker Engine是具有以下主要组件的客户端-服务器应用程序：</p><ul><li><p>服务器是一种长期运行的程序，称为守护程序进程（ Dockerd命令）。守护程序创建和管理Docker 对象，例如图像，容器，网络和卷。</p></li><li><p>REST API，它指定程序可以用来与守护程序进行通信并指示其操作的接口。</p></li><li><p>命令行界面（CLI）客户端（Docker命令）。<br>CLI使用Docker REST API通过脚本或直接CLI命令来控制Docker守护程序或与Docker守护程序进行交互。许多其他Docker应用程序都使用基础API和CLI。</p></li><li><p>Docker引擎组件流程</p></li></ul><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Docker/docker_engine.png"  alt="Docker_engine"></p><h1 id="Docker架构"><a href="#Docker架构" class="headerlink" title="Docker架构"></a>Docker架构</h1><p>Docker使用经典的CS架构，其中最重要的组成元素为Daemon、Client、Registries、Objects。</p><p>Docker Client（客户端）与Docker Daemon （守护进程）进行对话，该守护进程完成了构建，运行和分发Docker容器的繁重工作。Docker客户端和守护程序在UNIX套接字或网络接口上使用REST API进行通信。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Docker/docker_cs.png"  alt="Docker_cs"></p><h2 id="Docker-Daemon"><a href="#Docker-Daemon" class="headerlink" title="Docker Daemon"></a>Docker Daemon</h2><p>Docker守护程序（Dockerd）监听Docker API请求并管理Docker对象，例如镜像，容器，网络和卷。守护程序还可以与其他守护程序通信以管理Docker服务。</p><h2 id="Docker-Client"><a href="#Docker-Client" class="headerlink" title="Docker Client"></a>Docker Client</h2><p>Docker客户端（Docker）是许多Docker用户与Docker交互的主要方式。当我们使用诸如之类的命令时Docker run，客户端会将这些命令发送到Dockerd，以执行这些命令。该Docker命令使用Docker API。Docker客户端可以与多个守护程序通信。</p><h2 id="Docker-Registries"><a href="#Docker-Registries" class="headerlink" title="Docker Registries"></a>Docker Registries</h2><p>Docker仓库存储Docker镜像。Docker Hub是任何人都可以使用的公共仓库，并且默认情况下，Docker已配置为在Docker Hub上查找镜像。我们也可以运行自己的私有仓库。如果使用Docker数据中心（DDC），则其中包括Docker可信仓库（DTR）。</p><p>使用Docker pull或Docker run命令时，所需的镜像将从配置的仓库中提取。使用该Docker push命令时，会将镜像推送到配置的仓库。</p><h2 id="Docker-Objects"><a href="#Docker-Objects" class="headerlink" title="Docker Objects"></a>Docker Objects</h2><p>我们一般使用Docker时，正在创建和使用镜像，容器，网络，卷，插件和其他对象。下面讲几个最重要的对象。</p><h3 id="IMAGES"><a href="#IMAGES" class="headerlink" title="IMAGES"></a>IMAGES</h3><p>镜像是一个只读模板，其中包含创建Docker容器的说明。通常，一个镜像基于另一个镜像，并进行一些其他自定义。</p><p>我们可以创建自己的镜像，也可以使用其他人在仓库中发布的镜像。要构建自己的镜像，我们可以使用简单的语法创建一个Dockerfile，以定义创建镜像并运行它所需的步骤。Dockerfile中的每个指令都会在镜像中创建一个层。当您更改Dockerfile并重建镜像时，仅重建那些已更改的层。与其他虚拟化技术相比，这是使镜像如此轻巧，小型和快速的部分原因。</p><h3 id="CONTAINERS"><a href="#CONTAINERS" class="headerlink" title="CONTAINERS"></a>CONTAINERS</h3><p>容器是镜像的可运行实例。我们可以使用Docker API或CLI创建，启动，停止，移动或删除容器。我们可以将容器连接到一个或多个网络，将存储连接到它，甚至根据其当前状态创建新镜像。</p><p>默认情况下，容器与其他容器及其主机之间的隔离程度相对较高。我们可以控制容器的网络，存储或其他基础子系统与其他容器或与主机的隔离程度。</p><p>容器由其映像以及在创建或启动时为其提供的任何配置选项定义。删除容器后，未存储在持久性存储中的状态更改将消失。</p><h3 id="SERVICES"><a href="#SERVICES" class="headerlink" title="SERVICES"></a>SERVICES</h3><p>服务允许扩展在多个Docker守护进程的容器。群集的每个成员都是Docker守护程序，所有守护程序都使用Docker API进行通信。服务允许我们定义所需的状态，例如在任何给定时间必须可用的服务副本的数量。默认情况下，该服务在所有工作节点之间是负载平衡的。对于消费者而言，Docker服务似乎是一个单独的应用程序。Docker Engine在Docker 1.12及更高版本中支持集群模式。</p><h3 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h3><p>数据卷，用于保存持久化数据。当我们将数据库例如MySQL运行在Docker容器中时，一般将数据通过Docker Volume保存在主机上，这样即使删除MySQL容器，数据依然保存在主机上，有效保证了数据的安全性。</p><h3 id="NETWORK"><a href="#NETWORK" class="headerlink" title="NETWORK"></a>NETWORK</h3><p>Docker使用Linux桥接，在宿主机虚拟一个Docker容器网桥(Docker0)，Docker启动一个容器时会根据Docker网桥的网段分配给容器一个IP地址，称为Container-IP，同时Docker网桥是每个容器的默认网关。因为在同一宿主机内的容器都接入同一个网桥，这样容器之间就能够通过容器的Container-IP直接通信。</p><p>Docker网桥是宿主机虚拟出来的，并不是真实存在的网络设备，外部网络是无法寻址到的，这也意味着外部网络无法通过直接Container-IP访问到容器。如果容器希望外部访问能够访问到，可以通过映射容器端口到宿主主机（端口映射），即Docker run创建容器时候通过 -p 或 -P 参数来启用，访问容器的时候就通过[宿主机IP]:[容器端口]访问容器。</p><h1 id="底层原理"><a href="#底层原理" class="headerlink" title="底层原理"></a>底层原理</h1><p>Docker用Go编写，并利用Linux内核的多个功能来交付其功能。</p><p>命名空间、控制组、联合文件系统、容器格式。</p><h2 id="Namespaces（命名空间）"><a href="#Namespaces（命名空间）" class="headerlink" title="Namespaces（命名空间）"></a>Namespaces（命名空间）</h2><p>Docker使用一种称为namespaces提供容器的隔离工作区的技术。运行容器时，Docker会为该容器创建一组命名空间。</p><p>这些名称空间提供了一层隔离。容器的每个方面都在单独的名称空间中运行，并且对其的访问仅限于该名称空间。</p><p>Docker Engine在Linux上使用以下名称空间：</p><ul><li>The pid namespace: 进程隔离 (PID: 进程ID).</li><li>The net namespace: 管理网络接口 (NET: 网络).</li><li>The ipc namespace: 管理访问IPC资源 (IPC: 进程间通信).</li><li>The mnt namespace: 管理文件系统挂载点 (MNT: 挂载).</li><li>The uts namespace: 隔离内核和版本标识符。 (UTS:Unix时间共享系统).</li></ul><h2 id="Control-groups（控制组）"><a href="#Control-groups（控制组）" class="headerlink" title="Control groups（控制组）"></a>Control groups（控制组）</h2><p>Linux上的Docker引擎还依赖于另一种称为控制组的技术。Cg将应用程序限制为一组特定的资源。控制组允许Docker Engine将可用的硬件资源共享给容器，并有选择地实施限制和约束。例如，CPU、内存。</p><h2 id="Union-file-systems（联合文件系统）"><a href="#Union-file-systems（联合文件系统）" class="headerlink" title="Union file systems（联合文件系统）"></a>Union file systems（联合文件系统）</h2><p>UnionFS是通过创建图层进行操作的文件系统,使其非常轻便且快速。Docker Engine使用UnionFS为容器提供构建模块。UnionFS可以把文件系统上多个目录(也叫分支)内容联合挂载到同一个目录下，而目录的物理位置是分开的。通俗来说，这个技术就是Docker image实现分层的技术基础，因为镜像就是从基础镜像上一层层叠加新的逻辑构成的，这种分层设计，一个优点就是资源共享。</p><h2 id="Container-format（容器格式）"><a href="#Container-format（容器格式）" class="headerlink" title="Container format（容器格式）"></a>Container format（容器格式）</h2><p>Docker Engine将命名空间，控制组和UnionFS组合到一个称为容器格式的包装器中。默认容器格式为libcontainer。未来，Docker可能会通过与BSD Jails或Solaris Zones等技术集成来支持其他容器格式。</p><p>libcontainer基于Go实现，用于创建具有名称空间，cgroup，功能和文件系统访问控制的软件包。使用libcontainer可以管理创建容器以及执行其他操作的容器的生命周期。它定义的容器是一个独立的执行环境，它共享主机系统的内核，并且（可选）与系统中的其他容器隔离。</p><p>容器是通过两步过程生成的。</p><p>第一步：要创建一个容器，我们首先必须初始化一个工厂实例，该实例将处理容器的创建和初始化。</p><p>第二步：一旦创建了工厂的实例，我们就可以创建一个配置文件来描述如何创建容器。</p><p>填充配置后，我们就可以创建一个容器。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>曾经有位高人指导过我学习的方法：故常无欲，以观其妙；常有欲，以观其徼。我在学习的过程中不断琢磨这句话的真正含义，本系列正是通过这个思想研究Docker出现的意义。从下篇开始，我将深入讲解Docker的每个技术点及作用。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://docs.docker.com/get-started/overview/" target="_blank" rel="noopener">Docker官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Devops </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>顶级理解之互联网的后浪</title>
      <link href="/2020/05/17/king/king-backwave/"/>
      <url>/2020/05/17/king/king-backwave/</url>
      
        <content type="html"><![CDATA[<p>声明: 顶级理解系列全部是本人的主观看法，也许在你看来以我现在的阅历不能对某些事物有着精准的判断，望不喜勿喷，求同存异。</p><hr><p>最近一个月我受到了很多大佬前辈们的教导，见证了社会中一件件大事件的发生，欣赏了一些对互联网反思、总结的文章，我感触挺多。和身边的朋友交谈中他们无一不说，宇哥，感觉你最近变得成熟了，受了什么刺激吗。其实是这次疫情的出现，让我更加真实地看见了自己的微不足道，反思自己从小到大的经历，总结并不断提高自己，规划未来的那个自己，梦想有一天成为互联网中的后浪，能奔涌前进！</p><h1 id="正文开始"><a href="#正文开始" class="headerlink" title="正文开始"></a>正文开始</h1><p>最近B站的后浪很火，如果没有看过的可以点击下面的传送门，一览何冰老师的慷慨致辞。当我看完后浪后，我心情久久不能平静，又反复观看几次，体会着上一代人对我们这一代人的羡慕、敬意、感激。后浪展示了是最好的时代，这也是最好的青春。时代的馈赠、个人的探索，汇聚成青春的蓬勃、生命的丰盛。一次与青年的对话，让人沉思青春的价值、成长的意义。</p><p><a href="https://www.bilibili.com/video/BV1FV411d7u7?from=search&seid=6731801181146737106" target="_blank" rel="noopener">后浪</a></p><p>关于后浪，网上的评论褒贬不一。</p><p>有人表示，《后浪》所描绘的，不过是物质条件最优越的年轻人处境：他们跳伞、玩Cosplay、喜欢汉服、摄影和潜水，他们容貌俊俏、鲜衣怒马，才能有享受自由人生的权利，而更多的人还在苦苦为生存挣扎。</p><p>诚然，B站版的后浪确实展示了最优越的年轻人的选择的权利，他们出身优越能有这么多选择，但是这并不是后浪所要展示的价值观，如果你觉得后浪所展示的价值观太脱离实际，我建议你看看央视版的后浪。</p><p>我认为大部分年轻人在当今社会一样具有很多选择的权力。比起我们上一辈，我们多了什么选择呢，借用后浪里的话：</p><hr><p>人类积攒了几千年的财富</p><p>所有的知识、见识、智慧和艺术</p><p>像是专门为你们准备的礼物</p><p>科技繁荣</p><p>文化繁茂</p><p>城市繁华</p><p>现代文明的成果</p><p>被层层打开</p><p>可以尽情享用</p><hr><p>其中这里就不得不说到互联网，现代文明的成果离不开互联网的贡献，我们在互联网中可以选择很多，并且我坚信，这应该是这个社会能够赋予每个年轻人最基本的选择权力之一。</p><ul><li>互联网的无限包容性，打破了以往的信息不对称，使得人们能轻而易举地获取信息、接收知识。</li><li>互联网带来的新变化、新机遇、新格局，使得竞争变得更为激烈、更为直接、更为透明，并永无停止地在挑战着既有市场的旧格局、旧规则。墨守成规已经没有出路，互联网信息时代已经提出了必须要面对新形势下的新挑战这个迫在眉睫的课题。</li><li>相对于现实世界，互联网又是另一个虚拟世界，一个新的世界。人们既生活在现实世界中，也存在于互联网虚拟世界里，实现中，相当一部分人甚至是无法生活在没有网络的世界里的。</li><li>互联网直接或间接的为人进行赋能，互联网新工具新技术新思维让人不再局限于双手双脚，但却拥有比原来还要高级还要强大的能力，并不断突破自我，面对新机遇不再显得束手无策，不管你认不认可，互联网以一种看不见的力量推动着社会历史的变迁。</li></ul><p>互联网时代正在改变和影响我们的生活，那么一个新青年怎么才能成为互联网行业中一朵真正的后浪呢？我认为需要要有以下3点，洞察格局、提升技术、不忘初心。</p><h1 id="洞察格局"><a href="#洞察格局" class="headerlink" title="洞察格局"></a>洞察格局</h1><p>当前中国的互联网格局是什么？当前世界的互联网格局是什么？我们身处的互联网环境是怎么样？</p><p>我不能够清晰准确地回答大家，但是我看到过一篇文章，这么来形容中国互联网的历史。有助于大家提高自己的格局。</p><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><p><a href="https://www.36kr.com/p/5100918" target="_blank" rel="noopener">中国互联网史就是一部流氓史</a></p><p>该文章主要说明了国内的互联网环境很差。主要归结于几点：</p><ul><li>绑架史：被插件困挠的20年</li><li>抄袭史：创新是互联网企业的绊脚石</li><li>低俗史：从社会精英到网络喷子</li><li>盗版史：知识产权是个什么玩意儿</li><li>垄断史：从去中心化到中心化</li></ul><p>引用里面的一大段话</p><hr><p>www的设计者Tim Berners-Lee认为互联网本来是去中心化的拓扑结构，每个人都可以建设自己的网站，但现在，互联网已经完全成为一种中心化结构。域名你要去新网或者万网（已经阿里系的了），服务器你可能只会选择腾讯云或者阿里云。这还不是最坏的结果，毕竟你还能建个属于自己的网站。比这个更恐怖的是苹果的出现，它用iOS系统和iPhone牢牢的把每一家互联网公司给锁死，唯一能够与之抗衡的是Google / Facebook / Amazon……但这些公司你同样会觉得它们与苹果没什么两样。</p><p>中国的互联网公司的中心化有过之而无不及，甚至可以说，中国互联网的发展史就是BAT三足鼎立的历史，1998年的腾讯、1999年的阿里、2000年的百度。似乎在20年前，宿命已经注定。虽然2008年移动互联网出现后稍有变数，但只要百度不再出昏招，新晋小巨头TMD（今日头条、美团、滴滴）还是很难超越的。</p><p>现在新的创业公司都不想建立自己的网站了，服务在公众号里完成，商品在淘宝上开个店，新闻在头条里发布……何必要自己建立一个中心点呢，流量是哪里来？还不如寄生在一个大平台上面。 </p><p>今日互联网的中心化也不完全是市场竞争的结果，大公司用流量控制住所有新的可能，一旦有新物种出现，弄不死你就抄袭个同类产品压制你，如果还弄不死你那就收购你，反正总有一种流氓手段可以搞定你。</p><p>互联网已经彻底中心化了，我们以为互联网会给每个人带来自由，现在才发现，互联网其实在剥夺我们的思考。20年来互联网的中心化就是垄断化，最后我们的命运将被控制在几个人手里。</p><hr><p>我从中得到的结论就是，国内互联网的格局都由大厂控制住了，小公司很难有撼动整个国内互联网的能力，那么跟着大厂的步伐走才是正道吗？恕我不能回答。</p><h2 id="TOP"><a href="#TOP" class="headerlink" title="TOP"></a>TOP</h2><p>给大家上两张图及链接，中国VS世界。在2019年中国互联网前10强里只有2个公司进入了世界前10强，阿里、腾讯。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/King/2019ITTOP.png"  alt="中国"></p><p><a href="https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E4%BA%92%E8%81%94%E7%BD%91%E4%BC%81%E4%B8%9A100%E5%BC%BA/9835904?fr=aladdin" target="_blank" rel="noopener">2019年中国互联网企业100强</a></p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/King/2019ITTOP.jpg"  alt="世界"></p><p><a href="http://www.nbyoho.com/news/1660218504261509241.html" target="_blank" rel="noopener">互联网iT业全年数据公布 2019年全球十大IT企业排名出炉了</a></p><hr><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>仍然给大家上两条链接，中国VS世界。国外的开源公司帖子不好找，只能找到2017年的开源公司列表。这些帖子说明，阿里给国内做出的贡献很大，世界企业给世界的互联网企业贡献更大，而中国处在互联网的洪流中，显得微不足道。</p><p><a href="https://www.infoq.cn/article/G4O6JUhJF*Tsv9eWM0L6" target="_blank" rel="noopener">2019年中国互联网公司开源项目调研报告</a></p><p><a href="https://juejin.im/entry/59d16eb551882516662bffba" target="_blank" rel="noopener">2017年全球 35 大开源公司都在这里！</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>通过互联网企业排名和贡献比较，一方面我感叹中国和世界的互联网技术的差距之大，另一方面我也看到了近几年中国在尽全力追赶世界互联网的脚步。</p><p>国内的开源技术越来越多，国内很多中小型公司渐渐模仿了阿里系、腾讯系、百度系的架构体系。在我眼里，阿里可谓是中国的谷歌，真正的科技公司，许多Java类的框架不开则以，一开惊人。阿里云的标签是什么？为了无法计算的价值。正是阿里的无私奉献，国内的许多公司纷纷享用着中国人自己开源的东西。</p><p>而谷歌的开源项目更是多如牛毛，被国外程序员称为开源巨献。2014年Google推出Kubernetes，被誉为容器化发展的里程碑，世界所有的顶级技术人员为它添砖加瓦，一直至今，Kubernertes的生态系统继续增长着。</p><p>我希望看到这的你们能对整个互联网的格局有一个新的认识，不要总觉得自己学的知识已经足够了，不要夜郎自大认为自己学的知识特别牛，其实有很多都是别人玩剩下的东西。没事多看看国外的技术论坛、博客，不要局限于国内的技术。</p><h1 id="提升技术"><a href="#提升技术" class="headerlink" title="提升技术"></a>提升技术</h1><p>很多人会问我，你学的知识很多，好像什么都懂点，我应该怎么和你一样？其实每个人不一定要学谁，找到适合自己的才是最好的。</p><p>我很惭愧：</p><ul><li>我在2018年11月之前没有使用过linux操作系统</li><li>我在2019年9月才开始接触这个5年前就已经火起来的kubernetes，至今仍不能说精通它。</li><li>我在2019年12月之前没有用过云平台，不知道云为何物</li><li>我在2020年4月22日之前还没有对自己的学习知识进行过全面的总结</li></ul><p>我技术成长在最快的时间段就是在2019年10-12月3个月内，先应用后学习，是我认为学习效率至快的法宝。因为我们的脚步已经很慢了，没有时间和经历再从头学起了，从项目中体会、学习、理解才能最快地了解某一技术是干嘛用的，然后通过时间、经验的累积，慢慢深入了解这些技术底层的原理，吃懂吃透。</p><p>看到这，我相信你们能够明白一个道理，技术是永远学不完的，但是你得去不断总结自己的知识技术，不断反思，时不时洞察格局，至少得知道自己是什么水平，如果水平低了就应该赶紧补习，追上潮流。我也是不断的逼自己学习，我也不想掉队，我也想成为运维行业的领军人物，所以只能不断的学习！</p><p>给大家推荐一个方法：不管哪行哪业，如果你觉得你提升不了技术了或者没有动力学下去，那么请看下你所在岗位的招聘网站，看看现在市场招聘的技术你是否都会？行业的平均水平在哪？你的工资是否高与市场的平均水平？如果些条件你都不能满足，你就有了学习的动力及方向，望共勉之。</p><h1 id="不忘初心"><a href="#不忘初心" class="headerlink" title="不忘初心"></a>不忘初心</h1><p>如果你看过人民的名义，你应该会记得高育良书记曾慷慨激昂地说过这样一句话：中国的改革开放可以说是浩浩荡荡，每个人都身处洪流之中，期间，有许多人凭着自身的努力或者说幸运站在了潮头之上，这潮头之上是风光无限，诱惑无限，也风险无限，就看你如何把握了。看未来远不如看过去，要来得清楚，激昂和困惑，交织在每个人都心头，所以说要留一份敬畏在心中，看别的东西可以模糊，但看底线一定要看得清晰。</p><p>虽然高育良是反派，但是我认为他说的话挺有格局。（不愧是大教授）即使他最后被逮捕判刑，我仍认为他的守住了自己的底线，而且他也没有主观上贪污腐败，只是被环境的影响太严重，一失足成千古恨，所以不忘初心真不是一件简单的事。</p><p>最近刷B站看了许多郑强教授的演讲，浙江大学教授讲话，句句振聋发聩。我感觉我的价值观正在被他的演讲所引导，引用他的两段话。</p><hr><p>我说我郑强同志苦口婆心的把高分子知识教了你们,后面过两天你们到美国去,在杜邦公司就职,然后那个导弹的那个防漏圈,都是高分子的圈,全你们做的,然后过两天“嘟”飞回来把我炸死了。</p><p>教育应该让中国懂得自尊。但是现在我们看到外国人就低头，女生看到外国的男人都想讨好。同志们，在外国人面前我们多么地没有尊严。在留学的日本京都大学的人当中，我是唯一回来的，但日本人反而敬重我，因为我活得有灵魂，活得有骨气。</p><hr><p>郑强教授告诉我做人不能忘本，不能忘记养育自己的父母和国家，而我的初心就是守住这个底线，尽自己的力量做对国家有贡献的事情。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我是一个喜欢学历史的人，以古为鉴，可知兴替，中国历代的发展都是由兴到衰，由衰到兴。而中国从1840年至今创造了一系列奇迹：</p><ul><li>综合国力从衰败到日益强盛</li><li>人民生活水平从贫困到基本全面小康</li><li>国际地位从任人宰割到屹立世界东方</li></ul><p>从1840年的虚弱落后，到1949年的历史低点后奋起，再到今天的强国新貌，时光荏苒，斗转星移，真正是换了人间！</p><p>而我们应该更居安思危，在互联网时代中，中国的技术正处在蓬勃增长的状态，但是依旧不可否认我们与国外的差距，所以我们更应该争做互联网的后浪，拿出舍我其谁的精神，勇往直前地冲到最前沿，成为一个国家最好看的风景！</p><p>看完我的文章，我希望你关闭页面的时候能够变得：</p><ul><li>善良 </li><li>勇敢 </li><li>无私 </li><li>无所畏惧</li><li>是心里有火 眼里有光</li><li>表达自我 拥抱世界</li></ul><p>共勉之。</p>]]></content>
      
      
      <categories>
          
          <category> 顶级理解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 顶级理解 </tag>
            
            <tag> 互联网 </tag>
            
            <tag> 后浪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跟我学Devops之工具篇（Ansbile）</title>
      <link href="/2020/05/17/devops/devops-ansible/"/>
      <url>/2020/05/17/devops/devops-ansible/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><p>从自动化运维入门开始，第一个学习的自动化工具就是ansible。</p><h1 id="百度解释"><a href="#百度解释" class="headerlink" title="百度解释"></a>百度解释</h1><p>ansible是新出现的自动化运维工具，基于Python开发，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。</p><p>ansible是基于模块工作的，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架。主要包括：</p><ul><li>连接插件connection plugins：负责和被监控端实现通信；</li><li>host inventory：指定操作的主机，是一个配置文件里面定义监控的主机；</li><li>各种模块核心模块、command模块、自定义模块；</li><li>借助于插件完成记录日志邮件等功能；</li><li>playbook：剧本执行多个任务时，非必需可以让节点一次性运行多个任务。</li></ul><h1 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h1><p>用通俗的话来解释，ansbile可以分组，每个组里添加目标机器ip，通过密钥或者密码连接成功组里的机器后，你就可以用ansbile命令操作每个组的机器了。对于大规模的机器群来说，ansbile是必不可少的运维工具。</p><p>ansbile的特点：</p><ul><li>部署简单，只需在主控端部署Ansible环境，被控端无需做任何操作；</li><li>默认使用SSH协议对设备进行管理；</li><li>有大量常规运维操作模块，可实现日常绝大部分操作；</li><li>配置简单、功能强大、扩展性强；</li><li>支持API及自定义模块，可通过Python轻松扩展；</li><li>通过Playbooks来定制强大的配置、状态管理；</li><li>轻量级，无需在客户端安装agent，更新时，只需在操作机上进行一次更新即可；</li><li>提供一个功能强大、操作性强的Web管理界面和REST API接口——AWX平台。</li></ul><p>当然你可能不需要用到ansbile所有功能，以下是我认为实战中ansbile用的最爽的几个点：</p><ul><li>配置管理：将配置文件批量放到你指定组的机器某一目录下，或者指定路径后一次性修改指定组的机器该路径下的配置文件</li><li>应用部署：如java应用编译好成jar包，ansbile直接将jar包分发到指定组的机器某一目录下，执行启动命令</li><li>滚动发布：有人可能会问了，ansible也能滚动发布？其实只要了解滚动发布的原理，用ansbile一样可以做到。例如在生产环境利用负载均衡分发流量到底层存在多个运行java应用的实例中，那么滚动更新就是先控制一台组里的机器，杀进程，启动新的jar包，监控jar包启动成功等，如果这台组里的机器成功，则让后续组里的机器继续更新，否则终止。</li></ul><h1 id="开始ansible之旅"><a href="#开始ansible之旅" class="headerlink" title="开始ansible之旅"></a>开始ansible之旅</h1><h2 id="安装ansible"><a href="#安装ansible" class="headerlink" title="安装ansible"></a>安装ansible</h2><p>两种安装方式都行</p><ul><li>pip安装</li></ul><p>yum install python-pip</p><p>pip install ansible</p><ul><li>yum安装</li></ul><p>yum install epel-release -y</p><p>yum install ansible –y</p><p>安装完成后执行ansible –version</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ansible --version</span><br><span class="line">ansible 2.9.7</span><br><span class="line">  config file &#x3D; &#x2F;etc&#x2F;ansible&#x2F;ansible.cfg</span><br><span class="line">  configured module search path &#x3D; [u&#39;&#x2F;root&#x2F;.ansible&#x2F;plugins&#x2F;modules&#39;, u&#39;&#x2F;usr&#x2F;share&#x2F;ansible&#x2F;plugins&#x2F;modules&#39;]</span><br><span class="line">  ansible python module location &#x3D; &#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;ansible</span><br><span class="line">  executable location &#x3D; &#x2F;usr&#x2F;bin&#x2F;ansible</span><br><span class="line">  python version &#x3D; 2.7.5 (default, Oct 30 2018, 23:45:53) [GCC 4.8.5 20150623 (Red Hat 4.8.5-36)]</span><br></pre></td></tr></table></figure><h2 id="配置ansible"><a href="#配置ansible" class="headerlink" title="配置ansible"></a>配置ansible</h2><h3 id="默认配置文件"><a href="#默认配置文件" class="headerlink" title="默认配置文件"></a>默认配置文件</h3><p>配置文件路径在/etc/ansible</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ansible]# pwd</span><br><span class="line">&#x2F;etc&#x2F;ansible</span><br><span class="line">[root@localhost ansible]# ll</span><br><span class="line">total 24</span><br><span class="line">-rw-r--r--. 1 root root 19985 Apr 19 05:24 ansible.cfg</span><br><span class="line">-rw-r--r--. 1 root root  1016 Apr 19 05:24 hosts</span><br><span class="line">drwxr-xr-x. 2 root root     6 Apr 19 05:24 roles</span><br></pre></td></tr></table></figure><p>修改ansible.cfg<br>将以下几个参数的注释去掉并修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">host_key_checking&#x3D; False   </span><br><span class="line">timeout &#x3D; 30  增加ssh的超时时间</span><br><span class="line">log_path &#x3D; &#x2F;var&#x2F;log&#x2F;ansible.log 存日志</span><br></pre></td></tr></table></figure><h3 id="主机清单"><a href="#主机清单" class="headerlink" title="主机清单"></a>主机清单</h3><p>ansible有2种连接主机清单的方式</p><h4 id="基于密码连接"><a href="#基于密码连接" class="headerlink" title="基于密码连接"></a>基于密码连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ansible]# vim &#x2F;etc&#x2F;ansible&#x2F;hosts</span><br><span class="line">#添加两个组dev、test</span><br><span class="line">[dev]</span><br><span class="line">172.31.22.31  ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&quot;123456&quot;</span><br><span class="line">172.31.22.33  ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&quot;123456&quot;</span><br><span class="line">172.31.22.35  ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">[test]</span><br><span class="line">172.31.24.31  ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&quot;123456&quot;</span><br><span class="line">172.31.24.33  ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&quot;123456&quot;</span><br><span class="line">172.31.24.35  ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">修改完后ping下该组主机是否都能连上</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible dev -m ping</span><br><span class="line">172.31.22.33 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">172.31.22.31 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">172.31.22.35 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="基于秘钥连接"><a href="#基于秘钥连接" class="headerlink" title="基于秘钥连接"></a>基于秘钥连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ansible]# ssh-keygen</span><br><span class="line">[root@localhost ansible]# for i in &#123;1,3,5&#125;; do ssh-copy-id -i 172.31.22.3$i ; done</span><br><span class="line">[root@localhost ansible]# for i in &#123;1,3,5&#125;; do ssh-copy-id -i 172.31.24.3$i ; done</span><br><span class="line">[root@localhost ansible]# vim &#x2F;etc&#x2F;ansible&#x2F;hosts</span><br><span class="line">#添加两个组dev、test</span><br><span class="line">[dev]</span><br><span class="line">172.31.22.31  </span><br><span class="line">172.31.22.33  </span><br><span class="line">172.31.22.35  </span><br><span class="line"></span><br><span class="line">[test]</span><br><span class="line">172.31.24.31  </span><br><span class="line">172.31.24.33  </span><br><span class="line">172.31.24.35  </span><br><span class="line"></span><br><span class="line">修改完后ping下该组主机是否都能连上</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible test -m ping</span><br><span class="line">172.31.24.33 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">172.31.24.31 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">172.31.24.35 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ansbile常用模块"><a href="#ansbile常用模块" class="headerlink" title="ansbile常用模块"></a>ansbile常用模块</h2><p>下面举几个日常用的比较多的模块，没有列举完所有的，下列模块掌握之后日常对付批量操作虚拟机的任务是没问题的。</p><h3 id="ping模块"><a href="#ping模块" class="headerlink" title="ping模块"></a>ping模块</h3><p>测试主机连通性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible $1 -m ping</span><br><span class="line"></span><br><span class="line">$1：组名    eg：dev</span><br></pre></td></tr></table></figure><h3 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h3><p>这个模块可以直接在远程主机上执行命令，并将结果返回本主机。</p><p>注意，该命令不支持| 管道命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ansible $1 -m command -a $2</span><br><span class="line"></span><br><span class="line">$1：组名    eg：dev</span><br><span class="line"></span><br><span class="line">$2：命令    eg:&#39;ip add&#39;</span><br></pre></td></tr></table></figure><h3 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h3><p>shell模块可以在远程主机上调用shell解释器运行命令，支持shell的各种功能，例如管道等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ansible $1 -m shell -a $2</span><br><span class="line"></span><br><span class="line">$1：组名    eg：dev</span><br><span class="line"></span><br><span class="line">$2：命令    eg:&#39;ps -aux|grep java&#39;</span><br></pre></td></tr></table></figure><p>shell模块 vs command模块</p><p>这两个模块在很多情况下都能完成同样的工作，以下是两个模块之前的区别：</p><ul><li><p>command 模块命令将不会使用 shell 执行。</p></li><li><p>因此, 像 $HOME 这样的变量是不可用的。还有像&lt;, &gt;, |, ;, &amp;都将不可用。</p></li><li><p>shell 模块通过shell程序执行， 默认是/bin/sh, &lt;, &gt;, |, ;, &amp; 可用，但这样有潜在的 shell 注入风险。</p></li><li><p>command 模块更安全，因为他不受用户环境的影响。 也很大的避免了潜在的 shell 注入风险。</p></li></ul><h3 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h3><p>这个模块用于将文件复制到远程主机，同时支持给定内容生成文件和修改权限等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ansible $1 -m copy -a $2</span><br><span class="line"></span><br><span class="line">$1：组名    eg：dev</span><br><span class="line"></span><br><span class="line">$2：命令    eg：&#39;src&#x3D;&#x2F;data&#x2F;test.sh dest&#x3D;&#x2F;data mode&#x3D;777 &#39;</span><br><span class="line"></span><br><span class="line">参数详解</span><br><span class="line"></span><br><span class="line">src　　　　  #被复制到远程主机的本地文件。可以是绝对路径，也可以是相对路径。如果路径是一个目录，则会递归复制，用法类似于&quot;rsync&quot;</span><br><span class="line">content　　　#用于替换&quot;src&quot;，可以直接指定文件的值</span><br><span class="line">dest　　　　 #必选项，将源文件复制到的远程主机的绝对路径</span><br><span class="line">backup　　　 #当文件内容发生改变后，在覆盖之前把源文件备份，备份文件包含时间信息</span><br><span class="line">mode　　　　 #递归设定目录的权限，默认为系统默认权限</span><br><span class="line">force　　　　#当目标主机包含该文件，但内容不同时，设为&quot;yes&quot;，表示强制覆盖；设为&quot;no&quot;，表示目标主机的目标位置不存在该文件才复制。默认为&quot;yes&quot;</span><br><span class="line">others　　　 #所有的 file 模块中的选项可以在这里使用</span><br></pre></td></tr></table></figure><h3 id="fetch模块"><a href="#fetch模块" class="headerlink" title="fetch模块"></a>fetch模块</h3><p>该模块用于从远程某主机获取（复制）文件到本地。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">ansible $1 -m fetch -a $2</span><br><span class="line"></span><br><span class="line">$1：组名    eg：dev</span><br><span class="line"></span><br><span class="line">$2：命令    eg：&#39;src&#x3D;&#x2F;data&#x2F;test.sh dest&#x3D;&#x2F;data &#39;</span><br><span class="line"></span><br><span class="line">dest：用来存放文件的目录</span><br><span class="line">src：在远程拉取的文件，并且必须是一个file，不能是目录</span><br><span class="line"></span><br><span class="line">文件保存的路径是我们设置的接收目录下的被管制主机ip目录下</span><br><span class="line"></span><br><span class="line">[root@localhost data]# ansible dev -m fetch -a &#39;src&#x3D;&#x2F;data&#x2F;test.sh dest&#x3D;&#x2F;data&#39;</span><br><span class="line">172.31.22.33 | CHANGED &#x3D;&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;checksum&quot;: &quot;d53a75b15c0c9eaf4633e26442f4cca32c600c00&quot;, </span><br><span class="line">    &quot;dest&quot;: &quot;&#x2F;data&#x2F;172.31.22.33&#x2F;data&#x2F;test.sh&quot;, </span><br><span class="line">    &quot;md5sum&quot;: &quot;2da6c61e985bf3cece7ece373c3976b0&quot;, </span><br><span class="line">    &quot;remote_checksum&quot;: &quot;d53a75b15c0c9eaf4633e26442f4cca32c600c00&quot;, </span><br><span class="line">    &quot;remote_md5sum&quot;: null</span><br><span class="line">&#125;</span><br><span class="line">172.31.22.31 | CHANGED &#x3D;&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;checksum&quot;: &quot;d53a75b15c0c9eaf4633e26442f4cca32c600c00&quot;, </span><br><span class="line">    &quot;dest&quot;: &quot;&#x2F;data&#x2F;172.31.22.31&#x2F;data&#x2F;test.sh&quot;, </span><br><span class="line">    &quot;md5sum&quot;: &quot;2da6c61e985bf3cece7ece373c3976b0&quot;, </span><br><span class="line">    &quot;remote_checksum&quot;: &quot;d53a75b15c0c9eaf4633e26442f4cca32c600c00&quot;, </span><br><span class="line">    &quot;remote_md5sum&quot;: null</span><br><span class="line">&#125;</span><br><span class="line">172.31.22.35 | CHANGED &#x3D;&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;checksum&quot;: &quot;d53a75b15c0c9eaf4633e26442f4cca32c600c00&quot;, </span><br><span class="line">    &quot;dest&quot;: &quot;&#x2F;data&#x2F;172.31.22.35&#x2F;data&#x2F;test.sh&quot;, </span><br><span class="line">    &quot;md5sum&quot;: &quot;2da6c61e985bf3cece7ece373c3976b0&quot;, </span><br><span class="line">    &quot;remote_checksum&quot;: &quot;d53a75b15c0c9eaf4633e26442f4cca32c600c00&quot;, </span><br><span class="line">    &quot;remote_md5sum&quot;: null</span><br><span class="line">&#125;</span><br><span class="line">[root@localhost data]# ll</span><br><span class="line">total 28</span><br><span class="line">drwxr-xr-x.  3 root root 4096 May 15 10:08 172.31.22.31</span><br><span class="line">drwxr-xr-x.  3 root root 4096 May 15 10:08 172.31.22.33</span><br><span class="line">drwxr-xr-x.  3 root root 4096 May 15 10:08 172.31.22.35</span><br><span class="line">[root@localhost data]# cd 172.31.22.31&#x2F;data</span><br><span class="line">[root@localhost data]# ll</span><br><span class="line">total 4</span><br><span class="line">-rwxr-xr-x. 1 root root 352 May 15 10:08 test.sh</span><br></pre></td></tr></table></figure><h3 id="yum模块"><a href="#yum模块" class="headerlink" title="yum模块"></a>yum模块</h3><p>该模块主要用于软件的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">ansible $1 -m yum -a $2</span><br><span class="line"></span><br><span class="line">$1：组名    eg：dev</span><br><span class="line"></span><br><span class="line">$2：命令    eg：&#39;name&#x3D;tree  state&#x3D;present&#39;</span><br><span class="line"></span><br><span class="line">name&#x3D;　　#所安装的包的名称</span><br><span class="line">state&#x3D;　　#present 安装， latest 安装最新的, absent 卸载软件。</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ansible dev -m yum -a &#39;name&#x3D;tree  state&#x3D;present&#39;</span><br><span class="line">172.31.22.31 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;msg&quot;: &quot;&quot;, </span><br><span class="line">    &quot;rc&quot;: 0, </span><br><span class="line">    &quot;results&quot;: [</span><br><span class="line">        &quot;tree-1.6.0-10.el7.x86_64 providing tree is already installed&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">172.31.22.35 | CHANGED &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;changes&quot;: &#123;</span><br><span class="line">        &quot;installed&quot;: [</span><br><span class="line">            &quot;tree&quot;</span><br><span class="line">        ]</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;msg&quot;: &quot;&quot;, </span><br><span class="line">    &quot;rc&quot;: 0, </span><br><span class="line">    &quot;results&quot;: [</span><br><span class="line">        &quot;Loaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.aliyun.com\n * elrepo: mirrors.tuna.tsinghua.edu.cn\n * epel: mirrors.tuna.tsinghua.edu.cn\n * extras: mirrors.aliyun.com\n * updates: mirrors.aliyun.com\nResolving Dependencies\n--&gt; Running transaction check\n---&gt; Package tree.x86_64 0:1.6.0-10.el7 will be installed\n--&gt; Finished Dependency Resolution\n\nDependencies Resolved\n\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n Package        Arch             Version                   Repository      Size\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nInstalling:\n tree           x86_64           1.6.0-10.el7              base            46 k\n\nTransaction Summary\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nInstall  1 Package\n\nTotal download size: 46 k\nInstalled size: 87 k\nDownloading packages:\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : tree-1.6.0-10.el7.x86_64                                     1&#x2F;1 \n  Verifying  : tree-1.6.0-10.el7.x86_64                                     1&#x2F;1 \n\nInstalled:\n  tree.x86_64 0:1.6.0-10.el7                                                    \n\nComplete!\n&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">172.31.22.33 | CHANGED &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;changes&quot;: &#123;</span><br><span class="line">        &quot;installed&quot;: [</span><br><span class="line">            &quot;tree&quot;</span><br><span class="line">        ]</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;msg&quot;: &quot;&quot;, </span><br><span class="line">    &quot;rc&quot;: 0, </span><br><span class="line">    &quot;results&quot;: [</span><br><span class="line">        &quot;Loaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.aliyun.com\n * elrepo: mirrors.tuna.tsinghua.edu.cn\n * epel: mirrors.tuna.tsinghua.edu.cn\n * extras: mirrors.aliyun.com\n * updates: mirrors.aliyun.com\nResolving Dependencies\n--&gt; Running transaction check\n---&gt; Package tree.x86_64 0:1.6.0-10.el7 will be installed\n--&gt; Finished Dependency Resolution\n\nDependencies Resolved\n\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n Package        Arch             Version                   Repository      Size\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nInstalling:\n tree           x86_64           1.6.0-10.el7              base            46 k\n\nTransaction Summary\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nInstall  1 Package\n\nTotal download size: 46 k\nInstalled size: 87 k\nDownloading packages:\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : tree-1.6.0-10.el7.x86_64                                     1&#x2F;1 \n  Verifying  : tree-1.6.0-10.el7.x86_64                                     1&#x2F;1 \n\nInstalled:\n  tree.x86_64 0:1.6.0-10.el7                                                    \n\nComplete!\n&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：已安装目标软件的机器不会再执行安装</p><h2 id="ansible-playbook"><a href="#ansible-playbook" class="headerlink" title="ansible playbook"></a>ansible playbook</h2><p>playbook 是 ansible 用于配置，部署，和管理被控节点的剧本。即写好一个剧本后，根据组的不同可以使用一个剧本来批量操作服务器，比如这个剧本制作好了后，可以给dev组安装java环境，安装完成后，还可以给test组安装，有点模板的意思。</p><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>创建一个带.yml结尾的文本，文本内容应该遵循下面几点</p><ul><li>文件的第一行应该以 “—“ (三个连字符)开始，表明文件的开始。</li><li>在同一行中，#之后的内容表示注释。</li><li>YML中的列表元素以”-”开头然后紧跟着一个空格，后面为元素内容。</li><li>同一个列表中的元素应该保持相同的缩进。否则会被当做错误处理。</li><li>play中hosts，variables，roles，tasks等对象的表示方法都是键值中间以”:”分隔表示，”:”后面还要增加一个空格。</li></ul><p>Playbook的核心元素：</p><ul><li>Hosts：主机组</li><li>Tasks：任务列表</li><li>Variables：变量，设置方式有四种</li><li>Templates：包含了模板语法的文本文件——Jinja是一种现代且设计友好的Python模板语言，以Django的模板为模型。借助可选的沙盒模板执行环境，它可以快速，广泛地使用并且安全</li><li>Handlers：由特定条件触发的任务</li></ul><p>Playbooks配置文件的基础组件：</p><ul><li>Hosts：运行指定任务的目标主机</li><li>remoute_user：在远程主机上执行任务的用户</li><li>tasks：任务列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">     tasks：</span><br><span class="line">　　　　　– name: TASK_NAME   </span><br><span class="line">　　　　　　module: arguments</span><br><span class="line">　　　　　　notify: HANDLER_NAME</span><br><span class="line">　　 handlers:</span><br><span class="line">　　　　　– name: HANDLER_NAME</span><br><span class="line">　　　　　　module: arguments</span><br><span class="line">　　　　　　</span><br><span class="line">handlers：任务，在特定条件下触发；接收到其它任务的通知时被触发；　　　</span><br><span class="line">　  (1) 某任务的状态在运行后为changed时，可通过“notify”通知给相应的handlers；</span><br><span class="line">　　(2) 任务可以通过“tags“打标签，而后可在ansible-playbook命令上使用-t指定进行调用；</span><br><span class="line">　　</span><br><span class="line">ansible-playbook命令的命令行中的-e vars&#x3D;VARS，这样就可以直接把自定义的变量传入。</span><br><span class="line"></span><br><span class="line">例如下面的playbook </span><br><span class="line">你需要改http_port 端口可以这样执行</span><br><span class="line"></span><br><span class="line">ansible-playbook ansible_httpd.yml -e http_port&#x3D;81 </span><br><span class="line"></span><br><span class="line">你需要定向执行tag：startapache的方法</span><br><span class="line"></span><br><span class="line">ansible-playbook ansible_httpd.yml -t startapache</span><br></pre></td></tr></table></figure><h3 id="官网的第一个的playbook"><a href="#官网的第一个的playbook" class="headerlink" title="官网的第一个的playbook"></a>官网的第一个的playbook</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim ansible_httpd.yml</span><br><span class="line">---</span><br><span class="line">- hosts: dev       #ansbile定义的组名</span><br><span class="line">  vars:            #变量,可以传到template里的httpd.j2里，也可以直接在yml文件里利用</span><br><span class="line">    http_port: 80   </span><br><span class="line">    max_clients: 200</span><br><span class="line">#远程执行的用户</span><br><span class="line">  remote_user: root  </span><br><span class="line">  tasks:</span><br><span class="line">  - name: ensure apache is at the latest version   #方法名</span><br><span class="line">#基础模块：参数</span><br><span class="line">    yum: pkg&#x3D;httpd state&#x3D;latest                   </span><br><span class="line">  - name: write the apache config file</span><br><span class="line">    template: src&#x3D;&#x2F;srv&#x2F;httpd.j2 dest&#x3D;&#x2F;etc&#x2F;httpd.conf</span><br><span class="line">#执行name为restart apache的方法</span><br><span class="line">    notify:         </span><br><span class="line">    - restart apache  </span><br><span class="line">  - name: ensure apache is running</span><br><span class="line">    service: name&#x3D;httpd state&#x3D;started </span><br><span class="line">    tag:startapache</span><br><span class="line">#这里的restart apache和上面的触发是配对的。这就是handlers的作用。相当于tag</span><br><span class="line">  handlers:          </span><br><span class="line">    - name: restart apache</span><br><span class="line">      service: name&#x3D;httpd state&#x3D;restarted   #重启服务器</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>ansible最基本的知识就梳理到这了，其实对于大部分场景已经够用了。如果需要定制化长期使用ansible编排，推荐用ansbile-playbook的模式，这样对于大型集群维护更方便，例如改脚本、配置更新、重启等。如果是偶尔用ansbile可以直接使用普通命令。本文展示的ansible只是一个入门教程，实际使用中对于更多丰富模块的利用、以及优化ansible的性能的方法可以看下面参考资料的官方文档。</p><p>下期通过ansible配合jenkins展现实战中ansbile的可用性。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://docs.ansible.com/" target="_blank" rel="noopener">ansible官方文档</a></p><p><a href="https://jinja.palletsprojects.com/en/2.11.x/" target="_blank" rel="noopener">jinja2官方文档</a></p><p><a href="https://www.cnblogs.com/keerya/p/7987886.html#_label0_0" target="_blank" rel="noopener">自动化运维工具——ansible详解（一）</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> 跟我学Devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Devops </tag>
            
            <tag> 自动化 </tag>
            
            <tag> Ansible </tag>
            
            <tag> Python </tag>
            
            <tag> Jinja </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现负载均衡器搭配Nacos集群的高可用框架</title>
      <link href="/2020/05/14/slb/slb-nacos/"/>
      <url>/2020/05/14/slb/slb-nacos/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><p>本文接上期，教大家在项目中的如何利用负载均衡和高可用组件搭建nacos集群。</p><p>架构图如下<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/nacos_ha.jpg"  alt="nacos_ha.jpg"></p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>请确保是在环境中安装使用:</p><ul><li>64 bit JDK 1.8+；下载.配置。</li><li>Maven 3.2.x+；下载.配置。</li><li>3个或3个以上Nacos节点才能构成集群。</li><li>keepalived</li><li>nginx</li><li>mysql5.7.28</li></ul><table><thead><tr><th>服务器</th><th>IP</th></tr></thead><tbody><tr><td>nginx+keepalived(主)</td><td>172.31.26.11</td></tr><tr><td>nginx+keepalived(备)</td><td>172.31.26.12</td></tr><tr><td>mysql</td><td>172.31.26.13</td></tr><tr><td>nacos-01</td><td>172.31.26.14</td></tr><tr><td>nacos-02</td><td>172.31.26.15</td></tr><tr><td>nacos-03</td><td>172.31.26.16</td></tr><tr><td>VIP</td><td>172.31.26.200</td></tr></tbody></table><h1 id="安装启动步骤"><a href="#安装启动步骤" class="headerlink" title="安装启动步骤"></a>安装启动步骤</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><table><thead><tr><th>服务器</th><th>IP</th></tr></thead><tbody><tr><td>mysql</td><td>172.31.26.13</td></tr></tbody></table><h3 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><p><a href="https://rugod.cn/2020/05/01/mysql/mysql-install/" target="_blank" rel="noopener">离线安装Mysql5.7.28及调优</a></p><h3 id="初始化-MySQL-数据库"><a href="#初始化-MySQL-数据库" class="headerlink" title="初始化 MySQL 数据库"></a>初始化 MySQL 数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; config_info   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;config_info&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,</span><br><span class="line">  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,</span><br><span class="line">  &#96;group_id&#96; varchar(255) DEFAULT NULL,</span><br><span class="line">  &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;,</span><br><span class="line">  &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;,</span><br><span class="line">  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,</span><br><span class="line">  &#96;src_user&#96; text COMMENT &#39;source user&#39;,</span><br><span class="line">  &#96;src_ip&#96; varchar(20) DEFAULT NULL COMMENT &#39;source ip&#39;,</span><br><span class="line">  &#96;app_name&#96; varchar(128) DEFAULT NULL,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,</span><br><span class="line">  &#96;c_desc&#96; varchar(256) DEFAULT NULL,</span><br><span class="line">  &#96;c_use&#96; varchar(64) DEFAULT NULL,</span><br><span class="line">  &#96;effect&#96; varchar(64) DEFAULT NULL,</span><br><span class="line">  &#96;type&#96; varchar(64) DEFAULT NULL,</span><br><span class="line">  &#96;c_schema&#96; text,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_configinfo_datagrouptenant&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; config_info_aggr   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;config_info_aggr&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,</span><br><span class="line">  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,</span><br><span class="line">  &#96;group_id&#96; varchar(255) NOT NULL COMMENT &#39;group_id&#39;,</span><br><span class="line">  &#96;datum_id&#96; varchar(255) NOT NULL COMMENT &#39;datum_id&#39;,</span><br><span class="line">  &#96;content&#96; longtext NOT NULL COMMENT &#39;内容&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; datetime NOT NULL COMMENT &#39;修改时间&#39;,</span><br><span class="line">  &#96;app_name&#96; varchar(128) DEFAULT NULL,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_configinfoaggr_datagrouptenantdatum&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;,&#96;datum_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;增加租户字段&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; config_info_beta   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;config_info_beta&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,</span><br><span class="line">  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,</span><br><span class="line">  &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;,</span><br><span class="line">  &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;,</span><br><span class="line">  &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;,</span><br><span class="line">  &#96;beta_ips&#96; varchar(1024) DEFAULT NULL COMMENT &#39;betaIps&#39;,</span><br><span class="line">  &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;,</span><br><span class="line">  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,</span><br><span class="line">  &#96;src_user&#96; text COMMENT &#39;source user&#39;,</span><br><span class="line">  &#96;src_ip&#96; varchar(20) DEFAULT NULL COMMENT &#39;source ip&#39;,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_configinfobeta_datagrouptenant&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info_beta&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; config_info_tag   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;config_info_tag&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,</span><br><span class="line">  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,</span><br><span class="line">  &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;tenant_id&#39;,</span><br><span class="line">  &#96;tag_id&#96; varchar(128) NOT NULL COMMENT &#39;tag_id&#39;,</span><br><span class="line">  &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;,</span><br><span class="line">  &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;,</span><br><span class="line">  &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;,</span><br><span class="line">  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,</span><br><span class="line">  &#96;src_user&#96; text COMMENT &#39;source user&#39;,</span><br><span class="line">  &#96;src_ip&#96; varchar(20) DEFAULT NULL COMMENT &#39;source ip&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_configinfotag_datagrouptenanttag&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;,&#96;tag_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info_tag&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; config_tags_relation   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;config_tags_relation&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) NOT NULL COMMENT &#39;id&#39;,</span><br><span class="line">  &#96;tag_name&#96; varchar(128) NOT NULL COMMENT &#39;tag_name&#39;,</span><br><span class="line">  &#96;tag_type&#96; varchar(64) DEFAULT NULL COMMENT &#39;tag_type&#39;,</span><br><span class="line">  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,</span><br><span class="line">  &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;tenant_id&#39;,</span><br><span class="line">  &#96;nid&#96; bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  PRIMARY KEY (&#96;nid&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_configtagrelation_configidtag&#96; (&#96;id&#96;,&#96;tag_name&#96;,&#96;tag_type&#96;),</span><br><span class="line">  KEY &#96;idx_tenant_id&#96; (&#96;tenant_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_tag_relation&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; group_capacity   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;group_capacity&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;,</span><br><span class="line">  &#96;group_id&#96; varchar(128) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;Group ID，空字符表示整个集群&#39;,</span><br><span class="line">  &#96;quota&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;配额，0表示使用默认值&#39;,</span><br><span class="line">  &#96;usage&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;使用量&#39;,</span><br><span class="line">  &#96;max_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个配置大小上限，单位为字节，0表示使用默认值&#39;,</span><br><span class="line">  &#96;max_aggr_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;聚合子配置最大个数，，0表示使用默认值&#39;,</span><br><span class="line">  &#96;max_aggr_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#39;,</span><br><span class="line">  &#96;max_history_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;最大变更历史数量&#39;,</span><br><span class="line">  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_group_id&#96; (&#96;group_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;集群、各Group容量信息表&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; his_config_info   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;his_config_info&#96; (</span><br><span class="line">  &#96;id&#96; bigint(64) unsigned NOT NULL,</span><br><span class="line">  &#96;nid&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  &#96;data_id&#96; varchar(255) NOT NULL,</span><br><span class="line">  &#96;group_id&#96; varchar(128) NOT NULL,</span><br><span class="line">  &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;,</span><br><span class="line">  &#96;content&#96; longtext NOT NULL,</span><br><span class="line">  &#96;md5&#96; varchar(32) DEFAULT NULL,</span><br><span class="line">  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  &#96;src_user&#96; text,</span><br><span class="line">  &#96;src_ip&#96; varchar(20) DEFAULT NULL,</span><br><span class="line">  &#96;op_type&#96; char(10) DEFAULT NULL,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;nid&#96;),</span><br><span class="line">  KEY &#96;idx_gmt_create&#96; (&#96;gmt_create&#96;),</span><br><span class="line">  KEY &#96;idx_gmt_modified&#96; (&#96;gmt_modified&#96;),</span><br><span class="line">  KEY &#96;idx_did&#96; (&#96;data_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;多租户改造&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;</span><br><span class="line">&#x2F;*   表名称 &#x3D; tenant_capacity   *&#x2F;</span><br><span class="line">&#x2F;******************************************&#x2F;</span><br><span class="line">CREATE TABLE &#96;tenant_capacity&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;Tenant ID&#39;,</span><br><span class="line">  &#96;quota&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;配额，0表示使用默认值&#39;,</span><br><span class="line">  &#96;usage&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;使用量&#39;,</span><br><span class="line">  &#96;max_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个配置大小上限，单位为字节，0表示使用默认值&#39;,</span><br><span class="line">  &#96;max_aggr_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;聚合子配置最大个数&#39;,</span><br><span class="line">  &#96;max_aggr_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#39;,</span><br><span class="line">  &#96;max_history_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;最大变更历史数量&#39;,</span><br><span class="line">  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_tenant_id&#96; (&#96;tenant_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;租户容量信息表&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;tenant_info&#96; (</span><br><span class="line">  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,</span><br><span class="line">  &#96;kp&#96; varchar(128) NOT NULL COMMENT &#39;kp&#39;,</span><br><span class="line">  &#96;tenant_id&#96; varchar(128) default &#39;&#39; COMMENT &#39;tenant_id&#39;,</span><br><span class="line">  &#96;tenant_name&#96; varchar(128) default &#39;&#39; COMMENT &#39;tenant_name&#39;,</span><br><span class="line">  &#96;tenant_desc&#96; varchar(256) DEFAULT NULL COMMENT &#39;tenant_desc&#39;,</span><br><span class="line">  &#96;create_source&#96; varchar(32) DEFAULT NULL COMMENT &#39;create_source&#39;,</span><br><span class="line">  &#96;gmt_create&#96; bigint(20) NOT NULL COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;gmt_modified&#96; bigint(20) NOT NULL COMMENT &#39;修改时间&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  UNIQUE KEY &#96;uk_tenant_info_kptenantid&#96; (&#96;kp&#96;,&#96;tenant_id&#96;),</span><br><span class="line">  KEY &#96;idx_tenant_id&#96; (&#96;tenant_id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;tenant_info&#39;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;users&#96; (</span><br><span class="line">&#96;username&#96; varchar(50) NOT NULL PRIMARY KEY,</span><br><span class="line">&#96;password&#96; varchar(500) NOT NULL,</span><br><span class="line">&#96;enabled&#96; boolean NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;roles&#96; (</span><br><span class="line">&#96;username&#96; varchar(50) NOT NULL,</span><br><span class="line">&#96;role&#96; varchar(50) NOT NULL,</span><br><span class="line">UNIQUE INDEX &#96;idx_user_role&#96; (&#96;username&#96; ASC, &#96;role&#96; ASC) USING BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;permissions&#96; (</span><br><span class="line">    &#96;role&#96; varchar(50) NOT NULL,</span><br><span class="line">    &#96;resource&#96; varchar(512) NOT NULL,</span><br><span class="line">    &#96;action&#96; varchar(8) NOT NULL,</span><br><span class="line">    UNIQUE INDEX &#96;uk_role_permission&#96; (&#96;role&#96;,&#96;resource&#96;,&#96;action&#96;) USING BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO users (username, password, enabled) VALUES (&#39;nacos&#39;, &#39;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#39;, TRUE);</span><br><span class="line"></span><br><span class="line">INSERT INTO roles (username, role) VALUES (&#39;nacos&#39;, &#39;ROLE_ADMIN&#39;);</span><br></pre></td></tr></table></figure><h2 id="nacos集群"><a href="#nacos集群" class="headerlink" title="nacos集群"></a>nacos集群</h2><table><thead><tr><th>服务器</th><th>IP</th></tr></thead><tbody><tr><td>nacos-01</td><td>172.31.26.14</td></tr><tr><td>nacos-02</td><td>172.31.26.15</td></tr><tr><td>nacos-03</td><td>172.31.26.16</td></tr></tbody></table><p>以下是每台节点都需要执行的操作</p><h3 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y java-1.8.0-openjdk</span><br><span class="line">yum install -y java-devel</span><br></pre></td></tr></table></figure><h3 id="安装maven"><a href="#安装maven" class="headerlink" title="安装maven"></a>安装maven</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt</span><br><span class="line">wget https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;apache&#x2F;maven&#x2F;maven-3&#x2F;3.6.3&#x2F;binaries&#x2F;apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">tar -zxvf apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">mv apache-maven-3.6.3 maven</span><br><span class="line"></span><br><span class="line">配置环境变量</span><br><span class="line">vi &#x2F;etc&#x2F;profile </span><br><span class="line">export M2_HOME&#x3D;&#x2F;opt&#x2F;maven                       </span><br><span class="line">export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin:$M2_HOME&#x2F;bin</span><br><span class="line">修改完后source &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# mvn -v</span><br><span class="line">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class="line">Maven home: &#x2F;opt&#x2F;maven</span><br><span class="line">Java version: 1.8.0_252, vendor: Oracle Corporation, runtime: &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64&#x2F;jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;5.3.11-1.el7.elrepo.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure><h3 id="安装nacos"><a href="#安装nacos" class="headerlink" title="安装nacos"></a>安装nacos</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;alibaba&#x2F;nacos&#x2F;releases&#x2F;download&#x2F;1.1.3&#x2F;nacos-server-1.1.3.tar.gz</span><br><span class="line">tar -zxvf nacos-server-1.1.3.tar.gz</span><br></pre></td></tr></table></figure><h3 id="cluster-conf-配置"><a href="#cluster-conf-配置" class="headerlink" title="cluster.conf 配置"></a>cluster.conf 配置</h3><p>vim /opt/nacos/conf/cluster.conf </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#添加集群信息</span><br><span class="line"># ip:port</span><br><span class="line">172.31.26.14:8848</span><br><span class="line">172.31.26.15:8848</span><br><span class="line">172.31.26.16:8848</span><br></pre></td></tr></table></figure><h3 id="application-properties-配置"><a href="#application-properties-配置" class="headerlink" title="application.properties 配置"></a>application.properties 配置</h3><p>vim /opt/nacos/conf/application.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#添加数据库连接信息</span><br><span class="line">db.num&#x3D;1    </span><br><span class="line">db.url.0&#x3D;jdbc:mysql:&#x2F;&#x2F;172.31.26.13:3306&#x2F;nacos_config?characterEncoding&#x3D;utf8&amp;connectTimeout&#x3D;1000&amp;socketTimeout&#x3D;3000&amp;autoReconnect&#x3D;true</span><br><span class="line">db.user&#x3D;admin   </span><br><span class="line">db.password&#x3D;123456</span><br></pre></td></tr></table></figure><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><p>进入每台nacos节点，启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd &#x2F;opt&#x2F;nacos&#x2F;bin</span><br><span class="line">[root@localhost bin]# sh startup.sh </span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64&#x2F;bin&#x2F;java  -server -Xms2g -Xmx2g -Xmn1g -XX:MetaspaceSize&#x3D;128m -XX:MaxMetaspaceSize&#x3D;320m -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;&#x2F;opt&#x2F;nacos&#x2F;logs&#x2F;java_heapdump.hprof -XX:-UseLargePages -Djava.ext.dirs&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64&#x2F;jre&#x2F;lib&#x2F;ext:&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64&#x2F;lib&#x2F;ext:&#x2F;opt&#x2F;nacos&#x2F;plugins&#x2F;cmdb:&#x2F;opt&#x2F;nacos&#x2F;plugins&#x2F;mysql -Xloggc:&#x2F;opt&#x2F;nacos&#x2F;logs&#x2F;nacos_gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles&#x3D;10 -XX:GCLogFileSize&#x3D;100M -Dnacos.home&#x3D;&#x2F;opt&#x2F;nacos -Dloader.path&#x3D;&#x2F;opt&#x2F;nacos&#x2F;plugins&#x2F;health -jar &#x2F;opt&#x2F;nacos&#x2F;target&#x2F;nacos-server.jar  --spring.config.location&#x3D;classpath:&#x2F;,classpath:&#x2F;config&#x2F;,file:.&#x2F;,file:.&#x2F;config&#x2F;,file:&#x2F;opt&#x2F;nacos&#x2F;conf&#x2F; --logging.config&#x3D;&#x2F;opt&#x2F;nacos&#x2F;conf&#x2F;nacos-logback.xml --server.max-http-header-size&#x3D;524288</span><br><span class="line">nacos is starting with cluster</span><br><span class="line">nacos is starting，you can check the &#x2F;opt&#x2F;nacos&#x2F;logs&#x2F;start.out</span><br></pre></td></tr></table></figure><h2 id="nginx-keepalived"><a href="#nginx-keepalived" class="headerlink" title="nginx+keepalived"></a>nginx+keepalived</h2><table><thead><tr><th>服务器</th><th>IP</th></tr></thead><tbody><tr><td>nginx+keepalived(主)</td><td>172.31.26.11</td></tr><tr><td>nginx+keepalived(备)</td><td>172.31.26.12</td></tr></tbody></table><p>以下是每台节点都需要执行的操作</p><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>yum install epel-release -y<br>yum install nginx httpd-tools -y</p><h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><p>vim /etc/nginx/nginx.conf 添加下面的配置到http{}中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">upstream nacos &#123;</span><br><span class="line">    #server nacos地址:端口号 </span><br><span class="line">    #weight表示权重   默认情况下为1。</span><br><span class="line">    #max_fails 设置在fail_timeout 参数设置的持续时间内应与服务器通信失败的尝试次数，以认为服务器在fail_timeout参数设置的持续时间内不可用 。</span><br><span class="line">    #fail_timeout 在指定次数的不成功尝试与服务器通信的时间内应该碰巧认为服务器不可用</span><br><span class="line">    server 172.31.26.14:8848 weight&#x3D;4 max_fails&#x3D;2 fail_timeout&#x3D;30s;   </span><br><span class="line">    server 172.31.26.15:8848 weight&#x3D;4 max_fails&#x3D;2 fail_timeout&#x3D;30s;</span><br><span class="line">    server 172.31.26.16:8848 weight&#x3D;4 max_fails&#x3D;2 fail_timeout&#x3D;30s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"> listen       80;</span><br><span class="line"> server_name  nacoscluster.com;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">     proxy_pass http:&#x2F;&#x2F;nacos&#x2F; ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动-关闭nginx"><a href="#启动-关闭nginx" class="headerlink" title="启动/关闭nginx"></a>启动/关闭nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx    启动</span><br><span class="line">nginx -s stop   关闭</span><br><span class="line">nginx -s reload 重启</span><br></pre></td></tr></table></figure><h3 id="安装keepalived"><a href="#安装keepalived" class="headerlink" title="安装keepalived"></a>安装keepalived</h3><p>yum install -y keepalived</p><h3 id="配置keepalived"><a href="#配置keepalived" class="headerlink" title="配置keepalived"></a>配置keepalived</h3><p>vim /etc/keepalived/keepalived.conf</p><p>主节点的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   router_id nginx_master    # 设置nginx master的id，在一个网络应该是唯一的</span><br><span class="line">   script_user root</span><br><span class="line">   enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#VRRP脚本定义</span><br><span class="line">vrrp_script chk_nginx</span><br><span class="line">&#123;</span><br><span class="line">    script &quot;&#x2F;etc&#x2F;keepalived&#x2F;check_nginx.sh&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    weight -2   #若脚本返回为1 则减这台机器keepalived的实时权重</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER            # 指定keepalived的角色，MASTER为主，BACKUP为备</span><br><span class="line">    interface ens192          # 当前进行vrrp通讯的网络接口卡(当前centos的网卡)</span><br><span class="line">    virtual_router_id 51    # 虚拟路由编号，主从要一致</span><br><span class="line">    priority 100         # 权重，数值越大，获取处理请求的优先级越高</span><br><span class="line">    unicast_src_ip  172.31.26.51   #本机ip</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        172.31.26.52      #对端ip</span><br><span class="line">    &#125;</span><br><span class="line">    advert_int 1            # 检查间隔，默认为1s(vrrp组播周期秒数)</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">         chk_nginx</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">       172.31.26.200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>备用节点的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   router_id nginx_backup</span><br><span class="line">   script_user root</span><br><span class="line">   enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#VRRP脚本定义</span><br><span class="line">vrrp_script chk_nginx</span><br><span class="line">&#123;</span><br><span class="line">    script &quot;&#x2F;etc&#x2F;keepalived&#x2F;check_nginx.sh&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    weight -2    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens192</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 99    #权重要比主节点低</span><br><span class="line">    unicast_src_ip  172.31.26.52   #本机ip</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        172.31.26.51      #对端ip</span><br><span class="line">    &#125;</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">         chk_nginx</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.31.26.200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写nginx监控检查脚本，放到/etc/keepalived目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;keepalived</span><br><span class="line">vim check_nginx.sh</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">A&#x3D;&#96;ps -C nginx --no-header |wc -l&#96;  #检查nginx进程是否存在</span><br><span class="line">if [ $A -eq 0 ];then</span><br><span class="line">    &#x2F;usr&#x2F;sbin&#x2F;nginx                #重启nginx</span><br><span class="line">    echo &quot;1&quot;</span><br><span class="line">    if [ &#96;ps -C nginx --no-header |wc -l&#96; -eq 0 ];then    #nginx重启失败</span><br><span class="line">        exit 1</span><br><span class="line">    else</span><br><span class="line">        exit 0</span><br><span class="line">    fi</span><br><span class="line">else</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>写完后记得加可执行的权限,脚本监控nginx进程，如果不存在则重启，如果重启失败则返回1,keepalived配置文件通过返回值为1可以实时减2点keepalived的权重，若主机的实时权重低于备用机，则触发VIP切换，由备用机代理VIP。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x check_nginx.sh</span><br></pre></td></tr></table></figure><p>验证脚本是否可行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh  check_nginx.sh</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/keepalived_check.jpg"  alt="keepalived_check.jpg"></p><p>nginx进程不存在则重启，验证成功</p><h3 id="启动keepalived"><a href="#启动keepalived" class="headerlink" title="启动keepalived"></a>启动keepalived</h3><p>systemctl start keepalived</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">主节点</span><br><span class="line">[root@localhost nginx]# ip add</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1&#x2F;8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1&#x2F;128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link&#x2F;ether 00:50:56:99:10:75 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.31.26.51&#x2F;24 brd 172.31.26.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 172.31.26.200&#x2F;32 scope global ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">       </span><br><span class="line">备用节点</span><br><span class="line">[root@localhost nginx]# ip add</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1&#x2F;8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1&#x2F;128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link&#x2F;ether 00:50:56:99:84:51 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.31.26.52&#x2F;24 brd 172.31.26.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>主节点会生成虚拟ip172.31.26.200 而备用节点不会生成172.31.26.200</p><h2 id="域名映射"><a href="#域名映射" class="headerlink" title="域名映射"></a>域名映射</h2><p>将nacoscluster.com映射到172.31.26.200上</p><p>将nacoscluster.com的请求都转发到下面的3台服务器上，</p><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><h2 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h2><p>访问页面 <a href="http://www.nacoscluster.com/nacos" target="_blank" rel="noopener">www.nacoscluster.com/nacos</a> 可以正常打开页面说明高可用集群配置完成</p><p>接下来开始验证这个集群是否真的高可用</p><h2 id="程序循环读取nacos中的配置文件"><a href="#程序循环读取nacos中的配置文件" class="headerlink" title="程序循环读取nacos中的配置文件"></a>程序循环读取nacos中的配置文件</h2><p>读取操作由我和lilu.org.cn的博主及xiongyj.cn的博主合作一起将这个实验做完，在此感谢他们。</p><h2 id="关闭主机nginx"><a href="#关闭主机nginx" class="headerlink" title="关闭主机nginx"></a>关闭主机nginx</h2><p>注意，为了方便测试keepalived的实时权重增减，在这里先修改脚本<br>check_nginx.sh，注释这一行，否则nginx重启看不到VIP漂移的效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;sbin&#x2F;nginx                #重启nginx</span><br></pre></td></tr></table></figure><p>主机执行关闭nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost keepalived]# nginx -s stop</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/keepalived_nginx_down.jpg"  alt="keepalived_nginx_down.jpg"><br>主机 </p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/keepalived_nginx_up.jpg"  alt="keepalived_nginx_uo.jpg"><br>备用机</p><p>由图可以看出，主机nginx挂掉后，权重由100-2=98 低于备用机的99 VIP切换。</p><p>程序循环读取数据成功</p><h2 id="关闭主机keepalived"><a href="#关闭主机keepalived" class="headerlink" title="关闭主机keepalived"></a>关闭主机keepalived</h2><p>主机执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost keepalived]# systemctl stop keepalived</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/keepalived_down.jpg"  alt="keepalived_down.jpg"><br>主机 </p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/keepalived_up.jpg"  alt="keepalived_up.jpg"><br>备用机</p><p>由图可以看出，主机keepailived关闭服务后，VIP直接切换到备用机</p><p>程序循环读取数据成功</p><h2 id="关闭nacos"><a href="#关闭nacos" class="headerlink" title="关闭nacos"></a>关闭nacos</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# sh shutdown.sh</span><br><span class="line">The nacosServer(36354) is running...</span><br><span class="line">Send shutdown request to nacosServer(36354) OK</span><br></pre></td></tr></table></figure><p>访问<a href="http://www.nacoscluster.com/nacos仍然可以打开，说明nginx反向代理没问题" target="_blank" rel="noopener">www.nacoscluster.com/nacos仍然可以打开，说明nginx反向代理没问题</a></p><p>程序循环读取数据成功</p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>至此，keepalived+nginx+nacos+mysql高可用集群搭建完成，实战中还是查询了许多文档，不懂就问度娘，踩过好多坑，还有意外的收获（详情见总结）。</p><p>补充几点此集群搭建的不足之处，如果觉得建议好可以按照我的思路做下去：</p><ul><li>mysql若是放在生产环境建议主备集群搭建，本篇图简单没有这么做</li><li>nignx的轮询算法本篇用的加权轮询，实际上根据nacos的服务器性能差异可以采用其他的负载均衡调度算法，本篇nacos服务器配置均等，所以加权无所谓。</li></ul><h1 id="报错总结"><a href="#报错总结" class="headerlink" title="报错总结"></a>报错总结</h1><h2 id="keepalived主从切换失败"><a href="#keepalived主从切换失败" class="headerlink" title="keepalived主从切换失败"></a>keepalived主从切换失败</h2><p>如果两节点的上联交换机禁用了组播，则只能采用vrrp单播通告的方式。需要在vrrp_instance VI_1 {}中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">主节点</span><br><span class="line">unicast_src_ip  172.31.26.51   #本机ip</span><br><span class="line">unicast_peer &#123;</span><br><span class="line">    172.31.26.52      #对端ip</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">备用节点</span><br><span class="line">unicast_src_ip  172.31.26.52   #本机ip</span><br><span class="line">unicast_peer &#123;</span><br><span class="line">    172.31.26.51      #对端ip</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="keepalived从主节点切换成备用节点后，vip已经生成到备用节点上，但是却不能访问"><a href="#keepalived从主节点切换成备用节点后，vip已经生成到备用节点上，但是却不能访问" class="headerlink" title="keepalived从主节点切换成备用节点后，vip已经生成到备用节点上，但是却不能访问"></a>keepalived从主节点切换成备用节点后，vip已经生成到备用节点上，但是却不能访问</h2><p>跟踪iptables规则发现，默认的iptables规则仅允许22端口和icmp报文通过，需要删除规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost keepalived ~]# iptables -F #删除所有iptables规则</span><br><span class="line">[root@localhost keepalived ~]# iptables -X #删除除默认链之外的所有iptables链</span><br></pre></td></tr></table></figure><h2 id="关闭Linux防火墙Selinux和firewalld"><a href="#关闭Linux防火墙Selinux和firewalld" class="headerlink" title="关闭Linux防火墙Selinux和firewalld"></a>关闭Linux防火墙Selinux和firewalld</h2><p>systemctl stop firewalld<br>systemctl disable firewalld<br>setenforce 0<br>sed -i “s/SELINUX=enforcing/SELINUX=disabled/g” /etc/selinux/config </p><h2 id="nacos"><a href="#nacos" class="headerlink" title="nacos"></a>nacos</h2><p>1.中途出现nacos用域名连接失败的情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: lilu</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      config:</span><br><span class="line">        server-addr: nacoscluster.com</span><br></pre></td></tr></table></figure><p>查询资料才知道地址必须为nacoscluster.com+端口<br>也就是 nacoscluster.com:80</p><p>2.我将后台nacos全部断掉连接后，他们的程序调用nacos仍然有返回值，经Debug后发现请求超时，但是还是能传回来值，而且这个值一直不更新。我们几个百思不得其解，关了ide、关了服务器都不行，一个连接不上nacos的程序居然能有返回，经xiongyj.cn的博主查看源代码发现，nacos有备份策略。</p><p>由于我不是学java的，具体源码就不展开说了，大概意思就是nacos每读取一次配置后就保留到本地，当程序还是通过相同的nacos地址去读取配置的时候，即使连接不上，但是不会报连接失败的错误，而是会从本地去读最后一次连接时的配置文件。</p><p>这样一来，如果你只把nacos当配置中心，即使nacos集群都挂掉了，也不会影响服务，当然，如果你把nacos当注册中心的话那还是会有影响。</p><p>壮哉我大阿里，nacos这个中间件设计的真心高可用，考虑太周全了。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html" target="_blank" rel="noopener">nacos官网</a></p><p><a href="https://blog.51cto.com/13599730/2161622" target="_blank" rel="noopener">keepalived主备节点都配置vip，vip切换异常案例分析</a></p><p><a href="https://www.cnblogs.com/netonline/p/7642595.html" target="_blank" rel="noopener">Keepalived两节点出现双VIP的情况</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> SLB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nacos </tag>
            
            <tag> SLB </tag>
            
            <tag> 负载均衡 </tag>
            
            <tag> Keepalived </tag>
            
            <tag> HA </tag>
            
            <tag> Cluster </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb3.4离线升级到4.2</title>
      <link href="/2020/05/12/mongodb/mongodb-update/"/>
      <url>/2020/05/12/mongodb/mongodb-update/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>生产环境使用的mongodb用的是4.2，线下开发测试环境一直用的是3.4，有需求要用到mongodb的新特性，准备开始升级。</p><h1 id="调查"><a href="#调查" class="headerlink" title="调查"></a>调查</h1><p>由于是线下环境的升级，所以暂时关闭mongodb没有影响，如果是生产环境在线升级建议找下其他文档。</p><h2 id="直接升级"><a href="#直接升级" class="headerlink" title="直接升级"></a>直接升级</h2><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Mongodb/mongodb-update.jpg"  alt="mongodb-update.jpg"></p><p>官方说明服务升级需要上一个特定版本</p><p>如果按照官方来做，我需要先升级3.4到3.6 再从3.6升级到4.0 最后从4.0升级到4.2 </p><p>emmmmmm，人傻了</p><h2 id="删除重装"><a href="#删除重装" class="headerlink" title="删除重装"></a>删除重装</h2><p>调研了网上的文档，没找到用这种方式去升级的例子，但是感觉问题不大。</p><h1 id="备份重装"><a href="#备份重装" class="headerlink" title="备份重装"></a>备份重装</h1><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>注意 mongodump并且不能作为正在进行分片事务的4.2+分片群集的备份策略的一部分，因为使用创建的备份 不能保持分片事务的原子性保证。</p><p>由于应用中不涉及mongodb事务，所以使用mongodump/mongorestore直接全库导入导出即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">导出</span><br><span class="line">mongodump -h IP --port 端口 -u 用户名 -p 密码 -d 数据库 -o 文件存在路径 </span><br><span class="line">导入</span><br><span class="line">mongorestore -h IP --port 端口 -u 用户名 -p 密码 -d 数据库 --drop 文件存在路径</span><br></pre></td></tr></table></figure><p>如果想导出所有数据库，可以去掉-d</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@dev-data-01 mongodb]# pwd</span><br><span class="line">&#x2F;root&#x2F;mongodb</span><br><span class="line">[root@dev-data-01 mongodb]# mongodump -h 127.0.0.1 --port 27017 -uroot -p123456 -o &#x2F;root&#x2F;mongodb&#x2F;</span><br><span class="line">[root@dev-data-01 mongodb]# ll</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x. 2 root root 4096 May 12 15:13 admin</span><br><span class="line">drwxr-xr-x. 2 root root   98 May 12 15:13 mercury</span><br><span class="line">drwxr-xr-x. 2 root root 4096 May 12 15:13 xc_cms</span><br></pre></td></tr></table></figure><p>这样就导出来了</p><h2 id="重装"><a href="#重装" class="headerlink" title="重装"></a>重装</h2><p>重装我踩过很多坑，但是都在一个博客中找到了所有的报错解决方案，写的比较全面，详情请看参考资料</p><p>我用的是yum安装，如果是用二进制包安装的思路也一样</p><p>1.停止mongodb服务</p><p>2.卸载mongodb及日志、数据等</p><p>3.重装新的mongodb</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mongod</span><br><span class="line">yum erase $(rpm -qa | grep mongodb-org)  #卸载</span><br><span class="line">rm -rf &#x2F;var&#x2F;log&#x2F;mongodb   #删除日志</span><br><span class="line">rm -rf &#x2F;var&#x2F;lib&#x2F;mongo     #删除数据</span><br><span class="line">rm -rf &#x2F;etc&#x2F;yum.repos.d&#x2F;mongodb-org-3.4.repo #删除原mongodb的yum源</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">添加yum源</span><br><span class="line">vim &#x2F;etc&#x2F;yum.repos.d&#x2F;mongodb-org-4.2.repo</span><br><span class="line"></span><br><span class="line">[mongodb-org-4.2]</span><br><span class="line">name&#x3D;MongoDB Repository</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;repo.mongodb.org&#x2F;yum&#x2F;redhat&#x2F;$releasever&#x2F;mongodb-org&#x2F;4.2&#x2F;x86_64&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;www.mongodb.org&#x2F;static&#x2F;pgp&#x2F;server-4.2.asc</span><br><span class="line"></span><br><span class="line">安装</span><br><span class="line">yum install mongodb-org -y</span><br><span class="line"></span><br><span class="line">配置</span><br><span class="line">vim &#x2F;etc&#x2F;mongod.conf</span><br><span class="line">将bindIp: 127.0.0.1改成bindIp: 0.0.0.0 </span><br><span class="line"></span><br><span class="line">启动</span><br><span class="line">systemctl start mongod</span><br><span class="line"></span><br><span class="line">查看状态</span><br><span class="line">systemctl status mongod</span><br></pre></td></tr></table></figure><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>注意！ 在导入数据前不要开启安全认证，否则可能出现权限不足等问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@dev-data-01 mongodb]# mongorestore &#x2F;root&#x2F;mongodb&#x2F;</span><br><span class="line"></span><br><span class="line">修改配置文件，开启密码验证</span><br><span class="line">vim &#x2F;etc&#x2F;mongod.conf</span><br><span class="line"></span><br><span class="line">security:</span><br><span class="line">       authorization: enabled</span><br><span class="line">       </span><br><span class="line">重启mongodb</span><br><span class="line">systemctl restart mongod</span><br></pre></td></tr></table></figure><p>至此，mongodb升级完成<del>~</del></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.jb51.net/article/109091.htm" target="_blank" rel="noopener">Mongodb常见错误与解决方法小结(Mongodb中经常出现的错误)</a></p><p><a href="https://docs.mongodb.com/manual/core/backups/" target="_blank" rel="noopener">Mongodb官方备份命令</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> Mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mongodb </tag>
            
            <tag> 数据备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈高可用的负载均衡集群实现原理及方案</title>
      <link href="/2020/05/11/slb/slb-ha/"/>
      <url>/2020/05/11/slb/slb-ha/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><p>现在很多企业的应用都上云了，利用各种云平台的负载均衡组件，可以通过流量分发扩展应用系统对外的服务能力，通过消除单点故障提升应用系统的可用性。下面就来聊聊最常用的互联网高可用的负载均衡集群实现方案。</p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>在介绍架构之前，为了避免部分读者对架构设计中的一些概念不了解，下面对几个最基础的概念进行介绍。</p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>负载均衡建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。</p><p>当请求发送到系统时，通过某些方式把请求均匀分发到多个节点上，使系统中每个节点能够均匀的处理请求负载，则可认为系统是负载均衡的。</p><h2 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h2><p>系统中部分节点失效时，其他节点能够接替它继续提供服务，则可认为系统具有高可用性。</p><h2 id="集群和分布式"><a href="#集群和分布式" class="headerlink" title="集群和分布式"></a>集群和分布式</h2><p>两者很类似，但是却有区别。</p><ul><li><p>集群：将几台服务器集中在一起，实在同一个业务。</p></li><li><p>分布式：指将不同的业务分布到不同的地方。</p></li></ul><p>分布式的每一个节点，都可以用来做集群。而集群不一定就是分布式了。</p><p>例如：zk 1主2从 整体是集群 业务是注册中心 但是主节点和2个从节点是分布式系统 处理不同的问题</p><h1 id="实现负载均衡的组件及原理"><a href="#实现负载均衡的组件及原理" class="headerlink" title="实现负载均衡的组件及原理"></a>实现负载均衡的组件及原理</h1><p>现在网络中常见的的负载均衡主要分为两种：</p><ul><li><p>硬件：常见的硬件有比较昂贵的NetScaler、F5、Radware和Array等商用的负载均衡器，不过商用负载均衡由于可以建立在四~七层协议之上，因此适用面更广所以有其不可替代性，</p><pre><code>他的优点就是有专业的维护团队来对这些服务进行维护、缺点就是花销太大，所以对于规模较小的网络服务来说暂时还没有需要使用。</code></pre></li><li><p>软件：比较常见的有LVS、Nginx、HAproxy等，</p><pre><code>其中LVS是建立在四层协议上面的，而另外Nginx和HAproxy是建立在七层协议之上的</code></pre></li></ul><p>本文主要讲解如何通过软件实现负载均衡。</p><h2 id="组件特点"><a href="#组件特点" class="headerlink" title="组件特点"></a>组件特点</h2><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><ul><li>工作在网络的7层之上，可以针对http应用做一些分流的策略，比如针对域名、目录结构</li><li>Nginx对网络的依赖比较小</li><li>Nginx安装和配置比较简单，测试起来比较方便</li><li>也可以承担高的负载压力且稳定，一般能支撑超过1万次的并发</li><li>Nginx可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持url来检测；</li><li>Nginx对请求的异步处理可以帮助节点服务器减轻负载；</li><li>Nginx能支持http和Email，这样就在适用范围上面小很多；</li><li>不支持Session的保持、对Big request，header的支持不是很好，另外默认的只有Round-robin和IP-hash两种负载均衡算法。</li></ul><h3 id="lvs"><a href="#lvs" class="headerlink" title="lvs"></a>lvs</h3><ul><li>抗负载能力强、是工作在网络4层之上仅作分发之用，没有流量的产生；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，所以并不需要太多接触，大大减少了人为出错的几率；</li><li>工作稳定，自身有完整的双机热备方案；</li><li>无流量，保证了均衡器IO的性能不会收到大流量的影响；</li><li>应用范围比较广，可以对所有应用做负载均衡；</li><li>LVS需要向IDC多申请一个IP来做Visual IP，因此需要一定的网络知识，所以对操作人的要求比较高。</li></ul><h3 id="HAProxy"><a href="#HAProxy" class="headerlink" title="HAProxy"></a>HAProxy</h3><ul><li>HAProxy是工作在网络7层之上。</li><li>能够补充Nginx的一些缺点比如Session的保持，Cookie的引导等工作</li><li>支持url检测后端的服务器出问题的检测会有很好的帮助。</li><li>更多的负载均衡策略比如：动态加权轮循(Dynamic Round Robin)，加权源地址哈希(Weighted Source Hash)，加权URL哈希和加权参数哈希(Weighted Parameter Hash)已经实现</li><li>单纯从效率上来讲HAProxy更会比Nginx有更出色的负载均衡速度。</li><li>HAProxy可以对Mysql进行负载均衡，对后端的DB节点进行检测和负载均衡。</li></ul><h3 id="traefik"><a href="#traefik" class="headerlink" title="traefik"></a>traefik</h3><ul><li>Golang编写，单文件部署，与系统无关，同时也提供小尺寸Docker镜像。</li><li>支持Docker/Etcd后端，天然连接我们的微服务集群。</li><li>内置Web UI，管理相对方便。</li><li>自动配置ACME(Let’s Encrypt)证书功能。</li><li>性能尚可，我们也没有到压榨LB性能的阶段，易用性更重要。</li><li>Restful API支持。</li><li>支持后端健康状态检查，根据状态自动配置。</li><li>支持WebSocket和HTTP/2。</li><li>traefik近几年火起来最重要的原因之一就是能够与常见的微服务系统直接整合，可以实现自动化动态配置。</li></ul><p>下面用一图说明traefik的特点<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/traefik.jpg"  alt="traefik.jpg"></p><h2 id="主流算法"><a href="#主流算法" class="headerlink" title="主流算法"></a>主流算法</h2><ul><li>轮询调度(Round Robin 简称’RR’) 就是按依次循环的方式将请求调度到不同的服务器上，该算法最大的特点就是实现简单。轮询算法假设所有的服务器处理请求的能力都一样的，调度器会将所有的请求平均分配给每个真实服务器。</li><li>加权轮询(Weight Round Robin 简称’WRR’) 主要是对轮询算法的一种优化与补充，传入的请求按顺序被分配到集群中服务器，但是会考虑提前为每台服务器分配的权重。例如，能力最强的服务器A给的权重是100，同时能力最低的服务器给的权重是50。这意味着在服务器B接收到第一个 请求之前前，服务器A会连续的接受到2个请求，以此类推。</li><li>随机（Random）<br>通过系统的随机算法，根据后端服务器的列表大小值来随机选取其中的一台服务器进行访问。基于概率统计的理论，吞吐量越大，随机算法的效果越接近于轮询算法的效果。</li><li>加权随机（Weight Random）<br>与加权轮询法一样，加权随机法也根据后端机器的配置，系统的负载分配不同的权重。不同的是，它是按照权重随机请求后端服务器，而非顺序。</li><li>最少连接数(Least Connection)<br>以上两种方法都没有考虑的是系统不能识别在给定的时间里保持了多少连接。最小连接数算法比较灵活和智能，由于后端服务器的配置不尽相同，对于请求的处理有快有慢，它是根据后端服务器当前的连接情况，动态地选取其中当前积压连接数最少的一台服务器来处理当前的请求，尽可能地提高后端服务的利用效率，将负责合理地分流到每一台服务器。</li><li>源IP哈希(Source IP Hash) 源地址哈希的思想是根据获取客户端的IP地址，通过哈希函数计算得到的一个数值，用该数值对服务器列表的大小进行取模运算，得到的结果便是客户端要访问服务器的序号。</li></ul><h1 id="增强负载均衡器可用性（HA）"><a href="#增强负载均衡器可用性（HA）" class="headerlink" title="增强负载均衡器可用性（HA）"></a>增强负载均衡器可用性（HA）</h1><h2 id="什么是keepalived"><a href="#什么是keepalived" class="headerlink" title="什么是keepalived"></a>什么是keepalived</h2><p>Keepalived是用C语言编写的路由软件。该项目的主要目标是为Linux系统和基于Linux的基础结构提供负载均衡和高可用性的简单而强大的功能。Keepalived实现了一组检查器，以根据其运行状况动态，自适应地维护和管理负载平衡的服务器池。另一方面，VRRP实现了高可用性协议。VRRP是路由器故障转移的基础砖。此外，Keepalived还实现了一组VRRP有限状态机的挂钩，从而提供了低级和高速协议交互。</p><h2 id="VRRP协议"><a href="#VRRP协议" class="headerlink" title="VRRP协议"></a>VRRP协议</h2><p>虚拟路由器冗余协议（Virtual Router Redundancy Protocol ）</p><p>VRRP是一种选择协议，它可以把一个虚拟路由器的责任动态分配到局域网上的 VRRP 路由器中的一台。控制虚拟路由器 IP 地址的 VRRP 路由器称为主路由器，它负责转发数据包到这些虚拟 IP 地址。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>keepalived也是模块化设计，不同模块复杂不同的功能，下面是keepalived的组件</p><p>core check vrrp libipfwc libipvs-2.4 libipvs-2.6</p><ul><li>core：是keepalived的核心，复杂主进程的启动和维护，全局配置文件的加载解析等</li><li>check：负责healthchecker(健康检查)，包括了各种健康检查方式，以及对应的配置的解析包括LVS的配置解析</li><li>vrrp：VRRPD子进程，VRRPD子进程就是来实现VRRP协议的</li><li>libipfwc：iptables(ipchains)库，配置LVS会用到</li><li>libipvs*：配置LVS会用到</li></ul><p>keepalived启动后会有三个进程<br>父进程：内存管理，子进程管理等等<br>子进程：VRRP子进程<br>子进程：healthcheckers子进程</p><h1 id="设计nginx-keepalived-nacos-mysql实现配置及注册中心高可用框架"><a href="#设计nginx-keepalived-nacos-mysql实现配置及注册中心高可用框架" class="headerlink" title="设计nginx+keepalived+nacos+mysql实现配置及注册中心高可用框架"></a>设计nginx+keepalived+nacos+mysql实现配置及注册中心高可用框架</h1><p>本文设计的框架是基于nacos官方文档针对生产环境的nacos搭建的补充。</p><p>naocs框架为<br><a href="http://nacos.com:port/openAPI">http://nacos.com:port/openAPI</a> 域名 + VIP模式，可读性好，而且换ip方便</p><p>nginx作为负载均衡器，keepalived保证nginx的高可用</p><p>具体实现如图<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SLB/nacos_ha.jpg"  alt="nacos_ha.jpg"></p><p>本期不做部署说明，下期具体说明如何在实战中部署此架构。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://thesecretlivesofdata.com/raft/" target="_blank" rel="noopener">分布式共识算法图解</a></p><p><a href="https://blog.csdn.net/cc1949/article/details/79063439" target="_blank" rel="noopener">网络7层协议图解</a></p><p><a href="https://blog.csdn.net/liuxl57805678/article/details/103033268" target="_blank" rel="noopener">淘宝双11，亿级流量高并发是怎么抗住的？看完这篇你就明白了!</a></p><p><a href="https://blog.csdn.net/selina361/article/details/79949689?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase" target="_blank" rel="noopener">几种常见负载均衡比较</a></p><p><a href="https://www.keepalived.org/" target="_blank" rel="noopener">keepalived官网</a></p><p><a href="https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html" target="_blank" rel="noopener">nacos官网</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> SLB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nacos </tag>
            
            <tag> SLB </tag>
            
            <tag> 负载均衡 </tag>
            
            <tag> Keepalived </tag>
            
            <tag> HA </tag>
            
            <tag> Cluster </tag>
            
            <tag> 调度算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>顶级理解之游戏人生（DNF篇）</title>
      <link href="/2020/05/09/king/king-dnf/"/>
      <url>/2020/05/09/king/king-dnf/</url>
      
        <content type="html"><![CDATA[<p>声明: 顶级理解系列全部是本人的主观看法，望不喜勿喷，求同存异。</p><hr><p>本文分享了宇神之息在DNF里的经历，映射一个人的成长经历。</p><p>开局先声明我的DNF游戏年龄，10年，2009-2019。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/King/dnf.png"  alt="dnf.png"></p><p>没从头入坑，也没能等到关服就离开。</p><h1 id="游戏阶段"><a href="#游戏阶段" class="headerlink" title="游戏阶段"></a>游戏阶段</h1><p>我玩dnf可以分为3个阶段</p><ul><li>开心阶段</li><li>奋斗阶段</li><li>疲累阶段</li></ul><p>如果你对dnf不感兴趣，可以直接跳过这几个阶段，直奔结论。。。</p><h2 id="开心阶段"><a href="#开心阶段" class="headerlink" title="开心阶段"></a>开心阶段</h2><p>开始阶段我认为最极致的游戏，最纯粹的享受玩游戏的过程。</p><p>这个阶段应该都是老玩家才有的体验，对于2018年后入坑的玩家们可能感受不到。</p><p>60-85版本的乐趣在于，打怪升级、爆装备、师徒关系、成就感等等。</p><ul><li>那个时代满级比较难，不和现在一样，随便创新号到满级一天就可以完成。</li><li>装备的爆率低，ss更是难得有一件，因为深渊都打不赢，能出紫套装、粉装都可以高兴很久很久，纯粹的快乐</li><li>拜师带人刷图，50多级的带30多级的刷图打不过也很正常，怪物血量高，伤害高，不像现在秒秒秒。</li><li>那时候的DNF完成这些事最大的乐趣就是获得成就感，是其他街机游戏所不能比拟的</li></ul><h2 id="奋斗阶段"><a href="#奋斗阶段" class="headerlink" title="奋斗阶段"></a>奋斗阶段</h2><p>奋斗阶段得从我大学室友罗某拉我回坑说起了，当时刚刚安图恩副本已经开了一年多了，但是由于ss没有普及，即使过了一年，能打团本的人仍然很少。我从这个时候开始打造自己已经脱坑4年的号，从异界打起，我的瞎子开始做暗影九，打舰炮；做假猪6，守震颤；那一年春节，买一套年套，有了年宠，开始打擎天；到后面刷深渊终于集齐魔战套，开始打火山。等到卢克副本开了后，我就成为第一批开荒人员，打了一年副本毕业。</p><hr><p>开始<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/King/kaihuang.png"  alt="kaihuang.png"><br>结束<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/King/luke.png"  alt="luke.png"></p><hr><p>就和我说说里一样，一年的时间卢克全勤，一次不漏，因为我热爱这个游戏，所以我能坚持下来。</p><h2 id="疲累阶段"><a href="#疲累阶段" class="headerlink" title="疲累阶段"></a>疲累阶段</h2><p>从95级开始，超时空漩涡、伊西斯副本，策划似乎已经觉得dnf模式就是如此了，打团本，升级装备，再出新团本，再升级新装备。一直如此的模式导致dnf玩家流逝的越来越多，因为副本不再像以前那么难，甚至到了一出大副本当天就有金团（花钱，带人的团）出现。</p><p>而且以前投入少，收获多，现在投入多，收获少。说个很简单的道理，马服特色：用薪创造游戏，没钱玩个毛。<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/King/chongqian.jpg"  alt="chongqian.jpg"></p><ul><li><p>以前投入基本上只有时间，充钱只是次要的，你就可以愉快的游戏，刷图，pk，充分体验游戏乐趣</p></li><li><p>现在你不仅要肝，更要氪，不然团本没人要你，pk你装备垃圾，技术再好也很容易一个失误就直接被人一个技能秒了（旭旭宝宝大蹦秒人），再拿出乌龟卢克时期很流行的一幅图。</p></li></ul><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/King/jiaban.jpg"  alt="jiaban.jpg"></p><h1 id="一叶知秋"><a href="#一叶知秋" class="headerlink" title="一叶知秋"></a>一叶知秋</h1><p>阿拉德大陆也可以是现实某一部分的映射。</p><h2 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h2><p>在dnf里的团本时期分为4个阶段：开荒团、稳定团、流水团、金团。</p><p>这个和现实中某一行业的发展时期很像，多的也不扯，就拿互联网行业来说。</p><h3 id="开荒阶段："><a href="#开荒阶段：" class="headerlink" title="开荒阶段："></a>开荒阶段：</h3><ul><li>dnf：所有成员打造最顶尖装备，练习不同职业的手法到极致，学习副本的机制</li><li>互联网：最好的大学的学生，学习互联网知识，把国外最顶尖的技术引回国内</li></ul><p>当开荒成功后，这一领域的人们集合起来创立了不同的团队、公司，有大有小，良莠不齐。</p><h3 id="稳定阶段："><a href="#稳定阶段：" class="headerlink" title="稳定阶段："></a>稳定阶段：</h3><ul><li>dnf：为了将团队扩展大，团本开始大面积招人，让自己的小号也能划水。</li><li>互联网：最早的一批创业者创业稳定后，开始大面积招揽人才为自己打工，这也是目前互联网的现状。</li></ul><h3 id="流水阶段："><a href="#流水阶段：" class="headerlink" title="流水阶段："></a>流水阶段：</h3><ul><li>dnf：团队扩大到一定地步后，由于人太多了，需要选几个团长，每个团长都开团若干个小时，甚至同时开多个团本，由于团队很大，打团不怕没人来，骗奶骗c，自己划水的现象比比皆是。</li><li>互联网：企业越扩越大，开始成立分公司，让开荒的人都当老板，典型的BAT，而且名声大，不怕没人来。</li></ul><h3 id="金团："><a href="#金团：" class="headerlink" title="金团："></a>金团：</h3><ul><li>dnf：金团就是互联网的培训机构，比如某马程序员，为了能达到进入这些领域的门槛，你需要花钱来过图/学习。</li></ul><h2 id="门槛"><a href="#门槛" class="headerlink" title="门槛"></a>门槛</h2><p>阶段说清楚了后，再说门槛问题。我的理解：门槛就是你进入某一行业的最低标准。</p><p>dnf的团本发展都以流水团、金团的大规模出现而展现出游戏最辉煌的时候。因为流水团打的越快，奖励越多。流水团每次申请的人那么多，作为团长怎么选择？肯定是装备越好，团本通关次数越多的人越优先放进团阿，这就是门槛。但是你如果没有装备，又想体验打团的乐趣，怎么办？你只能坐金团或者py（开玩笑），提升装备，然后达到进入流水团的门槛。</p><p>互联网时代已经过了开荒阶段了，现在大部分技术都已经成熟了，虽然整个社会没有像dnf策划在控制团本的更新换代，但是生产力的提高注定了整个时代会往前进步。现在互联网公司越来越多，想入这一行的人也越来越多，公司老板招人看什么？学历，技术就是门槛。那你又没学历，又没技术，还想吃这行的饭，怎么办呢？没学历就考研，没技术就坐金团（培训），让别人带你入门，或者你自学技术。然后先进入一家互联网的企业。</p><h1 id="打工-创业-变成了以前我最讨厌的样子"><a href="#打工-创业-变成了以前我最讨厌的样子" class="headerlink" title="打工-创业-变成了以前我最讨厌的样子"></a>打工-创业-变成了以前我最讨厌的样子</h1><p>当年我加入了一个安图恩的大团队后，开始从舰炮养老c成长到火山c，成为火山c之后我并没有得到团长的尊重，反而成为了团长专职带划水的角色，美其名曰，有能力就要带酱油阿，不然白培养你干嘛，直到有一天我为了要一个划水位而和团长发生了冲突。我拉了一批都忍受不了团长的网友，退出了那个团队，自己开团，建公会建群，喊喇叭招人，慢慢把群壮大起来。然后我发现我也成了和团长一样的人，自己只有2个火山c，却可以划8个小号，每次开团都先上奶c，等人快满了立即换小号划水，然后骗大奶大c（俗称野人），让野人免费给你打工带小号，然后你轻轻松松就能获得通关奖励。以前开团还是遵循互带原则，你带我划水我带你划水，到了后来，我变本加厉，大号开金团赚钱，小号纯划水，不贡献自己的力量，反而把自己最核心的力量拿去吃独食。这个时候很多看到这估计会骂我，怎么这么没良心，其实我也想骂我，但是为什么我会变的这样呢，变得和以前那个团长一样，变成了我最讨厌的样子。我至今也想不明白，这难道就是一个人创业的必经之路吗，能力越强的人都是喜欢压榨别人的人？如果你也有答案，可以给我留言。</p><h1 id="游戏人生"><a href="#游戏人生" class="headerlink" title="游戏人生"></a>游戏人生</h1><p>写这篇文章的目的其实是反思。</p><p>当前达到dnf游戏人生的最高境界就是努力打造成全服装备最好的，技术也要最牛逼，打桩打出最高的伤害才牛逼，成为这个行业的领头羊。（类似旭旭宝宝这样，虽然装备天下第一，但是老被吐槽手法，但是已经足够耀眼，我粉宝哥，陷于才华，忠于人品。）</p><p>那么人一生的最高境界是什么呢，抱歉，我现在也不知道，但是通过dnf，我也体验了一把从一个小白成长起来的过程。</p><hr><blockquote><p>现世报–不是做的越多，能力越强就越牛逼</p></blockquote><p>在现实中我也是一个刚刚从大学毕业进入互联网这一行的小白，目前我也成为一个被压榨的打工仔，我的公司培养我学习成长，直到能够独立承接公司的所有业务，但是我明明有资格划小号了，但是公司还是让我使劲地带酱油（压榨），而且又不让我划水（涨钱），美其名曰我培养了你，你就该为我打工报恩。和dnf一样，如果某天，某件事成了我压垮我的最后一根稻草，我也会辞职，但是现实不和dnf一样，一个更新换代的副本需要由上一届副本的顶级人物开荒，我得先成为某一领域的专家才能考虑拉人创业，不然只能换流水团，说不定某个团长赏识我的才华，让我打一个c就能随意划水（涨钱）。如果你也有答案，可以给我留言。</p><h1 id="返本归元"><a href="#返本归元" class="headerlink" title="返本归元"></a>返本归元</h1><p>我花了5298个小时在阿拉德大陆畅玩，得到的最终不过是一些数据罢了，人走茶凉，我最好的朋友们都离开了，我还何苦一个人留下？</p><p>最后提醒下能研读我这篇文章的人，适度游戏益脑，沉迷游戏伤身。</p><p>不要把游戏看成现实的写照，回归现实吧。努力学习，早日成为那个人上人。</p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> 顶级理解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 顶级理解 </tag>
            
            <tag> DNF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>顶级理解之成长（2018.9-2020.5）</title>
      <link href="/2020/05/05/king/king-growup/"/>
      <url>/2020/05/05/king/king-growup/</url>
      
        <content type="html"><![CDATA[<p>声明: 顶级理解系列全部是本人的主观看法，望不喜勿喷，求同存异。</p><hr><p>本文记录了宇神之息的成长以及我对成长的理解。</p><h1 id="实习时期前（2018）"><a href="#实习时期前（2018）" class="headerlink" title="实习时期前（2018）"></a>实习时期前（2018）</h1><p>实习前连以下技术是什么都不知道。</p><p>Linux、mac、git、gitlab、python、nginx、docker、openstack。</p><h1 id="实习时期后（2019）"><a href="#实习时期后（2019）" class="headerlink" title="实习时期后（2019）"></a>实习时期后（2019）</h1><p>我已经会一些Linux、git、docker的基本命令，能够用python轻松写一些脚本，会简单地配置nginx的转发，使用openstack创建虚拟机（仅此而已），修过同事的mac电脑。</p><h1 id="毕业后2个月（2019）"><a href="#毕业后2个月（2019）" class="headerlink" title="毕业后2个月（2019）"></a>毕业后2个月（2019）</h1><p>大学毕业后3个月内，我补充了我的网络、计算机知识、做网线、帮同事安装打印机、配置公司AD域及邮箱、平常排查下同事的电脑问题。这时我俨然成为了一名桌面运维工程师，但是我觉得一直做这些重复的事很没意思，我准备要利用我在实习期间学习的东西了。</p><h1 id="自学运维技术（2019）"><a href="#自学运维技术（2019）" class="headerlink" title="自学运维技术（2019）"></a>自学运维技术（2019）</h1><p>公司给我配置了6台虚拟机，1个月的时间内，我把公司实战用到的各种技术都过了一遍（安装、了解），并记录成文档。</p><p>docker、Harbor、jenkins、jira、confluence、gitlab、lvs、keepalived、Nginx、ELK、maven、Rocketmq、Zookpeer、Nacos、Redis、memcached、Mysql、Skywalking、zabbix、nagios、yapi</p><h1 id="第一次上线部署（2019）"><a href="#第一次上线部署（2019）" class="headerlink" title="第一次上线部署（2019）"></a>第一次上线部署（2019）</h1><p>俗话说的好，最好的经验都是实战中练起来的。9月，公司架构调整，需要从总部迁移4个项目到分部来，为了能让我接手运维相关工作，总部派了一位资深运维工程师华哥来分部带我上项目，通过前期1个月的自学，我带着问题请教他，他对我的问题讲解的很深，每种技术他都能讲到原理层，我很佩服他。</p><p>不到7天的时间，华哥把上面大部分技术都给我讲了一遍，以及怎么去实战应用，我如获至宝并将这些技术详细记录到文档，这些文档到现在已经成为我工作中不可或缺的学习资料。</p><p>9月4日，这一天我可能很难忘记，公司的一个大业务需要在这天进行上线部署。我特别紧张，敲命令都检查得很仔细。项目发布用的是jenkins，当我改好项目配置文件后，开始构建，结果报错了，生产环境的项目启动失败，我不知所措，只能让华哥处理。这个错误我也可能很难忘记，因为数据库新增了一个表，而项目连接的用户应该添加这个表，不然就没有权限访问。现在看似很简单的一个问题，只需要DBA授权这个账户即可。华哥当时立马打电话联系DBA，让他授权，然后执行了一些当时我完全看不懂的操作。最后项目发布完成，验收通过，从始至终我都是懵逼状态。</p><h1 id="先应用后学习（2019）"><a href="#先应用后学习（2019）" class="headerlink" title="先应用后学习（2019）"></a>先应用后学习（2019）</h1><p>从9月4日后，看着总部运维同事的上线文档，我一步一步将分布的业务全部接完了，Kubernetes开始进入到我的视线。由于历史原因，公司老的项目是单机部署（进入服务器，java -jar启动），新的项目用的都是Kubernetes。这么一个庞大的容器编排工具当初在我眼里不过就是发布的时候的一条命令helm upgrade就能滚动发布项目了，而里面的技术我至今也没能全部吃透。</p><h1 id="从0到1的成长（2019）"><a href="#从0到1的成长（2019）" class="headerlink" title="从0到1的成长（2019）"></a>从0到1的成长（2019）</h1><p>11月，公司分部要上线一个全新的业务，需要分部团队独立完成，不再依赖总部的技术人员。此时我虽然已经能独立承接发布需求，但是都是基于老的项目，点一点按钮，就能发布了，对于里面的机制原理还是不太熟悉。公司分部也需要一个完整的技术体系，一个资深网络工程师天哥和一个资深运维工程师峰哥就带着我一个小菜鸡开干啦。</p><ul><li>机房建设：总部向分部寄了好几台720xd，天哥规划好分公司网络拓扑结构后，开始配置交换机及防火墙、建立分部有线/无线/虚拟网络，这些做好后，他开始教我拆服务器装硬盘和内存条，以及部署esxi集群，然后峰哥带我把一个centos镜像做成虚拟机的模板。</li><li>环境建设：天哥划分了开发环境/测试环境/压测环境，峰哥带着我一起部署Kubernetes集群、Mysql、Redis集群、Zookeeper集群、Nacos集群、RocketMQ集群、Jenkins、Harbor等等到开发环境，过了一遍后，剩下的2个环境就由我自己搭建了。</li><li>生产部署：我们预估项目所需的配置，整理预算，申请资金，注册阿里云账号，购买各种资源。</li><li>Devops：峰哥带着我制作Kubernetes的容器模板、写shell脚本用Jenkins打通从开发→测试→生产的流程。</li></ul><h1 id="至今（2020）"><a href="#至今（2020）" class="headerlink" title="至今（2020）"></a>至今（2020）</h1><p>一条Devops道路打通后，剩下的事就是继续优化及完善。</p><p>安全：</p><ul><li>部署生产堡垒机，规范操作</li><li>部署数据库审计平台，规范sql</li><li>安装插件，扫描漏洞</li><li>写日常巡检脚本，监控生产环境资源状态</li></ul><p>优化：</p><ul><li>自动发布脚本优化</li><li>生产环境各个组件降配，提高资源利用率</li></ul><p>提升：</p><ul><li>深入学习各个组件原理</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我很幸运</p><p>半年前</p><ul><li>能有这么多良师益友带我快速学习成长</li><li>能负责一个分公司所有的上线部署业务</li><li>能学习并应用一个公有云平台的部分组件</li><li>见证并参与到一个公司业务从0到1建成的过程</li></ul><p>我很不幸</p><p>现在</p><ul><li>当初带我良师益友已经有几位展翅高飞不在我身边</li><li>已经过了高速成长期，学习曲线明显变慢</li><li>管理的事情变得越来越多，工作越来越繁琐</li></ul><p>何其有幸又何其不幸，这就是成长。</p><p>成长也意味一个人在能力的提升的同时也获得了更多的权力，承担了更大的责任。</p><p>做到一个公司不可代替的人物就是我目前对成长的顶级理解。不可代替性（0%-100%），你能到达一个公司不可代替性的百分之多少就能真正地成长多少！</p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> 顶级理解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 顶级理解 </tag>
            
            <tag> 互联网 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跟我学Devops之思想篇（一）</title>
      <link href="/2020/05/03/devops/devops-idea-1/"/>
      <url>/2020/05/03/devops/devops-idea-1/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="Devops简介"><a href="#Devops简介" class="headerlink" title="Devops简介"></a>Devops简介</h1><p>DevOps（Development和Operations的组合词）是一组过程、方法与系统的统称，用于促进开发（应用程序/软件工程）、技术运营和质量保障（QA）部门之间的沟通、协作与整合。</p><p>它是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。</p><p>它的出现是由于软件行业日益清晰地认识到：为了按时交付软件产品和服务，开发和运维工作必须紧密合作。</p><p>下面用一张图来表示Devops的思想<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Blog/devops.jpg"  alt="devopsjpg"></p><h2 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h2><p>敏捷开发以用户的需求进化为核心，采用迭代、循序渐进的方法进行软件开发。在敏捷开发中，软件项目在构建初期被切分成多个子项目，各个子项目的成果都经过测试，具备可视、可集成和可运行使用的特征。换言之，就是把一个大项目分为多个相互联系，但也可独立运行的小项目，并分别完成，在此过程中软件一直处于可使用状态。</p><h2 id="敏捷部署"><a href="#敏捷部署" class="headerlink" title="敏捷部署"></a>敏捷部署</h2><p>敏捷部署是通过自动化工具或脚本来达到项目自动发布的目的。强大的部署自动化手段确保部署任务的可重复性、减少部署出错的可能性。</p><h1 id="个人从工作中理解什么叫Devops"><a href="#个人从工作中理解什么叫Devops" class="headerlink" title="个人从工作中理解什么叫Devops"></a>个人从工作中理解什么叫Devops</h1><p>我们公司的项目应用大多以Java为主，用的微服务架构。那么在实际项目中应用到devops中是怎么样的呢？详情可以看下图。<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Devops/CICD.png"  alt="devopsjpg"></p><h2 id="整个流程可以细分成3个阶段"><a href="#整个流程可以细分成3个阶段" class="headerlink" title="整个流程可以细分成3个阶段"></a>整个流程可以细分成3个阶段</h2><h3 id="开发阶段"><a href="#开发阶段" class="headerlink" title="开发阶段"></a>开发阶段</h3><ul><li>开发团队提交代码到gitlab的dev分支</li><li>从gitlab拉去dev分支代码</li><li>单元测试</li><li>maven编译打成jar包</li><li>sonar质量检查</li><li>Dockerfile将jar包打成image</li><li>将image推送到Harbor仓库</li><li>开发环境服务器拉取Harbor仓库image并创建容器</li><li>验证相关功能正常</li></ul><h3 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h3><ul><li>测试环境服务器拉取Harbor仓库image并创建容器</li><li>验证相关功能正常</li><li>通知开发合并分支到master分支</li><li>从gitlab拉去master分支代码</li><li>单元测试</li><li>maven编译打成jar包</li><li>sonar质量检查</li><li>Dockerfile将jar包打成image</li><li>将image推送到Harbor仓库</li><li>测试环境服务器拉取Harbor仓库image并创建容器</li><li>验证相关功能正常</li></ul><h3 id="投产阶段"><a href="#投产阶段" class="headerlink" title="投产阶段"></a>投产阶段</h3><ul><li>将Harbor仓库image推送到生产环境Harbor</li><li>生产环境服务器拉取生产环境Harbor仓库image并滚动发布</li><li>测试、产品人员验收</li></ul><h2 id="细分阶段的好处"><a href="#细分阶段的好处" class="headerlink" title="细分阶段的好处"></a>细分阶段的好处</h2><p>这样分阶段的Devops流程好处在于允许分散开的团队控制他们自己的命运：</p><ul><li>开发人员只用关心自己的分支代码功能、代码质量，不用考虑部署、测试。</li><li>测试人员只用关心开发人员的代码功能、回归、自动化、性能测试等，不用考虑部署流程。</li><li>运维人员只用关心将镜像发布到生产环境，不用考虑，代码功能、测试。</li></ul><p>这样的流水线设计是需要一段时间的，但是设计完成后可以一劳永逸，每个团队都能专注自己的工作。也许以前你是开发，你还需要负责部署、测试；也许以前你是测试，你还需要推送镜像到生产环境；有了Devops后，你只需要在jenkins点下构建按钮，选择环境就可以实现一键发布了，专注自己领域的事有利于提高整个团队的工作效率！</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>作为一个运维人员，当我学习到了Devops思想后就深深的认同这一点：所有的人工操作都要转换成自动化。</p><p>Devops七荣七耻与大家共勉</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Devops/HonorandDisgrace.png"  alt="devops.jpg"></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> 跟我学Devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Devops </tag>
            
            <tag> 敏捷开发 </tag>
            
            <tag> 敏捷部署 </tag>
            
            <tag> CI/CD </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跟我学Devops之思想篇（二）</title>
      <link href="/2020/05/03/devops/devops-idea-2/"/>
      <url>/2020/05/03/devops/devops-idea-2/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="微服务架构简介"><a href="#微服务架构简介" class="headerlink" title="微服务架构简介"></a>微服务架构简介</h1><h2 id="百度解释"><a href="#百度解释" class="headerlink" title="百度解释"></a>百度解释</h2><p>微服务架构是一项在云中部署应用和服务的新技术。大部分围绕微服务的争论都集中在容器或其他技术是否能很好的实施微服务，而红帽说API应该是重点。</p><p>微服务可以在“自己的程序”中运行，并通过“轻量级设备与HTTP型API进行沟通”。关键在于该服务可以在自己的程序中运行。通过这一点我们就可以将服务公开与微服务架构（在现有系统中分布一个API）区分开来。在服务公开中，许多服务都可以被内部独立进程所限制。如果其中任何一个服务需要增加某种功能，那么就必须缩小进程范围。在微服务架构中，只需要在特定的某种服务中增加所需功能，而不影响整体进程的架构。</p><p>微服务的基本思想在于考虑围绕着业务领域组件来创建应用，这些应用可独立地进行开发、管理和加速。在分散的组件中使用微服务云架构和平台，使部署、管理和服务功能交付变得更加简单。</p><p>使用微服务构建现代化应用程序是很有意义的，因为它让你既利用了扩展横向扩展架构，也利用纵向扩展架构；还额外得到API的组合，且在整个业务中可重复利用。</p><h2 id="个人从工作中理解什么叫微服务架构"><a href="#个人从工作中理解什么叫微服务架构" class="headerlink" title="个人从工作中理解什么叫微服务架构"></a>个人从工作中理解什么叫微服务架构</h2><p>一个公司的核心业务购买商品系统用微服务架构和传统架构</p><ul><li>用微服务框架是这样的</li></ul><ol><li>一个登陆注册功能，一个查询商品功能，一个商品库存功能，一个购买功能，这些功能通过API互相调用，并且每个功能能做成独立的应用分别部署到容器里上，一个容器挂掉/更新不会影响整个项目的运行。</li><li>用这种框架的好处在于在这个系统第一次上线到生产环境后并且能保持核心业务正常运行的情况下，项目后期的更新只是某个功能应用的更新，不会影响整个生产环境的稳定性。</li><li>如果你只需要改一个查询商品的功能，即使这个功能后期上线的时候出现了逻辑问题，但是也不会影响核心流程（购买），并且你可以通过容器编排工具kubernetes快速将这一个功能回滚到上一个版本。</li></ol><ul><li>用传统框架是这样的<br>所有的功能写到一个应用中，启动慢，内容太多，后期更新迭代只会越来越难，上线部署风险大（需要重启整个大项目），特别得出现了逻辑问题需要技术人员定位问题，以及回退项目，造成用户体验不好。</li></ul><p>举个简单的例子，如果支付宝、微信这样的大应用用传统框架更新，更新完发现某个功能不能用需要回退重启，造成了短暂几分钟不能打开应用，这种损失是无法估量的。而用微服务架构，即使更新后出现了问题，也只会找更新的那个应用组件，定位问题+回退重启，这种方式可以在用户无感知的情况下进行，影响也会小很多。</p><h1 id="Devops和微服务的关系"><a href="#Devops和微服务的关系" class="headerlink" title="Devops和微服务的关系"></a>Devops和微服务的关系</h1><p>一些企业总是避开定期投资架构解耦和现代化技术，因此现在无法摆脱巨大的产品架构，使得发布变成无法预测。从某种程度上来说，微服务架构和Devops相辅相成，devops和微服务架构的存在都是为了解决这么一个问题：全世界的所有组织都试图频繁地发布高质量的产品，来提高客户的满意度。</p><h2 id="微服务架构和DevOps允许分散开的团队控制他们自己的命运"><a href="#微服务架构和DevOps允许分散开的团队控制他们自己的命运" class="headerlink" title="微服务架构和DevOps允许分散开的团队控制他们自己的命运"></a>微服务架构和DevOps允许分散开的团队控制他们自己的命运</h2><p>微服务架构就是关于把一件事做好，从设计一个由许多“服务”集中到一个的庞然大物中，这是一种范式转变。对庞大系统的扼杀催生了更小的微服务，并加速了庞大笨重团队的瓦解，研发变成了多个更小（更灵活）的团队。</p><p>此外，权力分散也正好符合DevOps的核心原则，缩小了两者之间的差距：</p><ul><li>UI、中间层和后台专家，他们倾向于在自己的筒仓中操作。</li><li>业务、产品管理、开发、QA、发布、安全、运营，以及其他成员，这些人都倾向于在自己的部门工作。</li></ul><p>最重要的是，微服务架构和DevOps都支持产品模型和项目模型，即5-7个成员团队设计、构建、测试、发布、监控和维护他们在开发/测试、阶段和生产上的应用。</p><h2 id="区分开的服务可以作为独立的、可展开的构件发布"><a href="#区分开的服务可以作为独立的、可展开的构件发布" class="headerlink" title="区分开的服务可以作为独立的、可展开的构件发布"></a>区分开的服务可以作为独立的、可展开的构件发布</h2><ul><li>大多数组织都倾注于设计和实施有弹性的持续交付管道，这可以帮助他们：在一个安全的、受保护的和可审计的方式下测试新功能。</li><li>很快从失败中恢复，而不去影响客户。</li></ul><p>尽管整体架构模式是成功的，但微服务提供的模块性使发布能够快速地以增量的方式进行。DevOps也支持小批量的规模，并允许小型团队拥有服务并将其交付。这样的设计能使微服务和DevOps在和谐地发挥作用，以帮助组织扩大规模。</p><h2 id="微服务和DevOps提高了测试周期，并且加速推向市场"><a href="#微服务和DevOps提高了测试周期，并且加速推向市场" class="headerlink" title="微服务和DevOps提高了测试周期，并且加速推向市场"></a>微服务和DevOps提高了测试周期，并且加速推向市场</h2><p>一些组织常常面临激烈的竞争，或者至少是保持不掉队。他们想建立可持续的商业模式，这样就可以让新想法迅速付诸实践，而不会消磨团队精力。然而，用庞大僵化的系统来实现这一目标是有可能的，但与颗粒状的微服务相比，可能性要小得多。下面就是原因。</p><p>一个庞然的系统经常导致一场“庞大测试”：</p><ul><li>系统在重要的一段时间内被设计和实施，在此期间团队成员可能多次改动。</li><li>可能不允许单独测试，因为测试用例、设计测试数据和测试配置没有被设计用来独立执行。</li><li>由于添加新的测试用例，每个新版本就越来越大。有时候，即使是在生产中不常用的功能，也会有缓慢的、归档的过期测试。在测试存档过程中可能存在不确定性，因为可能没有一个人完全理解系统架构。</li></ul><p>颗粒度的微服务通过独立的、可部署版本的构建被发布到生产中，这些构件分别被验证。微服务相互作用，提供特定的客户用例，因此需要智能集成测试。在集成测试期间，这些邻近的服务中有一些是由它们的测试替身和清晰定义的合约来表示的。测试替身和合约应该被重视，并且应该由拥有、交付和维护真实服务和接口的小团队拥有。</p><h1 id="微服务架构面临的挑战"><a href="#微服务架构面临的挑战" class="headerlink" title="微服务架构面临的挑战"></a>微服务架构面临的挑战</h1><ol><li>运维开销。更多的服务也就意味着更多的运维，产品团队需要保证所有的相关服务都有完善的监控等基础设施，传统的架构开发者只需要保证一个应用正常运行，而现在却需要保证几十甚至上百道工序高效运转，这是一个艰巨的任务。</li><li>DevOps要求。使用微服务架构后，这就意味着团队需要高品质的DevOps和自动化技术。而现在，这样的全栈式人才很少。</li><li>隐式接口。服务和服务之间通过接口来“联系”，当某一个服务更改接口格式时，可能涉及到此接口的所有服务都需要做调整。</li><li>重复劳动。在很多的服务中可能都会使用到同一个功能，而这一功能点没有足够大到提供一个服务的程度，这个时候可能不同的服务团队都会单独开发这一功能，重复的业务逻辑，这违背了良好的软件工程中的很多原则。</li><li>分布式系统的复杂性。微服务通过REST API或消息来将不同的服务联系起来，这在之前可能只是一个简单的远程过程调用。分布式系统也就意味着开发者需要考虑网络延迟、容错、消息序列化、不可靠的网络、异步、版本控制、负载等，而面对如此多的微服务都需要分布式时，整个产品需要有一整套完整的机制来保证各个服务可以正常运转。</li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我认为微服务架构已经成为了互联网企业最重要的技术之一，配合Devops能更加简化了软件的交付方法，如持续交付和持续部署，并帮助生成可伸缩的交付管道。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://baike.baidu.com/item/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84" target="_blank" rel="noopener">百度百科-微服务架构</a></p><p><a href="http://dockone.io/article/5976" target="_blank" rel="noopener">微服务给DevOps带来了什么？</a></p><p><a href="https://blog.csdn.net/enweitech/article/details/51819839" target="_blank" rel="noopener">时下流行devops关键词：分布式架构、一体化架构和微服务架构</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> 跟我学Devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Devops </tag>
            
            <tag> 微服务 </tag>
            
            <tag> Rest Api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离线安装Mysql5.7.28及调优</title>
      <link href="/2020/05/01/mysql/mysql-install/"/>
      <url>/2020/05/01/mysql/mysql-install/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><ul><li>操作系统centos7.6</li><li>机器性能32C 64G 外挂2TSSD到/data目录（数据库建议外挂磁盘）  </li><li>mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz</li><li>下载链接</li><li><a href="https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz" target="_blank" rel="noopener">https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz</a></li><li>百度网盘链接</li><li><a href="https://pan.baidu.com/s/1cadkpE_lDtaStWxUv17-QQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1cadkpE_lDtaStWxUv17-QQ</a>  提取码 54rl</li></ul><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; groupadd mysql</span><br><span class="line">shell&gt; useradd -r -g mysql -s &#x2F;bin&#x2F;false mysql</span><br><span class="line">shell&gt; mkdir -vp &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;&#123;data,logs,tmp&#125;</span><br><span class="line">shell&gt; mkdir -vp &#x2F;opt&#x2F;mysql</span><br><span class="line">shell&gt; cd &#x2F;opt&#x2F;mysql&#x2F;</span><br><span class="line">shell&gt; tar zxvf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">shell&gt; cd &#x2F;usr&#x2F;local</span><br><span class="line">shell&gt; ln -s &#x2F;opt&#x2F;mysql&#x2F;mysql-5.7.28-linux-glibc2.12-x86_64  mysql</span><br></pre></td></tr></table></figure><h2 id="优化配置文件"><a href="#优化配置文件" class="headerlink" title="优化配置文件"></a>优化配置文件</h2><p>里面的参数都是在适用于本文环境准备机器配置的基础上调优后的结果，如果你想安装Mysql的机器配置与于本文环境准备机器配置相差很大请不要盲目复制，请看下面3大配置项内容里具体参数的讲解，太长不看可以直接看总结的配置文件。</p><h3 id="客户端默认设置内容"><a href="#客户端默认设置内容" class="headerlink" title="客户端默认设置内容"></a>客户端默认设置内容</h3><ul><li>socket 可以根据实际磁盘挂载的目录进行调整<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[client]   #客户端默认设置内容</span><br><span class="line"></span><br><span class="line">user&#x3D;root</span><br><span class="line">password&#x3D;123456</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">socket &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;mysql.sock </span><br><span class="line">#避免MySQL的外部锁定，减少出错几率增强稳定性。</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用mysql命令登录mysql数据库时的默认设置"><a href="#使用mysql命令登录mysql数据库时的默认设置" class="headerlink" title="使用mysql命令登录mysql数据库时的默认设置"></a>使用mysql命令登录mysql数据库时的默认设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[mysql]  #代表我们使用mysql命令登录mysql数据库时的默认设置</span><br><span class="line"></span><br><span class="line">#参数对于做运维的人来说很重要。我们登入mysql数据库后，mysql的提示符只是一个很简单内容 mysql&gt;,没有其他任何信息。通过--prompt&#x3D;name可以自定义提示信息，通过配置显示登入的主机地址，登陆用户名，当前时间，当前数据库schema等待。个人强烈要求加上登入主机名，登陆用户名，当前库这三项加入提示内容。</span><br><span class="line">prompt&#x3D;&quot;\u@dev-data-01 \R:\m:\s [\d]&gt; &quot; </span><br><span class="line">#自动补全的意思，就像我们在linux命令行里输入命令的时候，使用tab键的功能是一样的</span><br><span class="line">no-auto-rehash </span><br><span class="line">#utf8mb4兼容utf8，且比utf8能表示更多的字符，是utf8字符集的超集。</span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br></pre></td></tr></table></figure><h3 id="数据库自身的默认设置"><a href="#数据库自身的默认设置" class="headerlink" title="数据库自身的默认设置"></a>数据库自身的默认设置</h3><p>数据库自身配置分为4项 </p><ul><li><p>basic settings    </p></li><li><p>log settings</p></li><li><p>replication settings</p></li><li><p>innodb settings</p></li></ul><h4 id="basic-settings"><a href="#basic-settings" class="headerlink" title="basic settings"></a>basic settings</h4><ul><li><p>datadir 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>socket 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>secure_file_priv 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>skip_name_resolve  如果你的mysql主机查询DNS很慢或是有很多客户端主机时会导致连接很慢，是因为开发的机器是不能够连接外网的，所以DNS解析是不可能完成的，这时就需要禁用</p></li><li><p>external-locking 如果是单机部署需要禁用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]  #代表数据库自身的默认设置</span><br><span class="line">########basic settings########</span><br><span class="line">user    &#x3D; mysql</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">datadir &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data</span><br><span class="line">socket  &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;mysql.sock</span><br><span class="line">#参数是用来限制LOAD DATA, SELECT ... OUTFILE, and LOAD_FILE()传到哪个指定目录的，不配置不能用这个命令导出文件。</span><br><span class="line">secure_file_priv&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line">#该变量的值是ON或 OFF指示是否启用了性能模式。</span><br><span class="line">performance_schema &#x3D; 1</span><br><span class="line">#服务器安装时指定的默认字符集设定。</span><br><span class="line">character_set_server&#x3D;utf8mb4   </span><br><span class="line">#操作系统允许mysqld打开的文件数量。</span><br><span class="line">open_files_limit &#x3D; 655350  </span><br><span class="line">#事务隔离级别为READ COMMITTED。</span><br><span class="line">transaction_isolation &#x3D; READ-COMMITTED</span><br><span class="line">#针对交互式连接服务器关闭连接前等待活动的秒数，例如mysql客户端连接数据库。</span><br><span class="line">interactive_timeout &#x3D; 31536000</span><br><span class="line">#针对非交互式连接服务器关闭连接前等待活动的秒数，例如通过jdbc连接数据库。</span><br><span class="line">wait_timeout &#x3D; 31536000</span><br><span class="line">#客户端连接是否解析主机名。0，mysqld在检查客户端连接时解析主机名；1，mysqld仅使用IP编号。</span><br><span class="line">skip_name_resolve &#x3D; 1  </span><br><span class="line">#说明是否数据目录所在的文件系统对文件名的大小写敏感。1说明对文件名的大小写不敏感。</span><br><span class="line">lower_case_table_names&#x3D;1    </span><br><span class="line">#在MySQL暂时停止回答新请求之前的短时间内可以堆叠多少个请求。仅当您期望在短时间内有大量连接时，才需要增加此数量。</span><br><span class="line">back_log &#x3D; 1024</span><br><span class="line">#指定MySQL允许的最大连接进程数。如果在访问论坛时经常出现Too Many Connections的错误提示，则需要增大该参数值。</span><br><span class="line">max_connections &#x3D; 10240    </span><br><span class="line">#如果MySQL服务器连续接收到来自同一主机的请求且都被拒绝，次数超过max_connect_errors的设定值时，MySQL服务器就会阻止这台主机后续的所有请求。</span><br><span class="line">max_connect_errors &#x3D; 1000000</span><br><span class="line">#表文件描述符的缓存大小。</span><br><span class="line">table_open_cache &#x3D; 20480</span><br><span class="line">#可以存储在定义高速缓存中的表定义（来自文件）的数量 。</span><br><span class="line">table_definition_cache &#x3D; 20480</span><br><span class="line">#打开表缓存实例的数量。</span><br><span class="line">table_open_cache_instances &#x3D; 64</span><br><span class="line">#每个线程的堆栈大小。</span><br><span class="line">thread_stack &#x3D; 512K</span><br><span class="line">#跳过外部锁定。如果是单服务器环境，则将其禁用即可,如果是多服务器环境,则注释掉这一行即可。</span><br><span class="line">external-locking &#x3D; FALSE</span><br><span class="line">#限制server接受的数据包大小。</span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line">#每个必须执行排序的会话都会分配此大小的缓冲区。</span><br><span class="line">sort_buffer_size &#x3D; 4M</span><br><span class="line">#用于普通索引扫描，范围索引扫描和不使用索引的联接的缓冲区的最小大小，从而执行全表扫描。</span><br><span class="line">join_buffer_size &#x3D; 4M</span><br><span class="line">#服务器应缓存多少线程以供重用。</span><br><span class="line">thread_cache_size &#x3D; 15360</span><br><span class="line">#内部内存临时表的最大大小。</span><br><span class="line">tmp_table_size &#x3D; 32M</span><br><span class="line">#此变量设置MEMORY允许用户创建的表增长到的最大大小。变量的值用于计算MEMORY表MAX_ROWS值。</span><br><span class="line">max_heap_table_size &#x3D; 32M</span><br><span class="line">#此变量指定尝试获取元数据锁定的超时（以秒为单位）。</span><br><span class="line">lock_wait_timeout &#x3D; 3600</span><br><span class="line">#此变量确定服务器对列中的默认值和NULL-value处理启用某些非标准行为TIMESTAMP。</span><br><span class="line">explicit_defaults_for_timestamp &#x3D; 1</span><br><span class="line">#每个必须执行排序的会话都会分配此大小的缓冲区。</span><br><span class="line">sort_buffer_size &#x3D; 33554432</span><br></pre></td></tr></table></figure></li></ul><h4 id="log-settings"><a href="#log-settings" class="headerlink" title="log settings"></a>log settings</h4><ul><li><p>slow_query_log_file 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>log-bin 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>log-error 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>long_query_time 俗称定义慢sql的标准,可以根据实际项目定义具体标准</p></li><li><p>log_throttle_queries_not_using_indexes需要log_queries_not_using_indexes启用</p></li><li><p>expire_logs_days Binlog 自动清理时间</p></li><li><p>max_binlog_cache_size 推荐的最大值为4GB。这是由于MySQL当前无法使用大于4GB的二进制日志位置。</p></li><li><p>binlog_format 在MySQL 5.7.7和更高版本中，默认值为ROW。</p></li><li><p>sync_binlog=1：启用在提交事务之前将二进制日志同步到磁盘。这是最安全的设置，但由于磁盘写入次数增加，可能会对性能产生负面影响。</p></li><li><p>sync_binlog=0：禁用MySQL服务器将二进制日志同步到磁盘的功能。取而代之的是，MySQL服务器依靠操作系统不时地将二进制日志刷新到磁盘上，就像处理其他任何文件一样。此设置提供最佳性能，但是在电源故障或操作系统崩溃的情况下，服务器可能提交了尚未同步到二进制日志的事务。</p></li><li><p>sync_binlog=N，其中N的值不是0或1：是N二进制日志提交组已收集之后，二进制日志将同步到磁盘 。在电源故障或操作系统崩溃的情况下，服务器可能提交了尚未刷新到二进制日志的事务。由于磁盘写入次数的增加，此设置可能会对性能产生负面影响。较高的值可以提高性能，但会增加数据丢失的风险。</p></li><li><p>为了在InnoDB与事务一起使用的复制设置中获得最大的持久性和一致性，请使用以下设置：sync_binlog=1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">########log settings########</span><br><span class="line">#慢查询日志文件的名称</span><br><span class="line">slow_query_log_file &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;slow.log</span><br><span class="line">#错误日志输出目标。如果目标是控制台，则值为stderr。否则，目标是文件，log_error值是文件名。</span><br><span class="line">log-error &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;error.log</span><br><span class="line">#启用二进制日志记录。启用二进制日志记录后，服务器会将所有更改数据的语句记录到二进制日志中，该日志用于备份和复制。</span><br><span class="line">log-bin &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;logs&#x2F;mybinlog</span><br><span class="line">#是否启用慢速查询日志。该值可以是0（或OFF）以禁用日志，也可以是 1（或 ON）以启用日志。</span><br><span class="line">slow_query_log &#x3D; 1</span><br><span class="line">#此变量控制写入错误日志的消息以及通常写入文件的查询日志和慢速查询日志消息中时间戳的时区。设置为SYSTEM（本地系统时区）。</span><br><span class="line">log_timestamps &#x3D; SYSTEM</span><br><span class="line">#如果查询所花的时间超过许多秒，则服务器将增加Slow_queries状态变量,如果启用了慢查询日志，则查询将记录到慢查询日志文件中。俗称定义慢sql的标准</span><br><span class="line">long_query_time &#x3D; 1</span><br><span class="line">#如果在启用慢查询日志的情况下启用此变量，则会记录预期将检索所有行的查询。</span><br><span class="line">log_queries_not_using_indexes &#x3D;1</span><br><span class="line">#如果 log_queries_not_using_indexes启用，该变量将限制每分钟可写入慢速查询日志的此类查询的数量。</span><br><span class="line">log_throttle_queries_not_using_indexes &#x3D; 60</span><br><span class="line">#检查少于此行数的查询不会记录到慢查询日志中。</span><br><span class="line">min_examined_row_limit &#x3D; 100</span><br><span class="line">#开启后，在写入慢速查询日志的语句中包括慢速管理语句，包括ALTER TABLE， ANALYZE TABLE， CHECK TABLE， CREATE INDEX， DROP INDEX， OPTIMIZE TABLE，和 REPAIR TABLE。</span><br><span class="line">log_slow_admin_statements &#x3D; 1</span><br><span class="line">#启用慢速查询日志后，此变量将启用日志记录，以记录long_query_time在从属服务器上执行了超过几秒钟的查询 。</span><br><span class="line">log_slow_slave_statements &#x3D; 1</span><br><span class="line">#binlog7天自动清理</span><br><span class="line">expire_logs_days &#x3D; 7</span><br><span class="line">#是否对错误日志生成其他警告消息。</span><br><span class="line">log_warnings &#x3D; 1</span><br><span class="line">#在事务期间，用于保存对二进制日志的更改的缓存的大小。</span><br><span class="line">binlog_cache_size &#x3D; 4M</span><br><span class="line">#如果事务需要的内存字节数超过此数量，则服务器将生成多语句事务，而该语句需要的存储数超过“max_binlog_cache_size”字节。</span><br><span class="line">max_binlog_cache_size &#x3D; 4G</span><br><span class="line">#如果对二进制日志的写入导致当前日志文件的大小超过此变量的值，则服务器将旋转二进制日志（关闭当前文件并打开下一个日志）。</span><br><span class="line">max_binlog_size &#x3D; 1G</span><br><span class="line">#启用后，此变量使主服务器在二进制日志中为每个事件写入一个校正和。</span><br><span class="line">binlog_checksum &#x3D; 1</span><br><span class="line">#此变量设置二进制日志格式，并且可以是任何一个STATEMENT，ROW或MIXED。</span><br><span class="line">binlog_format &#x3D; row</span><br><span class="line">#控制MySQL服务器将二进制日志同步到磁盘的频率。</span><br><span class="line">sync_binlog &#x3D; 1</span><br></pre></td></tr></table></figure></li></ul><h4 id="replication-settings"><a href="#replication-settings" class="headerlink" title="replication settings"></a>replication settings</h4><p>如果你不搭建主从集群可以跳过这项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">########replication settings########</span><br><span class="line">#服务器ID。在主服务器和每个从属服务器上，必须设置server_id系统变量以在1到2 32 − 1 的范围内建立唯一的复制ID 。</span><br><span class="line">server-id &#x3D; 213306</span><br><span class="line">#此变量的设置确定从属服务器是将主服务器状态和连接信息记录到FILE（master.info）还是TABLE （mysql.slave_master_info）上。仅当没有复制线程正在执行时，才能更改此变量的值。</span><br><span class="line">master_info_repository &#x3D; TABLE</span><br><span class="line">#该变量确定从站在继电器日志中的位置是写入FILE（relay-log.info）还是写入TABLE（mysql.slave_relay_log_info）。仅当没有复制线程正在执行时，才能更改此变量的值。</span><br><span class="line">relay_log_info_repository &#x3D; TABLE</span><br><span class="line">#控制是否启用基于GTID的日志记录以及日志可以包含的事务类型。</span><br><span class="line">gtid_mode &#x3D; on</span><br><span class="line">#根据此变量的值，服务器通过仅允许执行可以使用GTID安全记录的语句来实现GTID一致性。</span><br><span class="line">enforce-gtid-consistency &#x3D; on</span><br><span class="line">#从服务器从主服务器收到的更新是否应记录到从服务器自己的二进制日志中。</span><br><span class="line">log_slave_updates  &#x3D; on</span><br><span class="line">根据此变量的值，服务器通过仅允许执行可以使用GTID安全记录的语句来实现GTID一致性。</span><br><span class="line">enforce_gtid_consistency &#x3D; 1</span><br><span class="line">#中继日志文件的基本名称。</span><br><span class="line">relay_log &#x3D; relay.log</span><br><span class="line">#如果启用，此变量将在服务器启动后立即启用自动中继日志恢复。</span><br><span class="line">relay_log_recovery &#x3D; 1</span><br><span class="line">#一旦不再需要中继日志文件，则禁用或启用它们的自动清除。</span><br><span class="line">relay-log-purge &#x3D; 1</span><br><span class="line">#此变量控制MySQL启动或重新启动时在搜索GTID期间如何迭代二进制日志文件。</span><br><span class="line">binlog_gtid_simple_recovery &#x3D; 1</span><br><span class="line">#通常，当从属服务器发生错误时，复制会停止，这使您有机会手动解决数据中的不一致问题。</span><br><span class="line">slave_skip_errors &#x3D; ddl_exist_errors</span><br><span class="line">#在为基础行的日志记录和复制准备副本行时，此变量控制如何在行中搜索匹配项，特别是是否使用哈希扫描。  </span><br><span class="line">slave-rows-search-algorithms &#x3D; &#39;INDEX_SCAN,HASH_SCAN&#39;</span><br></pre></td></tr></table></figure><h4 id="innodb-settings"><a href="#innodb-settings" class="headerlink" title="innodb settings"></a>innodb settings</h4><ul><li><p>innodb_undo_directory 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>innodb_buffer_pool_size 如果机器内存较低，可以将此参数调低。参数是动态的，它允许您在不重新启动服务器的情况下调整缓冲池的大小。</p></li><li><p>innodb_buffer_pool_instances 此选项仅在设置innodb_buffer_pool_size为1GB或更大时才生效 。总缓冲池大小在所有缓冲池之间分配。为了获得最佳效率，指定的组合 innodb_buffer_pool_instances 和innodb_buffer_pool_size ，使得每个缓冲池实例是至少为1GB。</p></li><li><p>innodb_log_file_size  通常，日志文件的总大小应足够大，以使服务器可以消除工作负载活动中的高峰和低谷，这通常意味着有足够的重做日志空间来处理一个小时以上的写活动。值越大，缓冲池中需要的检查点刷新活动越少，从而节省了磁盘I / O。</p></li><li><p>innodb_io_capacity、innodb_io_capacity_max  根据服务器IOPS能力适当调整，一般配普通SSD盘的话，可以调整到 10000 - 20000，配置高端PCIe SSD卡的话，则可以调整的更高，比如 50000 - 80000</p></li><li><p>innodb_lru_scan_depth 小于默认值（    1024）的设置通常适用于大多数工作负载。高于必要值的值可能会影响性能。仅在典型工作负载下具有备用I / O容量时，才考虑增加该值。相反，如果写密集型工作负载使您的I / O容量饱和，请减小该值，尤其是在大型缓冲池的情况下。</p></li><li><p>innodb_status_output、innodb_status_output_locks 开启可能会导致log-error文件增长较快</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">########innodb settings########</span><br><span class="line">#InnoDB创建撤消表空间的路径。通常用于将撤消日志放置在其他存储设备上。</span><br><span class="line">innodb_undo_directory &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;undolog</span><br><span class="line">#磁盘上内部临时表的存储引擎。允许的值为MYISAM和INNODB （默认值）。</span><br><span class="line">internal_tmp_disk_storage_engine &#x3D; InnoDB</span><br><span class="line">#指定InnoDB表的大小。</span><br><span class="line">innodb_page_size &#x3D; 8192</span><br><span class="line">#innodb_buffer_pool_chunk_size定义InnoDB缓冲池大小调整操作的块大小</span><br><span class="line">innodb_buffer_pool_size &#x3D; 40960m</span><br><span class="line"># InnoDB 池缓冲划分为的区域数。 </span><br><span class="line">innodb_buffer_pool_instances &#x3D; 4</span><br><span class="line">#指定在MySQL服务器启动时，通过加载先前保存的相同页面来自动预热InnoDB 缓冲池。</span><br><span class="line">innodb_buffer_pool_load_at_startup &#x3D; 1</span><br><span class="line">#指定在关闭MySQL服务器时是否记录InnoDB缓冲池中缓存的页面，以缩短下次重启时的预热过程。</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown &#x3D; 1</span><br><span class="line">#定义InnoDB系统表空间数据文件的名称，大小和属性 。</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:1G:autoextend</span><br><span class="line">#每秒钟写入并刷新日志N。。</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line">#InnoDB 用于写入磁盘上的日志文件的缓冲区的大小。</span><br><span class="line">innodb_log_buffer_size &#x3D; 32M</span><br><span class="line">#在每个字节大小日志文件在日志组。</span><br><span class="line">innodb_log_file_size &#x3D; 1G</span><br><span class="line">#日志文件中日志组数量，InnoDB以循环方式写入文件。</span><br><span class="line">innodb_log_files_in_group &#x3D; 4</span><br><span class="line">#定义撤消表空间的阈值大小。</span><br><span class="line">innodb_max_undo_log_size &#x3D; 4G</span><br><span class="line">#所使用的撤消表空间的InnoDB数量。</span><br><span class="line">innodb_undo_tablespaces &#x3D; 95</span><br><span class="line">#变量定义了可用于InnoDB后台任务的IOPS，例如从缓冲池刷新页面和合并来自更改缓冲区的数据。</span><br><span class="line">innodb_io_capacity &#x3D; 2000</span><br><span class="line">#如果刷新较慢，则InnoDB可以比innodb_io_capacity变量定义更高的IOPS更积极地进行刷新。</span><br><span class="line">innodb_io_capacity_max &#x3D; 4000</span><br><span class="line">#0为遵守innodb_io_capacity定义 1为不遵守innodb_io_capacity定义 。</span><br><span class="line">innodb_flush_sync &#x3D; 0</span><br><span class="line">#指定是否冲洗从一个页面InnoDB 缓冲池也可以清空其他脏页在相同的程度。</span><br><span class="line">innodb_flush_neighbors &#x3D; 0</span><br><span class="line">#一个影响缓冲池刷新操作的算法和启发式方法的参数。</span><br><span class="line">innodb_lru_scan_depth &#x3D; 4000</span><br><span class="line">#InnoDB 事务在放弃之前等待行锁定的时间长度（以秒为单位）。</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 5</span><br><span class="line">#写入操作的I &#x2F; O线程数 InnoDB。</span><br><span class="line">innodb_write_io_threads &#x3D; 8</span><br><span class="line">#读取操作的I &#x2F; O线程数 InnoDB。</span><br><span class="line">innodb_read_io_threads &#x3D; 8</span><br><span class="line">#专用于InnoDB清除操作的后台线程数 。</span><br><span class="line">innodb_purge_threads &#x3D; 4</span><br><span class="line">#从缓冲池实例中刷新脏页面的页面清洁程序线程数。</span><br><span class="line">innodb_page_cleaners &#x3D; 4</span><br><span class="line">#InnoDB尝试从缓冲池刷新数据，使脏页百分比不超过此值。</span><br><span class="line">innodb_max_dirty_pages_pct &#x3D; 50</span><br><span class="line">#定义用于将数据刷新到InnoDB数据文件和日志文件的方法，这会影响I&#x2F;O吞吐量。</span><br><span class="line">innodb_flush_method &#x3D; O_DIRECT</span><br><span class="line">#指定如何生成和验证存储在表空间的磁盘块中的校验。</span><br><span class="line">innodb_checksum_algorithm &#x3D; crc32</span><br><span class="line">#InnoDB 默认情况下，仅回滚事务超时上的最后一条语句。</span><br><span class="line">innodb_rollback_on_timeout &#x3D; 1</span><br><span class="line">#当启用该选项，所有信息死锁在InnoDB用户交易被记录在 mysqld 错误日志。</span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1</span><br><span class="line">#当innodb_file_per_table启用时，在文件的每个表的表空间默认创建的表。</span><br><span class="line">innodb_file_per_table &#x3D; 1</span><br><span class="line">#指定在表的在线DDL操作期间使用的临时日志文件的大小的上限（以字节为单位）InnoDB。</span><br><span class="line">innodb_online_alter_log_max_size &#x3D; 4G</span><br><span class="line">#仅当优化器统计信息配置为非持久性时，此选项才适用 。</span><br><span class="line">innodb_stats_on_metadata &#x3D; 0</span><br><span class="line">#InnoDB可以在从磁盘读取的所有表空间页上使用校验和验证，以确保对硬件故障或损坏的数据文件具有额外的容错能力。</span><br><span class="line">innodb_checksums &#x3D; 1</span><br><span class="line">#定义所使用的回滚段数 InnoDB。</span><br><span class="line">innodb_undo_logs &#x3D; 128</span><br><span class="line">##启用InnoDB的status file，便于管理员查看以及监控等</span><br><span class="line">innodb_status_file &#x3D; 1</span><br><span class="line">#启用或禁用标准InnoDBMonitor的定期输出。</span><br><span class="line">innodb_status_output &#x3D; 0</span><br><span class="line">#启用或禁用InnoDB锁定监视器</span><br><span class="line">innodb_status_output_locks &#x3D; 0</span><br><span class="line">#启用此选项后InnoDB，使用DYNAMIC 或 COMPRESSED 行格式的表 允许长度超过767字节（最大3072字节）的索引键前缀 。</span><br><span class="line">innodb_large_prefix &#x3D; 1</span><br><span class="line">#InnoDB尝试使内部并发的操作系统线程数保持InnoDB小于或等于此变量给定的限制（InnoDB使用操作系统线程来处理用户事务）值0（默认值）被解释为无限并发（不进行并发检查）</span><br><span class="line">innodb_thread_concurrency &#x3D; 0</span><br><span class="line">#InnoDB线程在挂起线程之前 等待 互斥量释放的次数。</span><br><span class="line">innodb_sync_spin_loops &#x3D; 100</span><br><span class="line">#自旋锁定的 两次轮询之间的最大延迟 </span><br><span class="line">innodb_spin_wait_delay &#x3D; 30</span><br><span class="line">#指定MySQL可同时打开.ibd文件的最大个数，最小为10，默认300。此选项只针对InnoDB表打开的.ibd文件描述符，独立于open_files_limit。</span><br><span class="line">innodb_open_files &#x3D; 655350  </span><br><span class="line">#当innodb_strict_mode启用时，InnoDB将返回错误，而不是警告了一定的条件。</span><br><span class="line">innodb_strict_mode &#x3D; 1</span><br><span class="line">#指定在创建InnoDB索引期间用于对数据进行排序的排序缓冲区的大小。</span><br><span class="line">innodb_sort_buffer_size &#x3D; 67108864 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#innodb monitor</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_innodb&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_server&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_dml&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ddl&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_trx&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_os&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_purge&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_log&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_lock&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_index&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ibuf_system&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer_page&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_adaptive_hash&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="总结配置文件"><a href="#总结配置文件" class="headerlink" title="总结配置文件"></a>总结配置文件</h3><p>vim /etc/my.cnf<br>复制粘贴下面的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">[client]   </span><br><span class="line">user&#x3D;root</span><br><span class="line">password&#x3D;123456</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">socket &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;mysql.sock </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[mysql] </span><br><span class="line">prompt&#x3D;&quot;\u@dev-data-01 \R:\m:\s [\d]&gt; &quot; </span><br><span class="line">no-auto-rehash </span><br><span class="line">default-character-set&#x3D;utf8mb4  </span><br><span class="line"></span><br><span class="line">[mysqld] </span><br><span class="line">########basic settings########</span><br><span class="line">user    &#x3D; mysql</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">datadir &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data</span><br><span class="line">socket  &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;mysql.sock</span><br><span class="line">secure_file_priv&#x3D;&#x2F;data&#x2F;mysql&#x2F;</span><br><span class="line">performance_schema &#x3D; 1</span><br><span class="line">character_set_server&#x3D;utf8mb4   </span><br><span class="line">open_files_limit &#x3D; 655350  </span><br><span class="line">transaction_isolation &#x3D; READ-COMMITTED</span><br><span class="line">interactive_timeout &#x3D; 31536000</span><br><span class="line">wait_timeout &#x3D; 31536000</span><br><span class="line">skip_name_resolve &#x3D; 1  </span><br><span class="line">lower_case_table_names&#x3D;1    </span><br><span class="line">back_log &#x3D; 1024</span><br><span class="line">max_connections &#x3D; 10240    </span><br><span class="line">max_connect_errors &#x3D; 1000000</span><br><span class="line">table_open_cache &#x3D; 20480</span><br><span class="line">table_definition_cache &#x3D; 20480</span><br><span class="line">table_open_cache_instances &#x3D; 64</span><br><span class="line">thread_stack &#x3D; 512K</span><br><span class="line">external-locking &#x3D; FALSE</span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line">sort_buffer_size &#x3D; 4M</span><br><span class="line">join_buffer_size &#x3D; 4M</span><br><span class="line">thread_cache_size &#x3D; 15360</span><br><span class="line">tmp_table_size &#x3D; 32M</span><br><span class="line">max_heap_table_size &#x3D; 32M</span><br><span class="line">lock_wait_timeout &#x3D; 3600</span><br><span class="line">explicit_defaults_for_timestamp &#x3D; 1</span><br><span class="line">sort_buffer_size &#x3D; 33554432</span><br><span class="line"></span><br><span class="line">########log settings########</span><br><span class="line">slow_query_log_file &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;slow.log</span><br><span class="line">log-error &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;error.log</span><br><span class="line">log-bin &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;logs&#x2F;mybinlog</span><br><span class="line">slow_query_log &#x3D; 1</span><br><span class="line">log_timestamps &#x3D; SYSTEM</span><br><span class="line">long_query_time &#x3D; 1</span><br><span class="line">log_queries_not_using_indexes &#x3D;1</span><br><span class="line">log_throttle_queries_not_using_indexes &#x3D; 60</span><br><span class="line">min_examined_row_limit &#x3D; 100</span><br><span class="line">log_slow_admin_statements &#x3D; 1</span><br><span class="line">log_slow_slave_statements &#x3D; 1</span><br><span class="line">expire_logs_days &#x3D; 7</span><br><span class="line">log_warnings &#x3D; 1</span><br><span class="line">binlog_cache_size &#x3D; 4M</span><br><span class="line">max_binlog_cache_size &#x3D; 4G</span><br><span class="line">max_binlog_size &#x3D; 1G</span><br><span class="line">binlog_checksum &#x3D; 1</span><br><span class="line">binlog_format &#x3D; row</span><br><span class="line">sync_binlog &#x3D; 1</span><br><span class="line"></span><br><span class="line">########replication settings########</span><br><span class="line">server-id &#x3D; 213306</span><br><span class="line">master_info_repository &#x3D; TABLE</span><br><span class="line">relay_log_info_repository &#x3D; TABLE</span><br><span class="line">gtid_mode &#x3D; on</span><br><span class="line">enforce-gtid-consistency &#x3D; on</span><br><span class="line">log_slave_updates  &#x3D; on</span><br><span class="line">enforce_gtid_consistency &#x3D; 1</span><br><span class="line">relay_log &#x3D; relay.log</span><br><span class="line">relay_log_recovery &#x3D; 1</span><br><span class="line">relay-log-purge &#x3D; 1</span><br><span class="line">binlog_gtid_simple_recovery &#x3D; 1</span><br><span class="line">slave_skip_errors &#x3D; ddl_exist_errors</span><br><span class="line">slave-rows-search-algorithms &#x3D; &#39;INDEX_SCAN,HASH_SCAN&#39;</span><br><span class="line"></span><br><span class="line">########innodb settings########</span><br><span class="line">innodb_undo_directory &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;undolog</span><br><span class="line">internal_tmp_disk_storage_engine &#x3D; InnoDB</span><br><span class="line">innodb_page_size &#x3D; 8192</span><br><span class="line">innodb_buffer_pool_size &#x3D; 40960m </span><br><span class="line">innodb_buffer_pool_instances &#x3D; 4</span><br><span class="line">innodb_buffer_pool_load_at_startup &#x3D; 1</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown &#x3D; 1</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:1G:autoextend</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line">innodb_log_buffer_size &#x3D; 32M</span><br><span class="line">innodb_log_file_size &#x3D; 1G</span><br><span class="line">innodb_log_files_in_group &#x3D; 4</span><br><span class="line">innodb_max_undo_log_size &#x3D; 4G</span><br><span class="line">innodb_undo_tablespaces &#x3D; 95</span><br><span class="line">innodb_io_capacity &#x3D; 2000</span><br><span class="line">innodb_io_capacity_max &#x3D; 4000</span><br><span class="line">innodb_flush_sync &#x3D; 0</span><br><span class="line">innodb_flush_neighbors &#x3D; 0</span><br><span class="line">innodb_lru_scan_depth &#x3D; 4000</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 5</span><br><span class="line">innodb_write_io_threads &#x3D; 8</span><br><span class="line">innodb_read_io_threads &#x3D; 8</span><br><span class="line">innodb_purge_threads &#x3D; 4</span><br><span class="line">innodb_page_cleaners &#x3D; 4</span><br><span class="line">innodb_max_dirty_pages_pct &#x3D; 50</span><br><span class="line">innodb_flush_method &#x3D; O_DIRECT</span><br><span class="line">innodb_checksum_algorithm &#x3D; crc32</span><br><span class="line">innodb_rollback_on_timeout &#x3D; 1</span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1</span><br><span class="line">innodb_file_per_table &#x3D; 1</span><br><span class="line">innodb_online_alter_log_max_size &#x3D; 4G</span><br><span class="line">innodb_stats_on_metadata &#x3D; 0</span><br><span class="line">innodb_checksums &#x3D; 1</span><br><span class="line">innodb_undo_logs &#x3D; 128</span><br><span class="line">innodb_status_file &#x3D; 1</span><br><span class="line">innodb_status_output &#x3D; 0</span><br><span class="line">innodb_status_output_locks &#x3D; 0</span><br><span class="line">innodb_large_prefix &#x3D; 1</span><br><span class="line">innodb_thread_concurrency &#x3D; 0</span><br><span class="line">innodb_sync_spin_loops &#x3D; 100</span><br><span class="line">innodb_spin_wait_delay &#x3D; 30</span><br><span class="line">innodb_open_files &#x3D; 655350  </span><br><span class="line">innodb_strict_mode &#x3D; 1</span><br><span class="line">innodb_sort_buffer_size &#x3D; 67108864 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_innodb&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_server&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_dml&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ddl&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_trx&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_os&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_purge&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_log&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_lock&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_index&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ibuf_system&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer_page&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_adaptive_hash&quot;</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>配置环境变量 vim /etc/profile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;lib64&#x2F;qt-3.3&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;root&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin</span><br></pre></td></tr></table></figure><p>加载配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; cd &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">shell&gt; bin&#x2F;mysqld  --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F; --datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F; --user&#x3D;mysql  --initialize</span><br><span class="line">shell&gt; cp support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysql.server</span><br></pre></td></tr></table></figure><p>初始化数据库（为了安全管理，root账号只能本机登陆）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; &#x2F;etc&#x2F;init.d&#x2F;mysql.server start&#x2F;stop</span><br><span class="line">#启动&#x2F;关闭mysql</span><br><span class="line">shell&gt; cat &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;error.log|grep pass</span><br><span class="line">#查询的密码是第一次登陆的密码</span><br><span class="line">mysql -u root -p</span><br><span class="line">#密码为cat到的密码</span><br><span class="line">root@dev-data-01 15:49:  [(none)]&gt; set password&#x3D;&#39;123456&#39;;</span><br><span class="line">#进入数据库第一次需要修改密码</span><br><span class="line"></span><br><span class="line">添加超级管理员并且支持远程登陆</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;admin&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39; WITH GRANT OPTION;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="至此，mysql安装已完成"><a href="#至此，mysql安装已完成" class="headerlink" title="至此，mysql安装已完成"></a>至此，mysql安装已完成</h1><p>有建议或疑问欢迎留言</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqldump-sql-format.html" target="_blank" rel="noopener">mysql官方文档</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费申请证书的方法</title>
      <link href="/2020/04/30/ssl/ssl-request/"/>
      <url>/2020/04/30/ssl/ssl-request/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="申请地址"><a href="#申请地址" class="headerlink" title="申请地址"></a>申请地址</h1><p><a href="https://freessl.cn/" target="_blank" rel="noopener">https://freessl.cn/</a></p><h1 id="申请步骤"><a href="#申请步骤" class="headerlink" title="申请步骤"></a>申请步骤</h1><h2 id="选择需要申请SSL证书域名"><a href="#选择需要申请SSL证书域名" class="headerlink" title="选择需要申请SSL证书域名"></a>选择需要申请SSL证书域名</h2><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL01.jpg"  alt="SSL01.jpg"></p><h2 id="选择证书类型并创建"><a href="#选择证书类型并创建" class="headerlink" title="选择证书类型并创建"></a>选择证书类型并创建</h2><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL02.jpg"  alt="SSL02.jpg"></p><h2 id="下载KeyManager客户端"><a href="#下载KeyManager客户端" class="headerlink" title="下载KeyManager客户端"></a>下载KeyManager客户端</h2><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL03.jpg"  alt="SSL03.jpg"></p><h2 id="DNS验证"><a href="#DNS验证" class="headerlink" title="DNS验证"></a>DNS验证</h2><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL04.jpg"  alt="SSL04.jpg"></p><h2 id="导出证书"><a href="#导出证书" class="headerlink" title="导出证书"></a>导出证书</h2><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL05.jpg"  alt="SSL05.jpg"></p><h1 id="配置证书"><a href="#配置证书" class="headerlink" title="配置证书"></a>配置证书</h1><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p>解压证书并放到服务器文件里，解压完的文件有2个:xxx.crt、xxx.key</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL06.jpg"  alt="SSL06.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx CA]#cd &#x2F;CA</span><br><span class="line">[root@nginx CA]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 3570 Apr 30 14:15 xxx.crt</span><br><span class="line">-rw-r--r-- 1 root root 1679 Apr 30 14:15 xxx.key</span><br></pre></td></tr></table></figure><p>配置nginx.conf 添加此证书</p><pre><code>server {    listen       443 ssl http2;    server_name  xxx.com;    root         /usr/share/nginx/html;    ssl_certificate &quot;/ca/xxx.crt&quot;;    ssl_certificate_key &quot;/ca/xxx.key&quot;;    ssl_session_cache shared:SSL:1m;    ssl_session_timeout  10m;    ssl_ciphers HIGH:!aNULL:!MD5;    ssl_prefer_server_ciphers on;    include /etc/nginx/default.d/*.conf;    location / {        proxy_pass http://172.31.22.31:8082;        proxy_set_header   Host             $proxy_host;        proxy_set_header   X-Real-IP        $remote_addr;        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;        proxy_set_header   X-Forwarded-Host $host;        proxy_set_header   X-Forwarded-Server $host;        client_max_body_size 100m;        client_body_buffer_size 100m;    }    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}</code></pre><p>添加完成后需要重启nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><h2 id="kubernetes集群添加证书"><a href="#kubernetes集群添加证书" class="headerlink" title="kubernetes集群添加证书"></a>kubernetes集群添加证书</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@dev-master-01 CA]#cd &#x2F;CA</span><br><span class="line">[root@dev-master-01 CA]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 3570 Apr 30 14:15 xxx.crt</span><br><span class="line">-rw-r--r-- 1 root root 1679 Apr 30 14:15 xxx.key</span><br><span class="line"></span><br><span class="line">kubectl create secret tls xxx.com --cert&#x3D;xxx.crt --key&#x3D;xxx.key</span><br></pre></td></tr></table></figure><h2 id="腾讯云平台添加证书"><a href="#腾讯云平台添加证书" class="headerlink" title="腾讯云平台添加证书"></a>腾讯云平台添加证书</h2><p>登陆腾讯云<br><a href="https://console.cloud.tencent.com/ssl" target="_blank" rel="noopener">https://console.cloud.tencent.com/ssl</a><br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL07.jpg"  alt="SSL07.jpg"><br>上传证书保存即可</p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> SSL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql导入导出亿条数据（排坑篇）</title>
      <link href="/2020/04/28/mysql/mysql-climbing/"/>
      <url>/2020/04/28/mysql/mysql-climbing/</url>
      
        <content type="html"><![CDATA[<p>声明:这是我在大学毕业后进入第一家互联网工作学习的内容</p><hr><h1 id="背景：公司业务需要给某个活动的支付宝用户发送模板消息"><a href="#背景：公司业务需要给某个活动的支付宝用户发送模板消息" class="headerlink" title="背景：公司业务需要给某个活动的支付宝用户发送模板消息"></a>背景：公司业务需要给某个活动的支付宝用户发送模板消息</h1><p>经调查发现，此次活动的用户数量大约2亿，为了模拟生产环境，领导让我把生产库的用户信息（脱敏）拉到开发库，让开发写好程序读取数据并推送消息。</p><h2 id="排坑1：Navicat"><a href="#排坑1：Navicat" class="headerlink" title="排坑1：Navicat"></a>排坑1：Navicat</h2><p>由于我对Mysql不是很了解，在数据同步前我事先问了下公司的DBA应该如何操作：使用navicat的数据传输功能。</p><h3 id="环境：Navicat-Premium-12"><a href="#环境：Navicat-Premium-12" class="headerlink" title="环境：Navicat Premium 12"></a>环境：Navicat Premium 12</h3><ul><li>操作：</li><li>1.点击工具列表的数据传输 </li><li>2.选择源数据库及目标数据库</li><li>3.选择表（默认全表）</li><li>4.点击开始<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Mysql/1/mysql01.jpg"  alt="mysql01.jpg"></li></ul><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Mysql/1/mysql02.jpg"  alt="mysql02.jpg"></p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Mysql/1/mysql03.jpg"  alt="mysql03.jpg"></p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><p>数据传输速度大约1分钟20w条数据，传完大概得8个多小时，我挂机了一段时间后再看进度发现数据传输到百分之11的时候失败了，报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Multi-statement transaction required more than ‘max_binlog_cache_size’ bytes of storage; increase this mysqld variable and try again</span><br></pre></td></tr></table></figure><p>百度之后发现<br>这是由于更新和删除的大事务会写入大量binlog，可能会造成binlog cache过小而导致执行失败。</p><p>具体解决方法为如下：</p><p>查看max_binlog_cache_size大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#39;max_binlog_cache_size&#39;;</span><br><span class="line">+-----------------------+-----------+</span><br><span class="line">| Variable_name         | Value     |</span><br><span class="line">+-----------------------+-----------+</span><br><span class="line">| max_binlog_cache_size | 134217728 |</span><br><span class="line">+-----------------------+-----------+</span><br></pre></td></tr></table></figure><p>查看该参数设置为134217728B，即128MB。</p><p>此参数可以动态修改，修改该参数为40GB。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global max_binlog_cache_size&#x3D;40*1024*1024*1024;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br></pre></td></tr></table></figure><p>为了防止数据库重启后还出现此问题，还需要在/etc/my.cnf里修改max_binlog_cache_size的值。</p><h2 id="排坑2：mysqldump"><a href="#排坑2：mysqldump" class="headerlink" title="排坑2：mysqldump"></a>排坑2：mysqldump</h2><p>由于用navicat传输速度实在过慢，听取DBA建议后直接采用mysqldump的方式。</p><p>基本用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">导出</span><br><span class="line">mysqldump -uxxx -pxx 库名   表名  &gt; bak.sql</span><br><span class="line">还原</span><br><span class="line">mysql -uxxx -pxxx 库名 &lt; bak.sql</span><br></pre></td></tr></table></figure><p>导出完之后再还原到目标数据库后出现了和上个坑一样的问题：max_binlog_cache_size过小。</p><h2 id="排坑3：select-into-outfile"><a href="#排坑3：select-into-outfile" class="headerlink" title="排坑3：select into outfile"></a>排坑3：select into outfile</h2><p>在上述问题还没找到解决方法的时候继续百度发现了还有一种方法可以解决问题。</p><p>MySQL自带的导出语句：select into outfile语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM db --可以加where条件</span><br><span class="line">INTO OUTFILE &quot;&#x2F;data&#x2F;bak.txt&quot; --导出文件位置</span><br><span class="line">FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&quot;&#39; -- 字段分割符和包含符</span><br><span class="line">LINES TERMINATED BY &#39;\n&#39;;--换行符</span><br></pre></td></tr></table></figure><p>但是在执行的时候出现报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</span><br></pre></td></tr></table></figure><p>查看官方文档，secure_file_priv参数用于限制LOAD DATA, SELECT …OUTFILE, LOAD_FILE()传到哪个指定目录。</p><ul><li>secure_file_priv 为 null 时，表示限制mysqld不允许导入或导出。</li><li>secure_file_priv 为 /tmp 时，表示限制mysqld只能在/tmp目录中执行导入导出，其他目录不能执行。</li><li>secure_file_priv 没有值时，表示不限制mysqld在任意目录的导入导出。</li></ul><p>查看secure_file_priv命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#39;%secure_file_priv%&#39;;</span><br></pre></td></tr></table></figure><p>而且此参数不能直接修改，必须在/ete/my.cnf里添加（默认没有这个参数）并且重启mysql。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secure_file_priv&#x3D;&#39;&#x2F;data&#39;</span><br></pre></td></tr></table></figure><p>然后执行完导出语句后发现又报错：文件权限不足，原因是data文件夹是root所有，而mysql导出到文件的执行者为mysql用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 &#x2F;data</span><br></pre></td></tr></table></figure><p>赋权后导出文件终于没问题了，然后再执行导入文件的的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">load data infile &#39;&#x2F;data&#x2F;bak.txt&#39; --默认指定服务器文件夹</span><br><span class="line">ignore into table xx --允许重复记录插入</span><br><span class="line">fields terminated by &#39;,&#39;  --判断字段通过逗号标识来分隔开</span><br><span class="line">lines terminated by &#39;\n&#39;(CustID,DeviceNo,logintype);--通过换行标识来解析成为每一条数据和插入到我指定的字段</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>2亿多条数据的文件29G，导出速度最快的还是mysqldump方法，但是导入最稳定的我认为还是select into outfile方法，因为容错高，mysqldump的文件就一句insert（29G<br>的数据），执行失败就浪费了太多时间，但是select into outfile即使执行失败也能插入执行成功的数据（要是一条都没插进去当我没说- -）不会太浪费时间。最后提醒大家，大数据量的传输千万不要用navicat，很容易假死。最后补一句：太依赖可视化界面的软件很难成长起来，以后我尽量进服务器敲命令。</p><p>任务总算完成了，花了不少时间，趁机补习了好多mysql的知识，对于上面的问题其实还有优化的思路，只不过没时间去实验了，如果有幸看到我的博客并且也出现了我遇到的问题可以尝试下我的想法。</p><ul><li>临时关闭binlog日志。</li><li>如果你的目标表数据为空，可以先删索引，再导入数据，最后再加上索引。</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/qq_21108311/java/article/details/82559119" target="_blank" rel="noopener">MySQL 亿级数据导入导出/数据迁移笔记</a></p><p><a href="https://www.cnblogs.com/gjc592/p/12774209.html" target="_blank" rel="noopener">mysql参数max_binlog_cache_size设置不当引发的血案</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqldump-sql-format.html" target="_blank" rel="noopener">mysql官方文档</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据备份 </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
