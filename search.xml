<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>离线安装Mysql5.7.28及调优</title>
      <link href="/2020/05/01/mysql/mysql-install/"/>
      <url>/2020/05/01/mysql/mysql-install/</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>操作系统centos7.6</li><li>机器性能32C 64G 外挂2TSSD到/data目录（数据库建议外挂磁盘）  </li><li>mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz</li><li>下载链接</li><li><a href="https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz" target="_blank" rel="noopener">https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz</a></li><li>百度网盘链接</li><li><a href="https://pan.baidu.com/s/1cadkpE_lDtaStWxUv17-QQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1cadkpE_lDtaStWxUv17-QQ</a>  提取码 54rl</li></ul><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; groupadd mysql</span><br><span class="line">shell&gt; useradd -r -g mysql -s &#x2F;bin&#x2F;false mysql</span><br><span class="line">shell&gt; mkdir -vp &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;&#123;data,logs,tmp&#125;</span><br><span class="line">shell&gt; mkdir -vp &#x2F;opt&#x2F;mysql</span><br><span class="line">shell&gt; cd &#x2F;opt&#x2F;mysql&#x2F;</span><br><span class="line">shell&gt; tar zxvf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">shell&gt; cd &#x2F;usr&#x2F;local</span><br><span class="line">shell&gt; ln -s &#x2F;opt&#x2F;mysql&#x2F;mysql-5.7.28-linux-glibc2.12-x86_64  mysql</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>里面的参数都是在适用于本文环境准备机器配置的基础上调优后的结果，如果你想安装Mysql的机器配置与于本文环境准备机器配置相差很大请不要盲目复制，请看下面3大配置项内容里具体参数的讲解，太长不看可以直接看总结的配置文件。</p><h4 id="客户端默认设置内容"><a href="#客户端默认设置内容" class="headerlink" title="客户端默认设置内容"></a>客户端默认设置内容</h4><ul><li>socket 可以根据实际磁盘挂载的目录进行调整<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[client]   #客户端默认设置内容</span><br><span class="line"></span><br><span class="line">user&#x3D;root</span><br><span class="line">password&#x3D;123456</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">socket &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;mysql.sock </span><br><span class="line">#避免MySQL的外部锁定，减少出错几率增强稳定性。</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用mysql命令登录mysql数据库时的默认设置"><a href="#使用mysql命令登录mysql数据库时的默认设置" class="headerlink" title="使用mysql命令登录mysql数据库时的默认设置"></a>使用mysql命令登录mysql数据库时的默认设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[mysql]  #代表我们使用mysql命令登录mysql数据库时的默认设置</span><br><span class="line"></span><br><span class="line">#参数对于做运维的人来说很重要。我们登入mysql数据库后，mysql的提示符只是一个很简单内容 mysql&gt;,没有其他任何信息。通过--prompt&#x3D;name可以自定义提示信息，通过配置显示登入的主机地址，登陆用户名，当前时间，当前数据库schema等待。个人强烈要求加上登入主机名，登陆用户名，当前库这三项加入提示内容。</span><br><span class="line">prompt&#x3D;&quot;\u@dev-data-01 \R:\m:\s [\d]&gt; &quot; </span><br><span class="line">#自动补全的意思，就像我们在linux命令行里输入命令的时候，使用tab键的功能是一样的</span><br><span class="line">no-auto-rehash </span><br><span class="line">#utf8mb4兼容utf8，且比utf8能表示更多的字符，是utf8字符集的超集。</span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br></pre></td></tr></table></figure><h4 id="数据库自身的默认设置"><a href="#数据库自身的默认设置" class="headerlink" title="数据库自身的默认设置"></a>数据库自身的默认设置</h4><p>数据库自身配置分为4项 </p><ul><li><p>basic settings    </p></li><li><p>log settings</p></li><li><p>replication settings</p></li><li><p>innodb settings</p></li></ul><h5 id="basic-settings"><a href="#basic-settings" class="headerlink" title="basic settings"></a>basic settings</h5><ul><li><p>datadir 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>socket 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>secure_file_priv 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>skip_name_resolve  如果你的mysql主机查询DNS很慢或是有很多客户端主机时会导致连接很慢，是因为开发的机器是不能够连接外网的，所以DNS解析是不可能完成的，这时就需要禁用</p></li><li><p>external-locking 如果是单机部署需要禁用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]  #代表数据库自身的默认设置</span><br><span class="line">########basic settings########</span><br><span class="line">user    &#x3D; mysql</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">datadir &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data</span><br><span class="line">socket  &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;mysql.sock</span><br><span class="line"></span><br><span class="line">#该变量的值是ON或 OFF指示是否启用了性能模式。</span><br><span class="line">performance_schema &#x3D; 1</span><br><span class="line">#服务器安装时指定的默认字符集设定。</span><br><span class="line">character_set_server&#x3D;utf8mb4   </span><br><span class="line">#操作系统允许mysqld打开的文件数量。</span><br><span class="line">open_files_limit &#x3D; 655350  </span><br><span class="line">#参数是用来限制LOAD DATA, SELECT ... OUTFILE, and LOAD_FILE()传到哪个指定目录的，不配置不能用这个命令导出文件。</span><br><span class="line">secure_file_priv&#x3D;&#x2F;data</span><br><span class="line">#事务隔离级别为READ COMMITTED。</span><br><span class="line">transaction_isolation &#x3D; READ-COMMITTED</span><br><span class="line">#针对交互式连接服务器关闭连接前等待活动的秒数，例如mysql客户端连接数据库。</span><br><span class="line">interactive_timeout &#x3D; 31536000</span><br><span class="line">#针对非交互式连接服务器关闭连接前等待活动的秒数，例如通过jdbc连接数据库。</span><br><span class="line">wait_timeout &#x3D; 31536000</span><br><span class="line">#客户端连接是否解析主机名。0，mysqld在检查客户端连接时解析主机名；1，mysqld仅使用IP编号。</span><br><span class="line">skip_name_resolve &#x3D; 1  </span><br><span class="line">#说明是否数据目录所在的文件系统对文件名的大小写敏感。1说明对文件名的大小写不敏感。</span><br><span class="line">lower_case_table_names&#x3D;1    </span><br><span class="line">#在MySQL暂时停止回答新请求之前的短时间内可以堆叠多少个请求。仅当您期望在短时间内有大量连接时，才需要增加此数量。</span><br><span class="line">back_log &#x3D; 1024</span><br><span class="line">#指定MySQL允许的最大连接进程数。如果在访问论坛时经常出现Too Many Connections的错误提示，则需要增大该参数值。</span><br><span class="line">max_connections &#x3D; 10240    </span><br><span class="line">#如果MySQL服务器连续接收到来自同一主机的请求且都被拒绝，次数超过max_connect_errors的设定值时，MySQL服务器就会阻止这台主机后续的所有请求。</span><br><span class="line">max_connect_errors &#x3D; 1000000</span><br><span class="line">#表文件描述符的缓存大小。</span><br><span class="line">table_open_cache &#x3D; 20480</span><br><span class="line">#可以存储在定义高速缓存中的表定义（来自文件）的数量 。</span><br><span class="line">table_definition_cache &#x3D; 20480</span><br><span class="line">#打开表缓存实例的数量。</span><br><span class="line">table_open_cache_instances &#x3D; 64</span><br><span class="line">#每个线程的堆栈大小。</span><br><span class="line">thread_stack &#x3D; 512K</span><br><span class="line">#跳过外部锁定。如果是单服务器环境，则将其禁用即可,如果是多服务器环境,则注释掉这一行即可。</span><br><span class="line">external-locking &#x3D; FALSE</span><br><span class="line">#限制server接受的数据包大小。</span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line">#每个必须执行排序的会话都会分配此大小的缓冲区。</span><br><span class="line">sort_buffer_size &#x3D; 4M</span><br><span class="line">#用于普通索引扫描，范围索引扫描和不使用索引的联接的缓冲区的最小大小，从而执行全表扫描。</span><br><span class="line">join_buffer_size &#x3D; 4M</span><br><span class="line">#服务器应缓存多少线程以供重用。</span><br><span class="line">thread_cache_size &#x3D; 15360</span><br><span class="line">#内部内存临时表的最大大小。</span><br><span class="line">tmp_table_size &#x3D; 32M</span><br><span class="line">#此变量设置MEMORY允许用户创建的表增长到的最大大小。变量的值用于计算MEMORY表MAX_ROWS值。</span><br><span class="line">max_heap_table_size &#x3D; 32M</span><br><span class="line">#此变量指定尝试获取元数据锁定的超时（以秒为单位）。</span><br><span class="line">lock_wait_timeout &#x3D; 3600</span><br><span class="line">#此变量确定服务器对列中的默认值和NULL-value处理启用某些非标准行为TIMESTAMP。</span><br><span class="line">explicit_defaults_for_timestamp &#x3D; 1</span><br><span class="line">#每个必须执行排序的会话都会分配此大小的缓冲区。</span><br><span class="line">sort_buffer_size &#x3D; 33554432</span><br></pre></td></tr></table></figure></li></ul><h5 id="log-settings"><a href="#log-settings" class="headerlink" title="log settings"></a>log settings</h5><ul><li><p>slow_query_log_file 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>log-bin 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>log-error 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>long_query_time 俗称定义慢sql的标准,可以根据实际项目定义具体标准</p></li><li><p>log_throttle_queries_not_using_indexes需要log_queries_not_using_indexes启用</p></li><li><p>expire_logs_days Binlog 自动清理时间</p></li><li><p>max_binlog_cache_size 推荐的最大值为4GB。这是由于MySQL当前无法使用大于4GB的二进制日志位置。</p></li><li><p>binlog_format 在MySQL 5.7.7和更高版本中，默认值为ROW。</p></li><li><p>sync_binlog=1：启用在提交事务之前将二进制日志同步到磁盘。这是最安全的设置，但由于磁盘写入次数增加，可能会对性能产生负面影响。</p></li><li><p>sync_binlog=0：禁用MySQL服务器将二进制日志同步到磁盘的功能。取而代之的是，MySQL服务器依靠操作系统不时地将二进制日志刷新到磁盘上，就像处理其他任何文件一样。此设置提供最佳性能，但是在电源故障或操作系统崩溃的情况下，服务器可能提交了尚未同步到二进制日志的事务。</p></li><li><p>sync_binlog=N，其中N的值不是0或1：是N二进制日志提交组已收集之后，二进制日志将同步到磁盘 。在电源故障或操作系统崩溃的情况下，服务器可能提交了尚未刷新到二进制日志的事务。由于磁盘写入次数的增加，此设置可能会对性能产生负面影响。较高的值可以提高性能，但会增加数据丢失的风险。</p></li><li><p>为了在InnoDB与事务一起使用的复制设置中获得最大的持久性和一致性，请使用以下设置：sync_binlog=1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">########log settings########</span><br><span class="line">#是否启用慢速查询日志。该值可以是0（或OFF）以禁用日志，也可以是 1（或 ON）以启用日志。</span><br><span class="line">slow_query_log &#x3D; 1</span><br><span class="line">#慢查询日志文件的名称</span><br><span class="line">slow_query_log_file &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;slow.log</span><br><span class="line">#此变量控制写入错误日志的消息以及通常写入文件的查询日志和慢速查询日志消息中时间戳的时区。设置为SYSTEM（本地系统时区）。</span><br><span class="line">log_timestamps &#x3D; SYSTEM</span><br><span class="line">#错误日志输出目标。如果目标是控制台，则值为stderr。否则，目标是文件，log_error值是文件名。</span><br><span class="line">log-error &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;error.log</span><br><span class="line">#如果查询所花的时间超过许多秒，则服务器将增加Slow_queries状态变量,如果启用了慢查询日志，则查询将记录到慢查询日志文件中。俗称定义慢sql的标准</span><br><span class="line">long_query_time &#x3D; 1</span><br><span class="line">#如果在启用慢查询日志的情况下启用此变量，则会记录预期将检索所有行的查询。</span><br><span class="line">log_queries_not_using_indexes &#x3D;1</span><br><span class="line">#如果 log_queries_not_using_indexes启用，该变量将限制每分钟可写入慢速查询日志的此类查询的数量。</span><br><span class="line">log_throttle_queries_not_using_indexes &#x3D; 60</span><br><span class="line">#检查少于此行数的查询不会记录到慢查询日志中。</span><br><span class="line">min_examined_row_limit &#x3D; 100</span><br><span class="line">#开启后，在写入慢速查询日志的语句中包括慢速管理语句，包括ALTER TABLE， ANALYZE TABLE， CHECK TABLE， CREATE INDEX， DROP INDEX， OPTIMIZE TABLE，和 REPAIR TABLE。</span><br><span class="line">log_slow_admin_statements &#x3D; 1</span><br><span class="line">#启用慢速查询日志后，此变量将启用日志记录，以记录long_query_time在从属服务器上执行了超过几秒钟的查询 。</span><br><span class="line">log_slow_slave_statements &#x3D; 1</span><br><span class="line">#binlog7天自动清理</span><br><span class="line">expire_logs_days &#x3D; 7</span><br><span class="line">#是否对错误日志生成其他警告消息。</span><br><span class="line">log_warnings &#x3D; 1</span><br><span class="line">#启用二进制日志记录。启用二进制日志记录后，服务器会将所有更改数据的语句记录到二进制日志中，该日志用于备份和复制。</span><br><span class="line">log-bin &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;logs&#x2F;mybinlog</span><br><span class="line">#在事务期间，用于保存对二进制日志的更改的缓存的大小。</span><br><span class="line">binlog_cache_size &#x3D; 4M</span><br><span class="line">#如果事务需要的内存字节数超过此数量，则服务器将生成多语句事务，而该语句需要的存储数超过“max_binlog_cache_size”字节。</span><br><span class="line">max_binlog_cache_size &#x3D; 4G</span><br><span class="line">#如果对二进制日志的写入导致当前日志文件的大小超过此变量的值，则服务器将旋转二进制日志（关闭当前文件并打开下一个日志）。</span><br><span class="line">max_binlog_size &#x3D; 1G</span><br><span class="line">#启用后，此变量使主服务器在二进制日志中为每个事件写入一个校正和。</span><br><span class="line">binlog_checksum &#x3D; 1</span><br><span class="line">#此变量设置二进制日志格式，并且可以是任何一个STATEMENT，ROW或MIXED。</span><br><span class="line">binlog_format &#x3D; row</span><br><span class="line">#控制MySQL服务器将二进制日志同步到磁盘的频率。</span><br><span class="line">sync_binlog &#x3D; 1</span><br></pre></td></tr></table></figure></li></ul><h5 id="replication-settings"><a href="#replication-settings" class="headerlink" title="replication settings"></a>replication settings</h5><p>如果你不搭建主从集群可以跳过这项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">########replication settings########</span><br><span class="line">#服务器ID。在主服务器和每个从属服务器上，必须设置server_id系统变量以在1到2 32 − 1 的范围内建立唯一的复制ID 。</span><br><span class="line">server-id &#x3D; 213306</span><br><span class="line">#此变量的设置确定从属服务器是将主服务器状态和连接信息记录到FILE（master.info）还是TABLE （mysql.slave_master_info）上。仅当没有复制线程正在执行时，才能更改此变量的值。</span><br><span class="line">master_info_repository &#x3D; TABLE</span><br><span class="line">#该变量确定从站在继电器日志中的位置是写入FILE（relay-log.info）还是写入TABLE（mysql.slave_relay_log_info）。仅当没有复制线程正在执行时，才能更改此变量的值。</span><br><span class="line">relay_log_info_repository &#x3D; TABLE</span><br><span class="line">#控制是否启用基于GTID的日志记录以及日志可以包含的事务类型。</span><br><span class="line">gtid_mode &#x3D; on</span><br><span class="line">#根据此变量的值，服务器通过仅允许执行可以使用GTID安全记录的语句来实现GTID一致性。</span><br><span class="line">enforce-gtid-consistency &#x3D; on</span><br><span class="line">#从服务器从主服务器收到的更新是否应记录到从服务器自己的二进制日志中。</span><br><span class="line">log_slave_updates  &#x3D; on</span><br><span class="line">根据此变量的值，服务器通过仅允许执行可以使用GTID安全记录的语句来实现GTID一致性。</span><br><span class="line">enforce_gtid_consistency &#x3D; 1</span><br><span class="line">#中继日志文件的基本名称。</span><br><span class="line">relay_log &#x3D; relay.log</span><br><span class="line">#如果启用，此变量将在服务器启动后立即启用自动中继日志恢复。</span><br><span class="line">relay_log_recovery &#x3D; 1</span><br><span class="line">#一旦不再需要中继日志文件，则禁用或启用它们的自动清除。</span><br><span class="line">relay-log-purge &#x3D; 1</span><br><span class="line">#此变量控制MySQL启动或重新启动时在搜索GTID期间如何迭代二进制日志文件。</span><br><span class="line">binlog_gtid_simple_recovery &#x3D; 1</span><br><span class="line">#通常，当从属服务器发生错误时，复制会停止，这使您有机会手动解决数据中的不一致问题。</span><br><span class="line">slave_skip_errors &#x3D; ddl_exist_errors</span><br><span class="line">#在为基础行的日志记录和复制准备副本行时，此变量控制如何在行中搜索匹配项，特别是是否使用哈希扫描。  </span><br><span class="line">slave-rows-search-algorithms &#x3D; &#39;INDEX_SCAN,HASH_SCAN&#39;</span><br></pre></td></tr></table></figure><h5 id="innodb-settings"><a href="#innodb-settings" class="headerlink" title="innodb settings"></a>innodb settings</h5><ul><li><p>innodb_undo_directory 可以根据实际磁盘挂载的目录进行调整</p></li><li><p>innodb_buffer_pool_size 如果机器内存较低，可以将此参数调低。参数是动态的，它允许您在不重新启动服务器的情况下调整缓冲池的大小。</p></li><li><p>innodb_buffer_pool_instances 此选项仅在设置innodb_buffer_pool_size为1GB或更大时才生效 。总缓冲池大小在所有缓冲池之间分配。为了获得最佳效率，指定的组合 innodb_buffer_pool_instances 和innodb_buffer_pool_size ，使得每个缓冲池实例是至少为1GB。</p></li><li><p>innodb_log_file_size  通常，日志文件的总大小应足够大，以使服务器可以消除工作负载活动中的高峰和低谷，这通常意味着有足够的重做日志空间来处理一个小时以上的写活动。值越大，缓冲池中需要的检查点刷新活动越少，从而节省了磁盘I / O。</p></li><li><p>innodb_io_capacity、innodb_io_capacity_max  根据服务器IOPS能力适当调整，一般配普通SSD盘的话，可以调整到 10000 - 20000，配置高端PCIe SSD卡的话，则可以调整的更高，比如 50000 - 80000</p></li><li><p>innodb_lru_scan_depth 小于默认值（    1024）的设置通常适用于大多数工作负载。高于必要值的值可能会影响性能。仅在典型工作负载下具有备用I / O容量时，才考虑增加该值。相反，如果写密集型工作负载使您的I / O容量饱和，请减小该值，尤其是在大型缓冲池的情况下。</p></li><li><p>innodb_status_output、innodb_status_output_locks 开启可能会导致log-error文件增长较快</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">########innodb settings########</span><br><span class="line">#磁盘上内部临时表的存储引擎。允许的值为MYISAM和INNODB （默认值）。</span><br><span class="line">internal_tmp_disk_storage_engine &#x3D; InnoDB</span><br><span class="line">#指定InnoDB表的大小。</span><br><span class="line">innodb_page_size &#x3D; 8192</span><br><span class="line">#innodb_buffer_pool_chunk_size定义InnoDB缓冲池大小调整操作的块大小</span><br><span class="line">innodb_buffer_pool_size &#x3D; 40960m</span><br><span class="line"># InnoDB 池缓冲划分为的区域数。 </span><br><span class="line">innodb_buffer_pool_instances &#x3D; 4</span><br><span class="line">#指定在MySQL服务器启动时，通过加载先前保存的相同页面来自动预热InnoDB 缓冲池。</span><br><span class="line">innodb_buffer_pool_load_at_startup &#x3D; 1</span><br><span class="line">#指定在关闭MySQL服务器时是否记录InnoDB缓冲池中缓存的页面，以缩短下次重启时的预热过程。</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown &#x3D; 1</span><br><span class="line">#定义InnoDB系统表空间数据文件的名称，大小和属性 。</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:1G:autoextend</span><br><span class="line">#每秒钟写入并刷新日志N。。</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line">#InnoDB 用于写入磁盘上的日志文件的缓冲区的大小。</span><br><span class="line">innodb_log_buffer_size &#x3D; 32M</span><br><span class="line">#在每个字节大小日志文件在日志组。</span><br><span class="line">innodb_log_file_size &#x3D; 1G</span><br><span class="line">#日志文件中日志组数量，InnoDB以循环方式写入文件。</span><br><span class="line">innodb_log_files_in_group &#x3D; 4</span><br><span class="line">#定义撤消表空间的阈值大小。</span><br><span class="line">innodb_max_undo_log_size &#x3D; 4G</span><br><span class="line">#InnoDB创建撤消表空间 的路径。通常用于将撤消日志放置在其他存储设备上。</span><br><span class="line">innodb_undo_directory &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;undolog</span><br><span class="line">#所使用的撤消表空间的InnoDB数量。</span><br><span class="line">innodb_undo_tablespaces &#x3D; 95</span><br><span class="line">#变量定义了可用于InnoDB后台任务的IOPS，例如从缓冲池刷新页面和合并来自更改缓冲区的数据。</span><br><span class="line">innodb_io_capacity &#x3D; 2000</span><br><span class="line">#如果刷新较慢，则InnoDB可以比innodb_io_capacity变量定义更高的IOPS更积极地进行刷新。</span><br><span class="line">innodb_io_capacity_max &#x3D; 4000</span><br><span class="line">#0为遵守innodb_io_capacity定义 1为不遵守innodb_io_capacity定义 。</span><br><span class="line">innodb_flush_sync &#x3D; 0</span><br><span class="line">#指定是否冲洗从一个页面InnoDB 缓冲池也可以清空其他脏页在相同的程度。</span><br><span class="line">innodb_flush_neighbors &#x3D; 0</span><br><span class="line">#一个影响缓冲池刷新操作的算法和启发式方法的参数。</span><br><span class="line">innodb_lru_scan_depth &#x3D; 4000</span><br><span class="line">#InnoDB 事务在放弃之前等待行锁定的时间长度（以秒为单位）。</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 5</span><br><span class="line">#写入操作的I &#x2F; O线程数 InnoDB。</span><br><span class="line">innodb_write_io_threads &#x3D; 8</span><br><span class="line">#读取操作的I &#x2F; O线程数 InnoDB。</span><br><span class="line">innodb_read_io_threads &#x3D; 8</span><br><span class="line">#专用于InnoDB清除操作的后台线程数 。</span><br><span class="line">innodb_purge_threads &#x3D; 4</span><br><span class="line">#从缓冲池实例中刷新脏页面的页面清洁程序线程数。</span><br><span class="line">innodb_page_cleaners &#x3D; 4</span><br><span class="line">#InnoDB尝试从缓冲池刷新数据，使脏页百分比不超过此值。</span><br><span class="line">innodb_max_dirty_pages_pct &#x3D; 50</span><br><span class="line">#定义用于将数据刷新到InnoDB数据文件和日志文件的方法，这会影响I&#x2F;O吞吐量。</span><br><span class="line">innodb_flush_method &#x3D; O_DIRECT</span><br><span class="line">#指定如何生成和验证存储在表空间的磁盘块中的校验。</span><br><span class="line">innodb_checksum_algorithm &#x3D; crc32</span><br><span class="line">#InnoDB 默认情况下，仅回滚事务超时上的最后一条语句。</span><br><span class="line">innodb_rollback_on_timeout &#x3D; 1</span><br><span class="line">#当启用该选项，所有信息死锁在InnoDB用户交易被记录在 mysqld 错误日志。</span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1</span><br><span class="line">#当innodb_file_per_table启用时，在文件的每个表的表空间默认创建的表。</span><br><span class="line">innodb_file_per_table &#x3D; 1</span><br><span class="line">#指定在表的在线DDL操作期间使用的临时日志文件的大小的上限（以字节为单位）InnoDB。</span><br><span class="line">innodb_online_alter_log_max_size &#x3D; 4G</span><br><span class="line">#仅当优化器统计信息配置为非持久性时，此选项才适用 。</span><br><span class="line">innodb_stats_on_metadata &#x3D; 0</span><br><span class="line">#InnoDB可以在从磁盘读取的所有表空间页上使用校验和验证，以确保对硬件故障或损坏的数据文件具有额外的容错能力。</span><br><span class="line">innodb_checksums &#x3D; 1</span><br><span class="line">#定义所使用的回滚段数 InnoDB。</span><br><span class="line">innodb_undo_logs &#x3D; 128</span><br><span class="line">##启用InnoDB的status file，便于管理员查看以及监控等</span><br><span class="line">innodb_status_file &#x3D; 1</span><br><span class="line">#启用或禁用标准InnoDBMonitor的定期输出。</span><br><span class="line">innodb_status_output &#x3D; 0</span><br><span class="line">#启用或禁用InnoDB锁定监视器</span><br><span class="line">innodb_status_output_locks &#x3D; 0</span><br><span class="line">#启用此选项后InnoDB，使用DYNAMIC 或 COMPRESSED 行格式的表 允许长度超过767字节（最大3072字节）的索引键前缀 。</span><br><span class="line">innodb_large_prefix &#x3D; 1</span><br><span class="line">#InnoDB尝试使内部并发的操作系统线程数保持InnoDB小于或等于此变量给定的限制（InnoDB使用操作系统线程来处理用户事务）值0（默认值）被解释为无限并发（不进行并发检查）</span><br><span class="line">innodb_thread_concurrency &#x3D; 0</span><br><span class="line">#InnoDB线程在挂起线程之前 等待 互斥量释放的次数。</span><br><span class="line">innodb_sync_spin_loops &#x3D; 100</span><br><span class="line">#自旋锁定的 两次轮询之间的最大延迟 </span><br><span class="line">innodb_spin_wait_delay &#x3D; 30</span><br><span class="line">#指定MySQL可同时打开.ibd文件的最大个数，最小为10，默认300。此选项只针对InnoDB表打开的.ibd文件描述符，独立于open_files_limit。</span><br><span class="line">innodb_open_files &#x3D; 655350  </span><br><span class="line">#当innodb_strict_mode启用时，InnoDB将返回错误，而不是警告了一定的条件。</span><br><span class="line">innodb_strict_mode &#x3D; 1</span><br><span class="line">#指定在创建InnoDB索引期间用于对数据进行排序的排序缓冲区的大小。</span><br><span class="line">innodb_sort_buffer_size &#x3D; 67108864 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#innodb monitor</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_innodb&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_server&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_dml&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ddl&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_trx&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_os&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_purge&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_log&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_lock&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_index&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ibuf_system&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer_page&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_adaptive_hash&quot;</span><br></pre></td></tr></table></figure></li></ul><h4 id="总结配置文件"><a href="#总结配置文件" class="headerlink" title="总结配置文件"></a>总结配置文件</h4><p>vim /etc/my.cnf<br>复制粘贴下面的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line">[client]   #客户端默认设置内容</span><br><span class="line">user&#x3D;root</span><br><span class="line">password&#x3D;123456</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">socket &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;mysql.sock </span><br><span class="line">#避免MySQL的外部锁定，减少出错几率增强稳定性。</span><br><span class="line"></span><br><span class="line">[mysql]  #代表我们使用mysql命令登录mysql数据库时的默认设置</span><br><span class="line">#参数对于做运维的人来说很重要。我们登入mysql数据库后，mysql的提示符只是一个很简单内容 mysql&gt;,没有其他任何信息。通过--prompt&#x3D;name可以自定义提示信息，通过配置显示登入的主机地址，登陆用户名，当前时间，当前数据库schema等待。个人强烈要求加上登入主机名，登陆用户名，当前库这三项加入提示内容。</span><br><span class="line">prompt&#x3D;&quot;\u@dev-data-01 \R:\m:\s [\d]&gt; &quot; </span><br><span class="line">#自动补全的意思，就像我们在linux命令行里输入命令的时候，使用tab键的功能是一样的</span><br><span class="line">no-auto-rehash </span><br><span class="line">#utf8mb4兼容utf8，且比utf8能表示更多的字符，是utf8字符集的超集。</span><br><span class="line">default-character-set&#x3D;utf8mb4  </span><br><span class="line"></span><br><span class="line">[mysqld]  #代表数据库自身的默认设置</span><br><span class="line">########basic settings########</span><br><span class="line">user    &#x3D; mysql</span><br><span class="line">port    &#x3D; 3306</span><br><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">datadir &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data</span><br><span class="line">socket  &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;mysql.sock</span><br><span class="line"></span><br><span class="line">#该变量的值是ON或 OFF指示是否启用了性能模式。</span><br><span class="line">performance_schema &#x3D; 1</span><br><span class="line">#服务器安装时指定的默认字符集设定。</span><br><span class="line">character_set_server&#x3D;utf8mb4   </span><br><span class="line">#操作系统允许mysqld打开的文件数量。</span><br><span class="line">open_files_limit &#x3D; 655350  </span><br><span class="line">#参数是用来限制LOAD DATA, SELECT ... OUTFILE, and LOAD_FILE()传到哪个指定目录的，不配置不能用这个命令导出文件。</span><br><span class="line">secure_file_priv&#x3D;&#x2F;data</span><br><span class="line">#事务隔离级别为READ COMMITTED。</span><br><span class="line">transaction_isolation &#x3D; READ-COMMITTED</span><br><span class="line">#针对交互式连接服务器关闭连接前等待活动的秒数，例如mysql客户端连接数据库。</span><br><span class="line">interactive_timeout &#x3D; 31536000</span><br><span class="line">#针对非交互式连接服务器关闭连接前等待活动的秒数，例如通过jdbc连接数据库。</span><br><span class="line">wait_timeout &#x3D; 31536000</span><br><span class="line">#客户端连接是否解析主机名。0，mysqld在检查客户端连接时解析主机名；1，mysqld仅使用IP编号。</span><br><span class="line">skip_name_resolve &#x3D; 1  </span><br><span class="line">#说明是否数据目录所在的文件系统对文件名的大小写敏感。1说明对文件名的大小写不敏感。</span><br><span class="line">lower_case_table_names&#x3D;1    </span><br><span class="line">#在MySQL暂时停止回答新请求之前的短时间内可以堆叠多少个请求。仅当您期望在短时间内有大量连接时，才需要增加此数量。</span><br><span class="line">back_log &#x3D; 1024</span><br><span class="line">#指定MySQL允许的最大连接进程数。如果在访问论坛时经常出现Too Many Connections的错误提示，则需要增大该参数值。</span><br><span class="line">max_connections &#x3D; 10240    </span><br><span class="line">#如果MySQL服务器连续接收到来自同一主机的请求且都被拒绝，次数超过max_connect_errors的设定值时，MySQL服务器就会阻止这台主机后续的所有请求。</span><br><span class="line">max_connect_errors &#x3D; 1000000</span><br><span class="line">#表文件描述符的缓存大小。</span><br><span class="line">table_open_cache &#x3D; 20480</span><br><span class="line">#可以存储在定义高速缓存中的表定义（来自文件）的数量 。</span><br><span class="line">table_definition_cache &#x3D; 20480</span><br><span class="line">#打开表缓存实例的数量。</span><br><span class="line">table_open_cache_instances &#x3D; 64</span><br><span class="line">#每个线程的堆栈大小。</span><br><span class="line">thread_stack &#x3D; 512K</span><br><span class="line">#跳过外部锁定。如果是单服务器环境，则将其禁用即可,如果是多服务器环境,则注释掉这一行即可。</span><br><span class="line">external-locking &#x3D; FALSE</span><br><span class="line">#限制server接受的数据包大小。</span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line">#每个必须执行排序的会话都会分配此大小的缓冲区。</span><br><span class="line">sort_buffer_size &#x3D; 4M</span><br><span class="line">#用于普通索引扫描，范围索引扫描和不使用索引的联接的缓冲区的最小大小，从而执行全表扫描。</span><br><span class="line">join_buffer_size &#x3D; 4M</span><br><span class="line">#服务器应缓存多少线程以供重用。</span><br><span class="line">thread_cache_size &#x3D; 15360</span><br><span class="line">#内部内存临时表的最大大小。</span><br><span class="line">tmp_table_size &#x3D; 32M</span><br><span class="line">#此变量设置MEMORY允许用户创建的表增长到的最大大小。变量的值用于计算MEMORY表MAX_ROWS值。</span><br><span class="line">max_heap_table_size &#x3D; 32M</span><br><span class="line">#此变量指定尝试获取元数据锁定的超时（以秒为单位）。</span><br><span class="line">lock_wait_timeout &#x3D; 3600</span><br><span class="line">#此变量确定服务器对列中的默认值和NULL-value处理启用某些非标准行为TIMESTAMP。</span><br><span class="line">explicit_defaults_for_timestamp &#x3D; 1</span><br><span class="line">#每个必须执行排序的会话都会分配此大小的缓冲区。</span><br><span class="line">sort_buffer_size &#x3D; 33554432</span><br><span class="line"></span><br><span class="line">########log settings########</span><br><span class="line">#是否启用慢速查询日志。该值可以是0（或OFF）以禁用日志，也可以是 1（或 ON）以启用日志。</span><br><span class="line">slow_query_log &#x3D; 1</span><br><span class="line">#慢查询日志文件的名称</span><br><span class="line">slow_query_log_file &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;slow.log</span><br><span class="line">#此变量控制写入错误日志的消息以及通常写入文件的查询日志和慢速查询日志消息中时间戳的时区。设置为SYSTEM（本地系统时区）。</span><br><span class="line">log_timestamps &#x3D; SYSTEM</span><br><span class="line">#错误日志输出目标。如果目标是控制台，则值为stderr。否则，目标是文件，log_error值是文件名。</span><br><span class="line">log-error &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;error.log</span><br><span class="line">#如果查询所花的时间超过许多秒，则服务器将增加Slow_queries状态变量,如果启用了慢查询日志，则查询将记录到慢查询日志文件中。俗称定义慢sql的标准</span><br><span class="line">long_query_time &#x3D; 1</span><br><span class="line">#如果在启用慢查询日志的情况下启用此变量，则会记录预期将检索所有行的查询。</span><br><span class="line">log_queries_not_using_indexes &#x3D;1</span><br><span class="line">#如果 log_queries_not_using_indexes启用，该变量将限制每分钟可写入慢速查询日志的此类查询的数量。</span><br><span class="line">log_throttle_queries_not_using_indexes &#x3D; 60</span><br><span class="line">#检查少于此行数的查询不会记录到慢查询日志中。</span><br><span class="line">min_examined_row_limit &#x3D; 100</span><br><span class="line">#开启后，在写入慢速查询日志的语句中包括慢速管理语句，包括ALTER TABLE， ANALYZE TABLE， CHECK TABLE， CREATE INDEX， DROP INDEX， OPTIMIZE TABLE，和 REPAIR TABLE。</span><br><span class="line">log_slow_admin_statements &#x3D; 1</span><br><span class="line">#启用慢速查询日志后，此变量将启用日志记录，以记录long_query_time在从属服务器上执行了超过几秒钟的查询 。</span><br><span class="line">log_slow_slave_statements &#x3D; 1</span><br><span class="line">#binlog7天自动清理</span><br><span class="line">expire_logs_days &#x3D; 7</span><br><span class="line">#是否对错误日志生成其他警告消息。</span><br><span class="line">log_warnings &#x3D; 1</span><br><span class="line">#启用二进制日志记录。启用二进制日志记录后，服务器会将所有更改数据的语句记录到二进制日志中，该日志用于备份和复制。</span><br><span class="line">log-bin &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;logs&#x2F;mybinlog</span><br><span class="line">#在事务期间，用于保存对二进制日志的更改的缓存的大小。</span><br><span class="line">binlog_cache_size &#x3D; 4M</span><br><span class="line">#如果事务需要的内存字节数超过此数量，则服务器将生成多语句事务，而该语句需要的存储数超过“max_binlog_cache_size”字节。</span><br><span class="line">max_binlog_cache_size &#x3D; 4G</span><br><span class="line">#如果对二进制日志的写入导致当前日志文件的大小超过此变量的值，则服务器将旋转二进制日志（关闭当前文件并打开下一个日志）。</span><br><span class="line">max_binlog_size &#x3D; 1G</span><br><span class="line">#启用后，此变量使主服务器在二进制日志中为每个事件写入一个校正和。</span><br><span class="line">binlog_checksum &#x3D; 1</span><br><span class="line">#此变量设置二进制日志格式，并且可以是任何一个STATEMENT，ROW或MIXED。</span><br><span class="line">binlog_format &#x3D; row</span><br><span class="line">#控制MySQL服务器将二进制日志同步到磁盘的频率。</span><br><span class="line">sync_binlog &#x3D; 1</span><br><span class="line"></span><br><span class="line">########replication settings########</span><br><span class="line">#服务器ID。在主服务器和每个从属服务器上，必须设置server_id系统变量以在1到2 32 − 1 的范围内建立唯一的复制ID 。</span><br><span class="line">server-id &#x3D; 213306</span><br><span class="line">#此变量的设置确定从属服务器是将主服务器状态和连接信息记录到FILE（master.info）还是TABLE （mysql.slave_master_info）上。仅当没有复制线程正在执行时，才能更改此变量的值。</span><br><span class="line">master_info_repository &#x3D; TABLE</span><br><span class="line">#该变量确定从站在继电器日志中的位置是写入FILE（relay-log.info）还是写入TABLE（mysql.slave_relay_log_info）。仅当没有复制线程正在执行时，才能更改此变量的值。</span><br><span class="line">relay_log_info_repository &#x3D; TABLE</span><br><span class="line">#控制是否启用基于GTID的日志记录以及日志可以包含的事务类型。</span><br><span class="line">gtid_mode &#x3D; on</span><br><span class="line">#根据此变量的值，服务器通过仅允许执行可以使用GTID安全记录的语句来实现GTID一致性。</span><br><span class="line">enforce-gtid-consistency &#x3D; on</span><br><span class="line">#从服务器从主服务器收到的更新是否应记录到从服务器自己的二进制日志中。</span><br><span class="line">log_slave_updates  &#x3D; on</span><br><span class="line">根据此变量的值，服务器通过仅允许执行可以使用GTID安全记录的语句来实现GTID一致性。</span><br><span class="line">enforce_gtid_consistency &#x3D; 1</span><br><span class="line">#中继日志文件的基本名称。</span><br><span class="line">relay_log &#x3D; relay.log</span><br><span class="line">#如果启用，此变量将在服务器启动后立即启用自动中继日志恢复。</span><br><span class="line">relay_log_recovery &#x3D; 1</span><br><span class="line">#一旦不再需要中继日志文件，则禁用或启用它们的自动清除。</span><br><span class="line">relay-log-purge &#x3D; 1</span><br><span class="line">#此变量控制MySQL启动或重新启动时在搜索GTID期间如何迭代二进制日志文件。</span><br><span class="line">binlog_gtid_simple_recovery &#x3D; 1</span><br><span class="line">#通常，当从属服务器发生错误时，复制会停止，这使您有机会手动解决数据中的不一致问题。</span><br><span class="line">slave_skip_errors &#x3D; ddl_exist_errors</span><br><span class="line">#在为基础行的日志记录和复制准备副本行时，此变量控制如何在行中搜索匹配项，特别是是否使用哈希扫描。  </span><br><span class="line">slave-rows-search-algorithms &#x3D; &#39;INDEX_SCAN,HASH_SCAN&#39;</span><br><span class="line"></span><br><span class="line">########innodb settings########</span><br><span class="line">#磁盘上内部临时表的存储引擎。允许的值为MYISAM和INNODB （默认值）。</span><br><span class="line">internal_tmp_disk_storage_engine &#x3D; InnoDB</span><br><span class="line">#指定InnoDB表的大小。</span><br><span class="line">innodb_page_size &#x3D; 8192</span><br><span class="line">#innodb_buffer_pool_chunk_size定义InnoDB缓冲池大小调整操作的块大小</span><br><span class="line">innodb_buffer_pool_size &#x3D; 40960m</span><br><span class="line"># InnoDB 池缓冲划分为的区域数。 </span><br><span class="line">innodb_buffer_pool_instances &#x3D; 4</span><br><span class="line">#指定在MySQL服务器启动时，通过加载先前保存的相同页面来自动预热InnoDB 缓冲池。</span><br><span class="line">innodb_buffer_pool_load_at_startup &#x3D; 1</span><br><span class="line">#指定在关闭MySQL服务器时是否记录InnoDB缓冲池中缓存的页面，以缩短下次重启时的预热过程。</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown &#x3D; 1</span><br><span class="line">#定义InnoDB系统表空间数据文件的名称，大小和属性 。</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:1G:autoextend</span><br><span class="line">#每秒钟写入并刷新日志N。。</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line">#InnoDB 用于写入磁盘上的日志文件的缓冲区的大小。</span><br><span class="line">innodb_log_buffer_size &#x3D; 32M</span><br><span class="line">#在每个字节大小日志文件在日志组。</span><br><span class="line">innodb_log_file_size &#x3D; 1G</span><br><span class="line">#日志文件中日志组数量，InnoDB以循环方式写入文件。</span><br><span class="line">innodb_log_files_in_group &#x3D; 4</span><br><span class="line">#定义撤消表空间的阈值大小。</span><br><span class="line">innodb_max_undo_log_size &#x3D; 4G</span><br><span class="line">#InnoDB创建撤消表空间 的路径。通常用于将撤消日志放置在其他存储设备上。</span><br><span class="line">innodb_undo_directory &#x3D; &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;undolog</span><br><span class="line">#所使用的撤消表空间的InnoDB数量。</span><br><span class="line">innodb_undo_tablespaces &#x3D; 95</span><br><span class="line">#变量定义了可用于InnoDB后台任务的IOPS，例如从缓冲池刷新页面和合并来自更改缓冲区的数据。</span><br><span class="line">innodb_io_capacity &#x3D; 2000</span><br><span class="line">#如果刷新较慢，则InnoDB可以比innodb_io_capacity变量定义更高的IOPS更积极地进行刷新。</span><br><span class="line">innodb_io_capacity_max &#x3D; 4000</span><br><span class="line">#0为遵守innodb_io_capacity定义 1为不遵守innodb_io_capacity定义 。</span><br><span class="line">innodb_flush_sync &#x3D; 0</span><br><span class="line">#指定是否冲洗从一个页面InnoDB 缓冲池也可以清空其他脏页在相同的程度。</span><br><span class="line">innodb_flush_neighbors &#x3D; 0</span><br><span class="line">#一个影响缓冲池刷新操作的算法和启发式方法的参数。</span><br><span class="line">innodb_lru_scan_depth &#x3D; 4000</span><br><span class="line">#InnoDB 事务在放弃之前等待行锁定的时间长度（以秒为单位）。</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 5</span><br><span class="line">#写入操作的I &#x2F; O线程数 InnoDB。</span><br><span class="line">innodb_write_io_threads &#x3D; 8</span><br><span class="line">#读取操作的I &#x2F; O线程数 InnoDB。</span><br><span class="line">innodb_read_io_threads &#x3D; 8</span><br><span class="line">#专用于InnoDB清除操作的后台线程数 。</span><br><span class="line">innodb_purge_threads &#x3D; 4</span><br><span class="line">#从缓冲池实例中刷新脏页面的页面清洁程序线程数。</span><br><span class="line">innodb_page_cleaners &#x3D; 4</span><br><span class="line">#InnoDB尝试从缓冲池刷新数据，使脏页百分比不超过此值。</span><br><span class="line">innodb_max_dirty_pages_pct &#x3D; 50</span><br><span class="line">#定义用于将数据刷新到InnoDB数据文件和日志文件的方法，这会影响I&#x2F;O吞吐量。</span><br><span class="line">innodb_flush_method &#x3D; O_DIRECT</span><br><span class="line">#指定如何生成和验证存储在表空间的磁盘块中的校验。</span><br><span class="line">innodb_checksum_algorithm &#x3D; crc32</span><br><span class="line">#InnoDB 默认情况下，仅回滚事务超时上的最后一条语句。</span><br><span class="line">innodb_rollback_on_timeout &#x3D; 1</span><br><span class="line">#当启用该选项，所有信息死锁在InnoDB用户交易被记录在 mysqld 错误日志。</span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1</span><br><span class="line">#当innodb_file_per_table启用时，在文件的每个表的表空间默认创建的表。</span><br><span class="line">innodb_file_per_table &#x3D; 1</span><br><span class="line">#指定在表的在线DDL操作期间使用的临时日志文件的大小的上限（以字节为单位）InnoDB。</span><br><span class="line">innodb_online_alter_log_max_size &#x3D; 4G</span><br><span class="line">#仅当优化器统计信息配置为非持久性时，此选项才适用 。</span><br><span class="line">innodb_stats_on_metadata &#x3D; 0</span><br><span class="line">#InnoDB可以在从磁盘读取的所有表空间页上使用校验和验证，以确保对硬件故障或损坏的数据文件具有额外的容错能力。</span><br><span class="line">innodb_checksums &#x3D; 1</span><br><span class="line">#定义所使用的回滚段数 InnoDB。</span><br><span class="line">innodb_undo_logs &#x3D; 128</span><br><span class="line">##启用InnoDB的status file，便于管理员查看以及监控等</span><br><span class="line">innodb_status_file &#x3D; 1</span><br><span class="line">#启用或禁用标准InnoDBMonitor的定期输出。</span><br><span class="line">innodb_status_output &#x3D; 0</span><br><span class="line">#启用或禁用InnoDB锁定监视器</span><br><span class="line">innodb_status_output_locks &#x3D; 0</span><br><span class="line">#启用此选项后InnoDB，使用DYNAMIC 或 COMPRESSED 行格式的表 允许长度超过767字节（最大3072字节）的索引键前缀 。</span><br><span class="line">innodb_large_prefix &#x3D; 1</span><br><span class="line">#InnoDB尝试使内部并发的操作系统线程数保持InnoDB小于或等于此变量给定的限制（InnoDB使用操作系统线程来处理用户事务）值0（默认值）被解释为无限并发（不进行并发检查）</span><br><span class="line">innodb_thread_concurrency &#x3D; 0</span><br><span class="line">#InnoDB线程在挂起线程之前 等待 互斥量释放的次数。</span><br><span class="line">innodb_sync_spin_loops &#x3D; 100</span><br><span class="line">#自旋锁定的 两次轮询之间的最大延迟 </span><br><span class="line">innodb_spin_wait_delay &#x3D; 30</span><br><span class="line">#指定MySQL可同时打开.ibd文件的最大个数，最小为10，默认300。此选项只针对InnoDB表打开的.ibd文件描述符，独立于open_files_limit。</span><br><span class="line">innodb_open_files &#x3D; 655350  </span><br><span class="line">#当innodb_strict_mode启用时，InnoDB将返回错误，而不是警告了一定的条件。</span><br><span class="line">innodb_strict_mode &#x3D; 1</span><br><span class="line">#指定在创建InnoDB索引期间用于对数据进行排序的排序缓冲区的大小。</span><br><span class="line">innodb_sort_buffer_size &#x3D; 67108864 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#innodb monitor</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_innodb&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_server&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_dml&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ddl&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_trx&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_os&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_purge&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_log&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_lock&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_index&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_ibuf_system&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_buffer_page&quot;</span><br><span class="line">innodb_monitor_enable&#x3D;&quot;module_adaptive_hash&quot;</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>配置环境变量 vim /etc/profile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;lib64&#x2F;qt-3.3&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;root&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin</span><br></pre></td></tr></table></figure><p>加载配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; cd &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">shell&gt; bin&#x2F;mysqld  --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F; --datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F; --user&#x3D;mysql  --initialize</span><br><span class="line">shell&gt; cp support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysql.server</span><br></pre></td></tr></table></figure><p>初始化数据库（为了安全管理，root账号只能本机登陆）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; &#x2F;etc&#x2F;init.d&#x2F;mysql.server start&#x2F;stop</span><br><span class="line">#启动&#x2F;关闭mysql</span><br><span class="line">shell&gt; cat &#x2F;data&#x2F;mysql&#x2F;mysql3306&#x2F;data&#x2F;error.log|grep pass</span><br><span class="line">#查询的密码是第一次登陆的密码</span><br><span class="line">mysql -u root -p</span><br><span class="line">#密码为cat到的密码</span><br><span class="line">root@dev-data-01 15:49:  [(none)]&gt; set password&#x3D;&#39;123456&#39;;</span><br><span class="line">#进入数据库第一次需要修改密码</span><br><span class="line"></span><br><span class="line">添加超级管理员并且支持远程登陆</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;admin&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39; WITH GRANT OPTION;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="至此，mysql安装已完成"><a href="#至此，mysql安装已完成" class="headerlink" title="至此，mysql安装已完成"></a>至此，mysql安装已完成</h2><p>有建议或疑问欢迎留言</p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费申请证书的方法</title>
      <link href="/2020/04/30/ssl/ssl-request/"/>
      <url>/2020/04/30/ssl/ssl-request/</url>
      
        <content type="html"><![CDATA[<h2 id="申请地址"><a href="#申请地址" class="headerlink" title="申请地址"></a>申请地址</h2><p><a href="https://freessl.cn/" target="_blank" rel="noopener">https://freessl.cn/</a></p><h2 id="申请步骤"><a href="#申请步骤" class="headerlink" title="申请步骤"></a>申请步骤</h2><h3 id="选择需要申请SSL证书域名"><a href="#选择需要申请SSL证书域名" class="headerlink" title="选择需要申请SSL证书域名"></a>选择需要申请SSL证书域名</h3><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL01.jpg"  alt="SSL01.jpg"></p><h3 id="选择证书类型并创建"><a href="#选择证书类型并创建" class="headerlink" title="选择证书类型并创建"></a>选择证书类型并创建</h3><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL02.jpg"  alt="SSL02.jpg"></p><h3 id="下载KeyManager客户端"><a href="#下载KeyManager客户端" class="headerlink" title="下载KeyManager客户端"></a>下载KeyManager客户端</h3><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL03.jpg"  alt="SSL03.jpg"></p><h3 id="DNS验证"><a href="#DNS验证" class="headerlink" title="DNS验证"></a>DNS验证</h3><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL04.jpg"  alt="SSL04.jpg"></p><h3 id="导出证书"><a href="#导出证书" class="headerlink" title="导出证书"></a>导出证书</h3><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL05.jpg"  alt="SSL05.jpg"></p><h2 id="配置证书"><a href="#配置证书" class="headerlink" title="配置证书"></a>配置证书</h2><h3 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h3><p>解压证书并放到服务器文件里，解压完的文件有2个:xxx.crt、xxx.key</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL06.jpg"  alt="SSL06.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx CA]#cd &#x2F;CA</span><br><span class="line">[root@nginx CA]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 3570 Apr 30 14:15 xxx.crt</span><br><span class="line">-rw-r--r-- 1 root root 1679 Apr 30 14:15 xxx.key</span><br></pre></td></tr></table></figure><p>配置nginx.conf 添加此证书</p><pre><code>server {    listen       443 ssl http2;    server_name  xxx.com;    root         /usr/share/nginx/html;    ssl_certificate &quot;/ca/xxx.crt&quot;;    ssl_certificate_key &quot;/ca/xxx.key&quot;;    ssl_session_cache shared:SSL:1m;    ssl_session_timeout  10m;    ssl_ciphers HIGH:!aNULL:!MD5;    ssl_prefer_server_ciphers on;    include /etc/nginx/default.d/*.conf;    location / {        proxy_pass http://172.31.22.31:8082;        proxy_set_header   Host             $proxy_host;        proxy_set_header   X-Real-IP        $remote_addr;        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;        proxy_set_header   X-Forwarded-Host $host;        proxy_set_header   X-Forwarded-Server $host;        client_max_body_size 100m;        client_body_buffer_size 100m;    }    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}</code></pre><p>添加完成后需要重启nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><h3 id="kubernetes集群添加证书"><a href="#kubernetes集群添加证书" class="headerlink" title="kubernetes集群添加证书"></a>kubernetes集群添加证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@dev-master-01 CA]#cd &#x2F;CA</span><br><span class="line">[root@dev-master-01 CA]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 3570 Apr 30 14:15 xxx.crt</span><br><span class="line">-rw-r--r-- 1 root root 1679 Apr 30 14:15 xxx.key</span><br><span class="line"></span><br><span class="line">kubectl create secret tls xxx.com --cert&#x3D;xxx.crt --key&#x3D;xxx.key</span><br></pre></td></tr></table></figure><h3 id="腾讯云平台添加证书"><a href="#腾讯云平台添加证书" class="headerlink" title="腾讯云平台添加证书"></a>腾讯云平台添加证书</h3><p>登陆腾讯云<br><a href="https://console.cloud.tencent.com/ssl" target="_blank" rel="noopener">https://console.cloud.tencent.com/ssl</a><br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/SSL/SSL07.jpg"  alt="SSL07.jpg"><br>上传证书保存即可</p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> SSL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql导入导出亿条数据（排坑篇）</title>
      <link href="/2020/04/28/mysql/mysql-climbing/"/>
      <url>/2020/04/28/mysql/mysql-climbing/</url>
      
        <content type="html"><![CDATA[<h3 id="背景：公司业务需要给某个活动的支付宝用户发送模板消息"><a href="#背景：公司业务需要给某个活动的支付宝用户发送模板消息" class="headerlink" title="背景：公司业务需要给某个活动的支付宝用户发送模板消息"></a>背景：公司业务需要给某个活动的支付宝用户发送模板消息</h3><p>经调查发现，此次活动的用户数量大约2亿，为了模拟生产环境，领导让我把生产库的用户信息（脱敏）拉到开发库，让开发写好程序读取数据并推送消息。</p><h3 id="排坑1：Navicat"><a href="#排坑1：Navicat" class="headerlink" title="排坑1：Navicat"></a>排坑1：Navicat</h3><p>由于我对Mysql不是很了解，在数据同步前我事先问了下公司的DBA应该如何操作：使用navicat的数据传输功能。</p><h4 id="环境：Navicat-Premium-12"><a href="#环境：Navicat-Premium-12" class="headerlink" title="环境：Navicat Premium 12"></a>环境：Navicat Premium 12</h4><ul><li>操作：</li><li>1.点击工具列表的数据传输 </li><li>2.选择源数据库及目标数据库</li><li>3.选择表（默认全表）</li><li>4.点击开始<br><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Mysql/1/mysql01.jpg"  alt="mysql01.jpg"></li></ul><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Mysql/1/mysql02.jpg"  alt="mysql02.jpg"></p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/chenyu1st/chenyu-cdn@master/rugod.cn/Mysql/1/mysql03.jpg"  alt="mysql03.jpg"></p><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p>数据传输速度大约1分钟20w条数据，传完大概得8个多小时，我挂机了一段时间后再看进度发现数据传输到百分之11的时候失败了，报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Multi-statement transaction required more than ‘max_binlog_cache_size’ bytes of storage; increase this mysqld variable and try again</span><br></pre></td></tr></table></figure><p>百度之后发现<br>这是由于更新和删除的大事务会写入大量binlog，可能会造成binlog cache过小而导致执行失败。</p><p>具体解决方法为如下：</p><p>查看max_binlog_cache_size大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#39;max_binlog_cache_size&#39;;</span><br><span class="line">+-----------------------+-----------+</span><br><span class="line">| Variable_name         | Value     |</span><br><span class="line">+-----------------------+-----------+</span><br><span class="line">| max_binlog_cache_size | 134217728 |</span><br><span class="line">+-----------------------+-----------+</span><br></pre></td></tr></table></figure><p>查看该参数设置为134217728B，即128MB。</p><p>此参数可以动态修改，修改该参数为40GB。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global max_binlog_cache_size&#x3D;40*1024*1024*1024;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br></pre></td></tr></table></figure><p>为了防止数据库重启后还出现此问题，还需要在/etc/my.cnf里修改max_binlog_cache_size的值。</p><h3 id="排坑2：mysqldump"><a href="#排坑2：mysqldump" class="headerlink" title="排坑2：mysqldump"></a>排坑2：mysqldump</h3><p>由于用navicat传输速度实在过慢，听取DBA建议后直接采用mysqldump的方式。</p><p>基本用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">导出</span><br><span class="line">mysqldump -uxxx -pxx 库名   表名  &gt; bak.sql</span><br><span class="line">还原</span><br><span class="line">mysql -uxxx -pxxx 库名 &lt; bak.sql</span><br></pre></td></tr></table></figure><p>导出完之后再还原到目标数据库后出现了和上个坑一样的问题：max_binlog_cache_size过小。</p><h3 id="排坑3：select-into-outfile"><a href="#排坑3：select-into-outfile" class="headerlink" title="排坑3：select into outfile"></a>排坑3：select into outfile</h3><p>在上述问题还没找到解决方法的时候继续百度发现了还有一种方法可以解决问题。</p><p>MySQL自带的导出语句：select into outfile语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM db --可以加where条件</span><br><span class="line">INTO OUTFILE &quot;&#x2F;data&#x2F;bak.txt&quot; --导出文件位置</span><br><span class="line">FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&quot;&#39; -- 字段分割符和包含符</span><br><span class="line">LINES TERMINATED BY &#39;\n&#39;;--换行符</span><br></pre></td></tr></table></figure><p>但是在执行的时候出现报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</span><br></pre></td></tr></table></figure><p>查看官方文档，secure_file_priv参数用于限制LOAD DATA, SELECT …OUTFILE, LOAD_FILE()传到哪个指定目录。</p><ul><li>secure_file_priv 为 null 时，表示限制mysqld不允许导入或导出。</li><li>secure_file_priv 为 /tmp 时，表示限制mysqld只能在/tmp目录中执行导入导出，其他目录不能执行。</li><li>secure_file_priv 没有值时，表示不限制mysqld在任意目录的导入导出。</li></ul><p>查看secure_file_priv命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#39;%secure_file_priv%&#39;;</span><br></pre></td></tr></table></figure><p>而且此参数不能直接修改，必须在/ete/my.cnf里添加（默认没有这个参数）并且重启mysql。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secure_file_priv&#x3D;&#39;&#x2F;data&#39;</span><br></pre></td></tr></table></figure><p>然后执行完导出语句后发现又报错：文件权限不足，原因是data文件夹是root所有，而mysql导出到文件的执行者为mysql用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 &#x2F;data</span><br></pre></td></tr></table></figure><p>赋权后导出文件终于没问题了，然后再执行导入文件的的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">load data infile &#39;&#x2F;data&#x2F;bak.txt&#39; --默认指定服务器文件夹</span><br><span class="line">ignore into table xx --允许重复记录插入</span><br><span class="line">fields terminated by &#39;,&#39;  --判断字段通过逗号标识来分隔开</span><br><span class="line">lines terminated by &#39;\n&#39;(CustID,DeviceNo,logintype);--通过换行标识来解析成为每一条数据和插入到我指定的字段</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>2亿多条数据的文件29G，导出速度最快的还是mysqldump方法，但是导入最稳定的我认为还是select into outfile方法，因为容错高，mysqldump的文件就一句insert（29G<br>的数据），执行失败就浪费了太多时间，但是select into outfile即使执行失败也能插入执行成功的数据（要是一条都没插进去当我没说- -）不会太浪费时间。最后提醒大家，大数据量的传输千万不要用navicat，很容易假死。最后补一句：太依赖可视化界面的软件很难成长起来，以后我尽量进服务器敲命令。</p><p>任务总算完成了，花了不少时间，趁机补习了好多mysql的知识，对于上面的问题其实还有优化的思路，只不过没时间去实验了，如果有幸看到我的博客并且也出现了我遇到的问题可以尝试下我的想法。</p><ul><li>临时关闭binlog日志。</li><li>如果你的目标表数据为空，可以先删索引，再导入数据，最后再加上索引。</li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://blog.csdn.net/qq_21108311/java/article/details/82559119" target="_blank" rel="noopener">MySQL 亿级数据导入导出/数据迁移笔记</a></p><p><a href="https://www.cnblogs.com/gjc592/p/12774209.html" target="_blank" rel="noopener">mysql参数max_binlog_cache_size设置不当引发的血案</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqldump-sql-format.html" target="_blank" rel="noopener">mysql官方文档</a></p><hr><p>版权声明：</p><p>原创不易，洗文可耻。除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
